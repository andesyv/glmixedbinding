
#pragma once


#include <glmixedbinding/glmixedbinding_api.h>

#include <glmixedbinding/noglmixed.h>
#include <glmixedbinding/glmixed/types.h>


namespace glmixed
{


GLMIXEDBINDING_API void glAccum(GLenum op, GLfloat value);
GLMIXEDBINDING_API void glAccumxOES(GLenum op, GLfixed value);
GLMIXEDBINDING_API GLboolean glAcquireKeyedMutexWin32EXT(GLuint memory, GLuint64 key, GLuint timeout);
GLMIXEDBINDING_API void glActiveProgramEXT(GLuint program);
GLMIXEDBINDING_API void glActiveShaderProgram(GLuint pipeline, GLuint program);
GLMIXEDBINDING_API void glActiveShaderProgramEXT(GLuint pipeline, GLuint program);
GLMIXEDBINDING_API void glActiveStencilFaceEXT(GLenum face);
GLMIXEDBINDING_API void glActiveTexture(GLenum texture);
GLMIXEDBINDING_API void glActiveTextureARB(GLenum texture);
GLMIXEDBINDING_API void glActiveVaryingNV(GLuint program, const GLchar * name);
GLMIXEDBINDING_API void glAlphaFragmentOp1ATI(GLenum op, GLuint dst, FragmentShaderDestModMaskATI dstMod, GLuint arg1, GLuint arg1Rep, FragmentShaderColorModMaskATI arg1Mod);
GLMIXEDBINDING_API void glAlphaFragmentOp2ATI(GLenum op, GLuint dst, FragmentShaderDestModMaskATI dstMod, GLuint arg1, GLuint arg1Rep, FragmentShaderColorModMaskATI arg1Mod, GLuint arg2, GLuint arg2Rep, FragmentShaderColorModMaskATI arg2Mod);
GLMIXEDBINDING_API void glAlphaFragmentOp3ATI(GLenum op, GLuint dst, FragmentShaderDestModMaskATI dstMod, GLuint arg1, GLuint arg1Rep, FragmentShaderColorModMaskATI arg1Mod, GLuint arg2, GLuint arg2Rep, FragmentShaderColorModMaskATI arg2Mod, GLuint arg3, GLuint arg3Rep, FragmentShaderColorModMaskATI arg3Mod);
GLMIXEDBINDING_API void glAlphaFunc(GLenum func, GLfloat ref);
GLMIXEDBINDING_API void glAlphaFuncQCOM(GLenum func, GLclampf ref);
GLMIXEDBINDING_API void glAlphaFuncxOES(GLenum func, GLfixed ref);
GLMIXEDBINDING_API void glAlphaToCoverageDitherControlNV(GLenum mode);
GLMIXEDBINDING_API void glApplyFramebufferAttachmentCMAAINTEL();
GLMIXEDBINDING_API void glApplyTextureEXT(GLenum mode);
GLMIXEDBINDING_API GLboolean glAreProgramsResidentNV(GLsizei n, const GLuint * programs, GLboolean * residences);
GLMIXEDBINDING_API GLboolean glAreTexturesResident(GLsizei n, const GLuint * textures, GLboolean * residences);
GLMIXEDBINDING_API GLboolean glAreTexturesResidentEXT(GLsizei n, const GLuint * textures, GLboolean * residences);
GLMIXEDBINDING_API void glArrayElement(GLint i);
GLMIXEDBINDING_API void glArrayElementEXT(GLint i);
GLMIXEDBINDING_API void glArrayObjectATI(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
GLMIXEDBINDING_API GLuint glAsyncCopyBufferSubDataNVX(GLsizei waitSemaphoreCount, const GLuint * waitSemaphoreArray, const GLuint64 * fenceValueArray, GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size, GLsizei signalSemaphoreCount, const GLuint * signalSemaphoreArray, const GLuint64 * signalValueArray);
GLMIXEDBINDING_API GLuint glAsyncCopyImageSubDataNVX(GLsizei waitSemaphoreCount, const GLuint * waitSemaphoreArray, const GLuint64 * waitValueArray, GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth, GLsizei signalSemaphoreCount, const GLuint * signalSemaphoreArray, const GLuint64 * signalValueArray);
GLMIXEDBINDING_API void glAsyncMarkerSGIX(GLuint marker);
GLMIXEDBINDING_API void glAttachObjectARB(GLhandleARB containerObj, GLhandleARB obj);
GLMIXEDBINDING_API void glAttachShader(GLuint program, GLuint shader);
GLMIXEDBINDING_API void glBegin(GLenum mode);
GLMIXEDBINDING_API void glBeginConditionalRender(GLuint id, GLenum mode);
GLMIXEDBINDING_API void glBeginConditionalRenderNV(GLuint id, GLenum mode);
GLMIXEDBINDING_API void glBeginConditionalRenderNVX(GLuint id);
GLMIXEDBINDING_API void glBeginFragmentShaderATI();
GLMIXEDBINDING_API void glBeginOcclusionQueryNV(GLuint id);
GLMIXEDBINDING_API void glBeginPerfMonitorAMD(GLuint monitor);
GLMIXEDBINDING_API void glBeginPerfQueryINTEL(GLuint queryHandle);
GLMIXEDBINDING_API void glBeginQuery(GLenum target, GLuint id);
GLMIXEDBINDING_API void glBeginQueryARB(GLenum target, GLuint id);
GLMIXEDBINDING_API void glBeginQueryEXT(GLenum target, GLuint id);
GLMIXEDBINDING_API void glBeginQueryIndexed(GLenum target, GLuint index, GLuint id);
GLMIXEDBINDING_API void glBeginTransformFeedback(GLenum primitiveMode);
GLMIXEDBINDING_API void glBeginTransformFeedbackEXT(GLenum primitiveMode);
GLMIXEDBINDING_API void glBeginTransformFeedbackNV(GLenum primitiveMode);
GLMIXEDBINDING_API void glBeginVertexShaderEXT();
GLMIXEDBINDING_API void glBeginVideoCaptureNV(GLuint video_capture_slot);
GLMIXEDBINDING_API void glBindAttribLocation(GLuint program, GLuint index, const GLchar * name);
GLMIXEDBINDING_API void glBindAttribLocationARB(GLhandleARB programObj, GLuint index, const GLcharARB * name);
GLMIXEDBINDING_API void glBindBuffer(GLenum target, GLuint buffer);
GLMIXEDBINDING_API void glBindBufferARB(GLenum target, GLuint buffer);
GLMIXEDBINDING_API void glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
GLMIXEDBINDING_API void glBindBufferBaseEXT(GLenum target, GLuint index, GLuint buffer);
GLMIXEDBINDING_API void glBindBufferBaseNV(GLenum target, GLuint index, GLuint buffer);
GLMIXEDBINDING_API void glBindBufferOffsetEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
GLMIXEDBINDING_API void glBindBufferOffsetNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
GLMIXEDBINDING_API void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLMIXEDBINDING_API void glBindBufferRangeEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLMIXEDBINDING_API void glBindBufferRangeNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLMIXEDBINDING_API void glBindBuffersBase(GLenum target, GLuint first, GLsizei count, const GLuint * buffers);
GLMIXEDBINDING_API void glBindBuffersRange(GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes);
GLMIXEDBINDING_API void glBindFragDataLocation(GLuint program, GLuint color, const GLchar * name);
GLMIXEDBINDING_API void glBindFragDataLocationEXT(GLuint program, GLuint color, const GLchar * name);
GLMIXEDBINDING_API void glBindFragDataLocationIndexed(GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
GLMIXEDBINDING_API void glBindFragDataLocationIndexedEXT(GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
GLMIXEDBINDING_API void glBindFragmentShaderATI(GLuint id);
GLMIXEDBINDING_API void glBindFramebuffer(GLenum target, GLuint framebuffer);
GLMIXEDBINDING_API void glBindFramebufferEXT(GLenum target, GLuint framebuffer);
GLMIXEDBINDING_API void glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
GLMIXEDBINDING_API void glBindImageTextureEXT(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
GLMIXEDBINDING_API void glBindImageTextures(GLuint first, GLsizei count, const GLuint * textures);
GLMIXEDBINDING_API GLuint glBindLightParameterEXT(GLenum light, GLenum value);
GLMIXEDBINDING_API GLuint glBindMaterialParameterEXT(GLenum face, GLenum value);
GLMIXEDBINDING_API void glBindMultiTextureEXT(GLenum texunit, GLenum target, GLuint texture);
GLMIXEDBINDING_API GLuint glBindParameterEXT(GLenum value);
GLMIXEDBINDING_API void glBindProgramARB(GLenum target, GLuint program);
GLMIXEDBINDING_API void glBindProgramNV(GLenum target, GLuint id);
GLMIXEDBINDING_API void glBindProgramPipeline(GLuint pipeline);
GLMIXEDBINDING_API void glBindProgramPipelineEXT(GLuint pipeline);
GLMIXEDBINDING_API void glBindRenderbuffer(GLenum target, GLuint renderbuffer);
GLMIXEDBINDING_API void glBindRenderbufferEXT(GLenum target, GLuint renderbuffer);
GLMIXEDBINDING_API void glBindSampler(GLuint unit, GLuint sampler);
GLMIXEDBINDING_API void glBindSamplers(GLuint first, GLsizei count, const GLuint * samplers);
GLMIXEDBINDING_API void glBindShadingRateImageNV(GLuint texture);
GLMIXEDBINDING_API GLuint glBindTexGenParameterEXT(GLenum unit, GLenum coord, GLenum value);
GLMIXEDBINDING_API void glBindTexture(GLenum target, GLuint texture);
GLMIXEDBINDING_API void glBindTextureEXT(GLenum target, GLuint texture);
GLMIXEDBINDING_API void glBindTextures(GLuint first, GLsizei count, const GLuint * textures);
GLMIXEDBINDING_API void glBindTextureUnit(GLuint unit, GLuint texture);
GLMIXEDBINDING_API GLuint glBindTextureUnitParameterEXT(GLenum unit, GLenum value);
GLMIXEDBINDING_API void glBindTransformFeedback(GLenum target, GLuint id);
GLMIXEDBINDING_API void glBindTransformFeedbackNV(GLenum target, GLuint id);
GLMIXEDBINDING_API void glBindVertexArray(GLuint array);
GLMIXEDBINDING_API void glBindVertexArrayAPPLE(GLuint array);
GLMIXEDBINDING_API void glBindVertexArrayOES(GLuint array);
GLMIXEDBINDING_API void glBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLMIXEDBINDING_API void glBindVertexBuffers(GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
GLMIXEDBINDING_API void glBindVertexShaderEXT(GLuint id);
GLMIXEDBINDING_API void glBindVideoCaptureStreamBufferNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
GLMIXEDBINDING_API void glBindVideoCaptureStreamTextureNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
GLMIXEDBINDING_API void glBinormal3bEXT(GLbyte bx, GLbyte by, GLbyte bz);
GLMIXEDBINDING_API void glBinormal3bvEXT(const GLbyte * v);
GLMIXEDBINDING_API void glBinormal3dEXT(GLdouble bx, GLdouble by, GLdouble bz);
GLMIXEDBINDING_API void glBinormal3dvEXT(const GLdouble * v);
GLMIXEDBINDING_API void glBinormal3fEXT(GLfloat bx, GLfloat by, GLfloat bz);
GLMIXEDBINDING_API void glBinormal3fvEXT(const GLfloat * v);
GLMIXEDBINDING_API void glBinormal3iEXT(GLint bx, GLint by, GLint bz);
GLMIXEDBINDING_API void glBinormal3ivEXT(const GLint * v);
GLMIXEDBINDING_API void glBinormal3sEXT(GLshort bx, GLshort by, GLshort bz);
GLMIXEDBINDING_API void glBinormal3svEXT(const GLshort * v);
GLMIXEDBINDING_API void glBinormalPointerEXT(GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glBitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
GLMIXEDBINDING_API void glBitmapxOES(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte * bitmap);
GLMIXEDBINDING_API void glBlendBarrier();
GLMIXEDBINDING_API void glBlendBarrierKHR();
GLMIXEDBINDING_API void glBlendBarrierNV();
GLMIXEDBINDING_API void glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLMIXEDBINDING_API void glBlendColorEXT(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLMIXEDBINDING_API void glBlendColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLMIXEDBINDING_API void glBlendEquation(GLenum mode);
GLMIXEDBINDING_API void glBlendEquationEXT(GLenum mode);
GLMIXEDBINDING_API void glBlendEquationi(GLuint buf, GLenum mode);
GLMIXEDBINDING_API void glBlendEquationiARB(GLuint buf, GLenum mode);
GLMIXEDBINDING_API void glBlendEquationiEXT(GLuint buf, GLenum mode);
GLMIXEDBINDING_API void glBlendEquationIndexedAMD(GLuint buf, GLenum mode);
GLMIXEDBINDING_API void glBlendEquationiOES(GLuint buf, GLenum mode);
GLMIXEDBINDING_API void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
GLMIXEDBINDING_API void glBlendEquationSeparateEXT(GLenum modeRGB, GLenum modeAlpha);
GLMIXEDBINDING_API void glBlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLMIXEDBINDING_API void glBlendEquationSeparateiARB(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLMIXEDBINDING_API void glBlendEquationSeparateiEXT(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLMIXEDBINDING_API void glBlendEquationSeparateIndexedAMD(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLMIXEDBINDING_API void glBlendEquationSeparateiOES(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLMIXEDBINDING_API void glBlendFunc(GLenum sfactor, GLenum dfactor);
GLMIXEDBINDING_API void glBlendFunci(GLuint buf, GLenum src, GLenum dst);
GLMIXEDBINDING_API void glBlendFunciARB(GLuint buf, GLenum src, GLenum dst);
GLMIXEDBINDING_API void glBlendFunciEXT(GLuint buf, GLenum src, GLenum dst);
GLMIXEDBINDING_API void glBlendFuncIndexedAMD(GLuint buf, GLenum src, GLenum dst);
GLMIXEDBINDING_API void glBlendFunciOES(GLuint buf, GLenum src, GLenum dst);
GLMIXEDBINDING_API void glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLMIXEDBINDING_API void glBlendFuncSeparateEXT(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLMIXEDBINDING_API void glBlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLMIXEDBINDING_API void glBlendFuncSeparateiARB(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLMIXEDBINDING_API void glBlendFuncSeparateiEXT(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLMIXEDBINDING_API void glBlendFuncSeparateIndexedAMD(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLMIXEDBINDING_API void glBlendFuncSeparateINGR(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLMIXEDBINDING_API void glBlendFuncSeparateiOES(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLMIXEDBINDING_API void glBlendParameteriNV(GLenum pname, GLint value);
GLMIXEDBINDING_API void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, ClearBufferMask mask, GLenum filter);
GLMIXEDBINDING_API void glBlitFramebufferANGLE(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, ClearBufferMask mask, GLenum filter);
GLMIXEDBINDING_API void glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, ClearBufferMask mask, GLenum filter);
GLMIXEDBINDING_API void glBlitFramebufferLayerEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint srcLayer, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLint dstLayer, ClearBufferMask mask, GLenum filter);
GLMIXEDBINDING_API void glBlitFramebufferLayersEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, ClearBufferMask mask, GLenum filter);
GLMIXEDBINDING_API void glBlitFramebufferNV(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, ClearBufferMask mask, GLenum filter);
GLMIXEDBINDING_API void glBlitNamedFramebuffer(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, ClearBufferMask mask, GLenum filter);
GLMIXEDBINDING_API void glBufferAddressRangeNV(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
GLMIXEDBINDING_API void glBufferAttachMemoryNV(GLenum target, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glBufferData(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
GLMIXEDBINDING_API void glBufferDataARB(GLenum target, GLsizeiptrARB size, const void * data, GLenum usage);
GLMIXEDBINDING_API void glBufferPageCommitmentARB(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
GLMIXEDBINDING_API void glBufferPageCommitmentMemNV(GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
GLMIXEDBINDING_API void glBufferParameteriAPPLE(GLenum target, GLenum pname, GLint param);
GLMIXEDBINDING_API void glBufferStorage(GLenum target, GLsizeiptr size, const void * data, BufferStorageMask flags);
GLMIXEDBINDING_API void glBufferStorageEXT(GLenum target, GLsizeiptr size, const void * data, BufferStorageMask flags);
GLMIXEDBINDING_API void glBufferStorageExternalEXT(GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, BufferStorageMask flags);
GLMIXEDBINDING_API void glBufferStorageMemEXT(GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
GLMIXEDBINDING_API void glBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void * data);
GLMIXEDBINDING_API void glCallCommandListNV(GLuint list);
GLMIXEDBINDING_API void glCallList(GLuint list);
GLMIXEDBINDING_API void glCallLists(GLsizei n, GLenum type, const void * lists);
GLMIXEDBINDING_API GLenum glCheckFramebufferStatus(GLenum target);
GLMIXEDBINDING_API GLenum glCheckFramebufferStatusEXT(GLenum target);
GLMIXEDBINDING_API GLenum glCheckNamedFramebufferStatus(GLuint framebuffer, GLenum target);
GLMIXEDBINDING_API GLenum glCheckNamedFramebufferStatusEXT(GLuint framebuffer, GLenum target);
GLMIXEDBINDING_API void glClampColor(GLenum target, GLenum clamp);
GLMIXEDBINDING_API void glClampColorARB(GLenum target, GLenum clamp);
GLMIXEDBINDING_API void glClear(ClearBufferMask mask);
GLMIXEDBINDING_API void glClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLMIXEDBINDING_API void glClearAccumxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLMIXEDBINDING_API void glClearBufferData(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
GLMIXEDBINDING_API void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
GLMIXEDBINDING_API void glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat * value);
GLMIXEDBINDING_API void glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint * value);
GLMIXEDBINDING_API void glClearBufferSubData(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
GLMIXEDBINDING_API void glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint * value);
GLMIXEDBINDING_API void glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLMIXEDBINDING_API void glClearColorIiEXT(GLint red, GLint green, GLint blue, GLint alpha);
GLMIXEDBINDING_API void glClearColorIuiEXT(GLuint red, GLuint green, GLuint blue, GLuint alpha);
GLMIXEDBINDING_API void glClearColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLMIXEDBINDING_API void glClearDepth(GLdouble depth);
GLMIXEDBINDING_API void glClearDepthdNV(GLdouble depth);
GLMIXEDBINDING_API void glClearDepthf(GLfloat d);
GLMIXEDBINDING_API void glClearDepthfOES(GLclampf depth);
GLMIXEDBINDING_API void glClearDepthxOES(GLfixed depth);
GLMIXEDBINDING_API void glClearIndex(GLfloat c);
GLMIXEDBINDING_API void glClearNamedBufferData(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
GLMIXEDBINDING_API void glClearNamedBufferDataEXT(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
GLMIXEDBINDING_API void glClearNamedBufferSubData(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
GLMIXEDBINDING_API void glClearNamedBufferSubDataEXT(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
GLMIXEDBINDING_API void glClearNamedFramebufferfi(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
GLMIXEDBINDING_API void glClearNamedFramebufferfv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value);
GLMIXEDBINDING_API void glClearNamedFramebufferiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value);
GLMIXEDBINDING_API void glClearNamedFramebufferuiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value);
GLMIXEDBINDING_API void glClearPixelLocalStorageuiEXT(GLsizei offset, GLsizei n, const GLuint * values);
GLMIXEDBINDING_API void glClearStencil(GLint s);
GLMIXEDBINDING_API void glClearTexImage(GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
GLMIXEDBINDING_API void glClearTexImageEXT(GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
GLMIXEDBINDING_API void glClearTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
GLMIXEDBINDING_API void glClearTexSubImageEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
GLMIXEDBINDING_API void glClientActiveTexture(GLenum texture);
GLMIXEDBINDING_API void glClientActiveTextureARB(GLenum texture);
GLMIXEDBINDING_API void glClientActiveVertexStreamATI(GLenum stream);
GLMIXEDBINDING_API void glClientAttribDefaultEXT(ClientAttribMask mask);
GLMIXEDBINDING_API void glClientWaitSemaphoreui64NVX(GLsizei fenceObjectCount, const GLuint * semaphoreArray, const GLuint64 * fenceValueArray);
GLMIXEDBINDING_API GLenum glClientWaitSync(GLsync sync, SyncObjectMask flags, GLuint64 timeout);
GLMIXEDBINDING_API GLenum glClientWaitSyncAPPLE(GLsync sync, SyncObjectMask flags, GLuint64 timeout);
GLMIXEDBINDING_API void glClipControl(GLenum origin, GLenum depth);
GLMIXEDBINDING_API void glClipControlEXT(GLenum origin, GLenum depth);
GLMIXEDBINDING_API void glClipPlane(GLenum plane, const GLdouble * equation);
GLMIXEDBINDING_API void glClipPlanefOES(GLenum plane, const GLfloat * equation);
GLMIXEDBINDING_API void glClipPlanexOES(GLenum plane, const GLfixed * equation);
GLMIXEDBINDING_API void glColor3b(GLbyte red, GLbyte green, GLbyte blue);
GLMIXEDBINDING_API void glColor3bv(const GLbyte * v);
GLMIXEDBINDING_API void glColor3d(GLdouble red, GLdouble green, GLdouble blue);
GLMIXEDBINDING_API void glColor3dv(const GLdouble * v);
GLMIXEDBINDING_API void glColor3f(GLfloat red, GLfloat green, GLfloat blue);
GLMIXEDBINDING_API void glColor3fv(const GLfloat * v);
GLMIXEDBINDING_API void glColor3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glColor3fVertex3fvSUN(const GLfloat * c, const GLfloat * v);
GLMIXEDBINDING_API void glColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
GLMIXEDBINDING_API void glColor3hvNV(const GLhalfNV * v);
GLMIXEDBINDING_API void glColor3i(GLint red, GLint green, GLint blue);
GLMIXEDBINDING_API void glColor3iv(const GLint * v);
GLMIXEDBINDING_API void glColor3s(GLshort red, GLshort green, GLshort blue);
GLMIXEDBINDING_API void glColor3sv(const GLshort * v);
GLMIXEDBINDING_API void glColor3ub(GLubyte red, GLubyte green, GLubyte blue);
GLMIXEDBINDING_API void glColor3ubv(const GLubyte * v);
GLMIXEDBINDING_API void glColor3ui(GLuint red, GLuint green, GLuint blue);
GLMIXEDBINDING_API void glColor3uiv(const GLuint * v);
GLMIXEDBINDING_API void glColor3us(GLushort red, GLushort green, GLushort blue);
GLMIXEDBINDING_API void glColor3usv(const GLushort * v);
GLMIXEDBINDING_API void glColor3xOES(GLfixed red, GLfixed green, GLfixed blue);
GLMIXEDBINDING_API void glColor3xvOES(const GLfixed * components);
GLMIXEDBINDING_API void glColor4b(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
GLMIXEDBINDING_API void glColor4bv(const GLbyte * v);
GLMIXEDBINDING_API void glColor4d(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
GLMIXEDBINDING_API void glColor4dv(const GLdouble * v);
GLMIXEDBINDING_API void glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLMIXEDBINDING_API void glColor4fNormal3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glColor4fNormal3fVertex3fvSUN(const GLfloat * c, const GLfloat * n, const GLfloat * v);
GLMIXEDBINDING_API void glColor4fv(const GLfloat * v);
GLMIXEDBINDING_API void glColor4hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
GLMIXEDBINDING_API void glColor4hvNV(const GLhalfNV * v);
GLMIXEDBINDING_API void glColor4i(GLint red, GLint green, GLint blue, GLint alpha);
GLMIXEDBINDING_API void glColor4iv(const GLint * v);
GLMIXEDBINDING_API void glColor4s(GLshort red, GLshort green, GLshort blue, GLshort alpha);
GLMIXEDBINDING_API void glColor4sv(const GLshort * v);
GLMIXEDBINDING_API void glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
GLMIXEDBINDING_API void glColor4ubv(const GLubyte * v);
GLMIXEDBINDING_API void glColor4ubVertex2fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
GLMIXEDBINDING_API void glColor4ubVertex2fvSUN(const GLubyte * c, const GLfloat * v);
GLMIXEDBINDING_API void glColor4ubVertex3fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glColor4ubVertex3fvSUN(const GLubyte * c, const GLfloat * v);
GLMIXEDBINDING_API void glColor4ui(GLuint red, GLuint green, GLuint blue, GLuint alpha);
GLMIXEDBINDING_API void glColor4uiv(const GLuint * v);
GLMIXEDBINDING_API void glColor4us(GLushort red, GLushort green, GLushort blue, GLushort alpha);
GLMIXEDBINDING_API void glColor4usv(const GLushort * v);
GLMIXEDBINDING_API void glColor4xOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLMIXEDBINDING_API void glColor4xvOES(const GLfixed * components);
GLMIXEDBINDING_API void glColorFormatNV(GLint size, GLenum type, GLsizei stride);
GLMIXEDBINDING_API void glColorFragmentOp1ATI(GLenum op, GLuint dst, FragmentShaderDestMaskATI dstMask, FragmentShaderDestModMaskATI dstMod, GLuint arg1, GLuint arg1Rep, FragmentShaderColorModMaskATI arg1Mod);
GLMIXEDBINDING_API void glColorFragmentOp2ATI(GLenum op, GLuint dst, FragmentShaderDestMaskATI dstMask, FragmentShaderDestModMaskATI dstMod, GLuint arg1, GLuint arg1Rep, FragmentShaderColorModMaskATI arg1Mod, GLuint arg2, GLuint arg2Rep, FragmentShaderColorModMaskATI arg2Mod);
GLMIXEDBINDING_API void glColorFragmentOp3ATI(GLenum op, GLuint dst, FragmentShaderDestMaskATI dstMask, FragmentShaderDestModMaskATI dstMod, GLuint arg1, GLuint arg1Rep, FragmentShaderColorModMaskATI arg1Mod, GLuint arg2, GLuint arg2Rep, FragmentShaderColorModMaskATI arg2Mod, GLuint arg3, GLuint arg3Rep, FragmentShaderColorModMaskATI arg3Mod);
GLMIXEDBINDING_API void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLMIXEDBINDING_API void glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLMIXEDBINDING_API void glColorMaskiEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLMIXEDBINDING_API void glColorMaskIndexedEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLMIXEDBINDING_API void glColorMaskiOES(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLMIXEDBINDING_API void glColorMaterial(GLenum face, GLenum mode);
GLMIXEDBINDING_API void glColorP3ui(GLenum type, GLuint color);
GLMIXEDBINDING_API void glColorP3uiv(GLenum type, const GLuint * color);
GLMIXEDBINDING_API void glColorP4ui(GLenum type, GLuint color);
GLMIXEDBINDING_API void glColorP4uiv(GLenum type, const GLuint * color);
GLMIXEDBINDING_API void glColorPointer(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glColorPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLMIXEDBINDING_API void glColorPointerListIBM(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLMIXEDBINDING_API void glColorPointervINTEL(GLint size, GLenum type, const void ** pointer);
GLMIXEDBINDING_API void glColorSubTable(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
GLMIXEDBINDING_API void glColorSubTableEXT(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
GLMIXEDBINDING_API void glColorTable(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
GLMIXEDBINDING_API void glColorTableEXT(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void * table);
GLMIXEDBINDING_API void glColorTableParameterfv(GLenum target, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glColorTableParameterfvSGI(GLenum target, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glColorTableParameteriv(GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glColorTableParameterivSGI(GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glColorTableSGI(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
GLMIXEDBINDING_API void glCombinerInputNV(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
GLMIXEDBINDING_API void glCombinerOutputNV(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
GLMIXEDBINDING_API void glCombinerParameterfNV(GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glCombinerParameterfvNV(GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glCombinerParameteriNV(GLenum pname, GLint param);
GLMIXEDBINDING_API void glCombinerParameterivNV(GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glCombinerStageParameterfvNV(GLenum stage, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glCommandListSegmentsNV(GLuint list, GLuint segments);
GLMIXEDBINDING_API void glCompileCommandListNV(GLuint list);
GLMIXEDBINDING_API void glCompileShader(GLuint shader);
GLMIXEDBINDING_API void glCompileShaderARB(GLhandleARB shaderObj);
GLMIXEDBINDING_API void glCompileShaderIncludeARB(GLuint shader, GLsizei count, const GLchar *const* path, const GLint * length);
GLMIXEDBINDING_API void glCompressedMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
GLMIXEDBINDING_API void glCompressedMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
GLMIXEDBINDING_API void glCompressedMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
GLMIXEDBINDING_API void glCompressedMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
GLMIXEDBINDING_API void glCompressedMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
GLMIXEDBINDING_API void glCompressedMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
GLMIXEDBINDING_API void glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTexImage1DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTexImage2DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTexImage3DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTexSubImage1DARB(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTexSubImage2DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTexSubImage3DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
GLMIXEDBINDING_API void glCompressedTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
GLMIXEDBINDING_API void glCompressedTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
GLMIXEDBINDING_API void glCompressedTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
GLMIXEDBINDING_API void glCompressedTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
GLMIXEDBINDING_API void glCompressedTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLMIXEDBINDING_API void glCompressedTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
GLMIXEDBINDING_API void glConservativeRasterParameterfNV(GLenum pname, GLfloat value);
GLMIXEDBINDING_API void glConservativeRasterParameteriNV(GLenum pname, GLint param);
GLMIXEDBINDING_API void glConvolutionFilter1D(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
GLMIXEDBINDING_API void glConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
GLMIXEDBINDING_API void glConvolutionFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
GLMIXEDBINDING_API void glConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
GLMIXEDBINDING_API void glConvolutionParameterf(GLenum target, GLenum pname, GLfloat params);
GLMIXEDBINDING_API void glConvolutionParameterfEXT(GLenum target, GLenum pname, GLfloat params);
GLMIXEDBINDING_API void glConvolutionParameterfv(GLenum target, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glConvolutionParameterfvEXT(GLenum target, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glConvolutionParameteri(GLenum target, GLenum pname, GLint params);
GLMIXEDBINDING_API void glConvolutionParameteriEXT(GLenum target, GLenum pname, GLint params);
GLMIXEDBINDING_API void glConvolutionParameteriv(GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glConvolutionParameterivEXT(GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glConvolutionParameterxOES(GLenum target, GLenum pname, GLfixed param);
GLMIXEDBINDING_API void glConvolutionParameterxvOES(GLenum target, GLenum pname, const GLfixed * params);
GLMIXEDBINDING_API void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLMIXEDBINDING_API void glCopyBufferSubDataNV(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLMIXEDBINDING_API void glCopyColorSubTable(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
GLMIXEDBINDING_API void glCopyColorSubTableEXT(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
GLMIXEDBINDING_API void glCopyColorTable(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLMIXEDBINDING_API void glCopyColorTableSGI(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLMIXEDBINDING_API void glCopyConvolutionFilter1D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLMIXEDBINDING_API void glCopyConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLMIXEDBINDING_API void glCopyConvolutionFilter2D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glCopyConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glCopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLMIXEDBINDING_API void glCopyImageSubDataEXT(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLMIXEDBINDING_API void glCopyImageSubDataNV(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
GLMIXEDBINDING_API void glCopyImageSubDataOES(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLMIXEDBINDING_API void glCopyMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLMIXEDBINDING_API void glCopyMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLMIXEDBINDING_API void glCopyMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLMIXEDBINDING_API void glCopyMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glCopyMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glCopyNamedBufferSubData(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLMIXEDBINDING_API void glCopyPathNV(GLuint resultPath, GLuint srcPath);
GLMIXEDBINDING_API void glCopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
GLMIXEDBINDING_API void glCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLMIXEDBINDING_API void glCopyTexImage1DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLMIXEDBINDING_API void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLMIXEDBINDING_API void glCopyTexImage2DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLMIXEDBINDING_API void glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLMIXEDBINDING_API void glCopyTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLMIXEDBINDING_API void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glCopyTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glCopyTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glCopyTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glCopyTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLMIXEDBINDING_API void glCopyTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLMIXEDBINDING_API void glCopyTextureLevelsAPPLE(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);
GLMIXEDBINDING_API void glCopyTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLMIXEDBINDING_API void glCopyTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLMIXEDBINDING_API void glCopyTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glCopyTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glCopyTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glCopyTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glCoverageMaskNV(GLboolean mask);
GLMIXEDBINDING_API void glCoverageModulationNV(GLenum components);
GLMIXEDBINDING_API void glCoverageModulationTableNV(GLsizei n, const GLfloat * v);
GLMIXEDBINDING_API void glCoverageOperationNV(GLenum operation);
GLMIXEDBINDING_API void glCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLMIXEDBINDING_API void glCoverFillPathNV(GLuint path, GLenum coverMode);
GLMIXEDBINDING_API void glCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLMIXEDBINDING_API void glCoverStrokePathNV(GLuint path, GLenum coverMode);
GLMIXEDBINDING_API void glCreateBuffers(GLsizei n, GLuint * buffers);
GLMIXEDBINDING_API void glCreateCommandListsNV(GLsizei n, GLuint * lists);
GLMIXEDBINDING_API void glCreateFramebuffers(GLsizei n, GLuint * framebuffers);
GLMIXEDBINDING_API void glCreateMemoryObjectsEXT(GLsizei n, GLuint * memoryObjects);
GLMIXEDBINDING_API void glCreatePerfQueryINTEL(GLuint queryId, GLuint * queryHandle);
GLMIXEDBINDING_API GLuint glCreateProgram();
GLMIXEDBINDING_API GLhandleARB glCreateProgramObjectARB();
GLMIXEDBINDING_API void glCreateProgramPipelines(GLsizei n, GLuint * pipelines);
GLMIXEDBINDING_API GLuint glCreateProgressFenceNVX();
GLMIXEDBINDING_API void glCreateQueries(GLenum target, GLsizei n, GLuint * ids);
GLMIXEDBINDING_API void glCreateRenderbuffers(GLsizei n, GLuint * renderbuffers);
GLMIXEDBINDING_API void glCreateSamplers(GLsizei n, GLuint * samplers);
GLMIXEDBINDING_API void glCreateSemaphoresNV(GLsizei n, GLuint * semaphores);
GLMIXEDBINDING_API GLuint glCreateShader(GLenum type);
GLMIXEDBINDING_API GLhandleARB glCreateShaderObjectARB(GLenum shaderType);
GLMIXEDBINDING_API GLuint glCreateShaderProgramEXT(GLenum type, const GLchar * string);
GLMIXEDBINDING_API GLuint glCreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const* strings);
GLMIXEDBINDING_API GLuint glCreateShaderProgramvEXT(GLenum type, GLsizei count, const GLchar *const* strings);
GLMIXEDBINDING_API void glCreateStatesNV(GLsizei n, GLuint * states);
GLMIXEDBINDING_API GLsync glCreateSyncFromCLeventARB(_cl_context * context, _cl_event * event, GLbitfield flags);
GLMIXEDBINDING_API void glCreateTextures(GLenum target, GLsizei n, GLuint * textures);
GLMIXEDBINDING_API void glCreateTransformFeedbacks(GLsizei n, GLuint * ids);
GLMIXEDBINDING_API void glCreateVertexArrays(GLsizei n, GLuint * arrays);
GLMIXEDBINDING_API void glCullFace(GLenum mode);
GLMIXEDBINDING_API void glCullParameterdvEXT(GLenum pname, GLdouble * params);
GLMIXEDBINDING_API void glCullParameterfvEXT(GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glCurrentPaletteMatrixARB(GLint index);
GLMIXEDBINDING_API void glDebugMessageCallback(GLDEBUGPROC callback, const void * userParam);
GLMIXEDBINDING_API void glDebugMessageCallbackAMD(GLDEBUGPROCAMD callback, void * userParam);
GLMIXEDBINDING_API void glDebugMessageCallbackARB(GLDEBUGPROCARB callback, const void * userParam);
GLMIXEDBINDING_API void glDebugMessageCallbackKHR(GLDEBUGPROCKHR callback, const void * userParam);
GLMIXEDBINDING_API void glDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLMIXEDBINDING_API void glDebugMessageControlARB(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLMIXEDBINDING_API void glDebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLMIXEDBINDING_API void glDebugMessageEnableAMD(GLenum category, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLMIXEDBINDING_API void glDebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
GLMIXEDBINDING_API void glDebugMessageInsertAMD(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar * buf);
GLMIXEDBINDING_API void glDebugMessageInsertARB(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
GLMIXEDBINDING_API void glDebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
GLMIXEDBINDING_API void glDeformationMap3dSGIX(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble * points);
GLMIXEDBINDING_API void glDeformationMap3fSGIX(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat * points);
GLMIXEDBINDING_API void glDeformSGIX(FfdMaskSGIX mask);
GLMIXEDBINDING_API void glDeleteAsyncMarkersSGIX(GLuint marker, GLsizei range);
GLMIXEDBINDING_API void glDeleteBuffers(GLsizei n, const GLuint * buffers);
GLMIXEDBINDING_API void glDeleteBuffersARB(GLsizei n, const GLuint * buffers);
GLMIXEDBINDING_API void glDeleteCommandListsNV(GLsizei n, const GLuint * lists);
GLMIXEDBINDING_API void glDeleteFencesAPPLE(GLsizei n, const GLuint * fences);
GLMIXEDBINDING_API void glDeleteFencesNV(GLsizei n, const GLuint * fences);
GLMIXEDBINDING_API void glDeleteFragmentShaderATI(GLuint id);
GLMIXEDBINDING_API void glDeleteFramebuffers(GLsizei n, const GLuint * framebuffers);
GLMIXEDBINDING_API void glDeleteFramebuffersEXT(GLsizei n, const GLuint * framebuffers);
GLMIXEDBINDING_API void glDeleteLists(GLuint list, GLsizei range);
GLMIXEDBINDING_API void glDeleteMemoryObjectsEXT(GLsizei n, const GLuint * memoryObjects);
GLMIXEDBINDING_API void glDeleteNamedStringARB(GLint namelen, const GLchar * name);
GLMIXEDBINDING_API void glDeleteNamesAMD(GLenum identifier, GLuint num, const GLuint * names);
GLMIXEDBINDING_API void glDeleteObjectARB(GLhandleARB obj);
GLMIXEDBINDING_API void glDeleteOcclusionQueriesNV(GLsizei n, const GLuint * ids);
GLMIXEDBINDING_API void glDeletePathsNV(GLuint path, GLsizei range);
GLMIXEDBINDING_API void glDeletePerfMonitorsAMD(GLsizei n, GLuint * monitors);
GLMIXEDBINDING_API void glDeletePerfQueryINTEL(GLuint queryHandle);
GLMIXEDBINDING_API void glDeleteProgram(GLuint program);
GLMIXEDBINDING_API void glDeleteProgramPipelines(GLsizei n, const GLuint * pipelines);
GLMIXEDBINDING_API void glDeleteProgramPipelinesEXT(GLsizei n, const GLuint * pipelines);
GLMIXEDBINDING_API void glDeleteProgramsARB(GLsizei n, const GLuint * programs);
GLMIXEDBINDING_API void glDeleteProgramsNV(GLsizei n, const GLuint * programs);
GLMIXEDBINDING_API void glDeleteQueries(GLsizei n, const GLuint * ids);
GLMIXEDBINDING_API void glDeleteQueriesARB(GLsizei n, const GLuint * ids);
GLMIXEDBINDING_API void glDeleteQueriesEXT(GLsizei n, const GLuint * ids);
GLMIXEDBINDING_API void glDeleteQueryResourceTagNV(GLsizei n, const GLint * tagIds);
GLMIXEDBINDING_API void glDeleteRenderbuffers(GLsizei n, const GLuint * renderbuffers);
GLMIXEDBINDING_API void glDeleteRenderbuffersEXT(GLsizei n, const GLuint * renderbuffers);
GLMIXEDBINDING_API void glDeleteSamplers(GLsizei count, const GLuint * samplers);
GLMIXEDBINDING_API void glDeleteSemaphoresEXT(GLsizei n, const GLuint * semaphores);
GLMIXEDBINDING_API void glDeleteShader(GLuint shader);
GLMIXEDBINDING_API void glDeleteStatesNV(GLsizei n, const GLuint * states);
GLMIXEDBINDING_API void glDeleteSync(GLsync sync);
GLMIXEDBINDING_API void glDeleteSyncAPPLE(GLsync sync);
GLMIXEDBINDING_API void glDeleteTextures(GLsizei n, const GLuint * textures);
GLMIXEDBINDING_API void glDeleteTexturesEXT(GLsizei n, const GLuint * textures);
GLMIXEDBINDING_API void glDeleteTransformFeedbacks(GLsizei n, const GLuint * ids);
GLMIXEDBINDING_API void glDeleteTransformFeedbacksNV(GLsizei n, const GLuint * ids);
GLMIXEDBINDING_API void glDeleteVertexArrays(GLsizei n, const GLuint * arrays);
GLMIXEDBINDING_API void glDeleteVertexArraysAPPLE(GLsizei n, const GLuint * arrays);
GLMIXEDBINDING_API void glDeleteVertexArraysOES(GLsizei n, const GLuint * arrays);
GLMIXEDBINDING_API void glDeleteVertexShaderEXT(GLuint id);
GLMIXEDBINDING_API void glDepthBoundsdNV(GLdouble zmin, GLdouble zmax);
GLMIXEDBINDING_API void glDepthBoundsEXT(GLclampd zmin, GLclampd zmax);
GLMIXEDBINDING_API void glDepthFunc(GLenum func);
GLMIXEDBINDING_API void glDepthMask(GLboolean flag);
GLMIXEDBINDING_API void glDepthRange(GLdouble n, GLdouble f);
GLMIXEDBINDING_API void glDepthRangeArraydvNV(GLuint first, GLsizei count, const GLdouble * v);
GLMIXEDBINDING_API void glDepthRangeArrayfvNV(GLuint first, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glDepthRangeArrayfvOES(GLuint first, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glDepthRangeArrayv(GLuint first, GLsizei count, const GLdouble * v);
GLMIXEDBINDING_API void glDepthRangedNV(GLdouble zNear, GLdouble zFar);
GLMIXEDBINDING_API void glDepthRangef(GLfloat n, GLfloat f);
GLMIXEDBINDING_API void glDepthRangefOES(GLclampf n, GLclampf f);
GLMIXEDBINDING_API void glDepthRangeIndexed(GLuint index, GLdouble n, GLdouble f);
GLMIXEDBINDING_API void glDepthRangeIndexeddNV(GLuint index, GLdouble n, GLdouble f);
GLMIXEDBINDING_API void glDepthRangeIndexedfNV(GLuint index, GLfloat n, GLfloat f);
GLMIXEDBINDING_API void glDepthRangeIndexedfOES(GLuint index, GLfloat n, GLfloat f);
GLMIXEDBINDING_API void glDepthRangexOES(GLfixed n, GLfixed f);
GLMIXEDBINDING_API void glDetachObjectARB(GLhandleARB containerObj, GLhandleARB attachedObj);
GLMIXEDBINDING_API void glDetachShader(GLuint program, GLuint shader);
GLMIXEDBINDING_API void glDetailTexFuncSGIS(GLenum target, GLsizei n, const GLfloat * points);
GLMIXEDBINDING_API void glDisable(GLenum cap);
GLMIXEDBINDING_API void glDisableClientState(GLenum array);
GLMIXEDBINDING_API void glDisableClientStateiEXT(GLenum array, GLuint index);
GLMIXEDBINDING_API void glDisableClientStateIndexedEXT(GLenum array, GLuint index);
GLMIXEDBINDING_API void glDisableDriverControlQCOM(GLuint driverControl);
GLMIXEDBINDING_API void glDisablei(GLenum target, GLuint index);
GLMIXEDBINDING_API void glDisableiEXT(GLenum target, GLuint index);
GLMIXEDBINDING_API void glDisableIndexedEXT(GLenum target, GLuint index);
GLMIXEDBINDING_API void glDisableiNV(GLenum target, GLuint index);
GLMIXEDBINDING_API void glDisableiOES(GLenum target, GLuint index);
GLMIXEDBINDING_API void glDisableVariantClientStateEXT(GLuint id);
GLMIXEDBINDING_API void glDisableVertexArrayAttrib(GLuint vaobj, GLuint index);
GLMIXEDBINDING_API void glDisableVertexArrayAttribEXT(GLuint vaobj, GLuint index);
GLMIXEDBINDING_API void glDisableVertexArrayEXT(GLuint vaobj, GLenum array);
GLMIXEDBINDING_API void glDisableVertexAttribAPPLE(GLuint index, GLenum pname);
GLMIXEDBINDING_API void glDisableVertexAttribArray(GLuint index);
GLMIXEDBINDING_API void glDisableVertexAttribArrayARB(GLuint index);
GLMIXEDBINDING_API void glDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum * attachments);
GLMIXEDBINDING_API void glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
GLMIXEDBINDING_API void glDispatchComputeGroupSizeARB(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
GLMIXEDBINDING_API void glDispatchComputeIndirect(GLintptr indirect);
GLMIXEDBINDING_API void glDrawArrays(GLenum mode, GLint first, GLsizei count);
GLMIXEDBINDING_API void glDrawArraysEXT(GLenum mode, GLint first, GLsizei count);
GLMIXEDBINDING_API void glDrawArraysIndirect(GLenum mode, const void * indirect);
GLMIXEDBINDING_API void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
GLMIXEDBINDING_API void glDrawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLMIXEDBINDING_API void glDrawArraysInstancedARB(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLMIXEDBINDING_API void glDrawArraysInstancedBaseInstance(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
GLMIXEDBINDING_API void glDrawArraysInstancedBaseInstanceEXT(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
GLMIXEDBINDING_API void glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
GLMIXEDBINDING_API void glDrawArraysInstancedNV(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLMIXEDBINDING_API void glDrawBuffer(GLenum buf);
GLMIXEDBINDING_API void glDrawBuffers(GLsizei n, const GLenum * bufs);
GLMIXEDBINDING_API void glDrawBuffersARB(GLsizei n, const GLenum * bufs);
GLMIXEDBINDING_API void glDrawBuffersATI(GLsizei n, const GLenum * bufs);
GLMIXEDBINDING_API void glDrawBuffersEXT(GLsizei n, const GLenum * bufs);
GLMIXEDBINDING_API void glDrawBuffersIndexedEXT(GLint n, const GLenum * location, const GLint * indices);
GLMIXEDBINDING_API void glDrawBuffersNV(GLsizei n, const GLenum * bufs);
GLMIXEDBINDING_API void glDrawCommandsAddressNV(GLenum primitiveMode, const GLuint64 * indirects, const GLsizei * sizes, GLuint count);
GLMIXEDBINDING_API void glDrawCommandsNV(GLenum primitiveMode, GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, GLuint count);
GLMIXEDBINDING_API void glDrawCommandsStatesAddressNV(const GLuint64 * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
GLMIXEDBINDING_API void glDrawCommandsStatesNV(GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
GLMIXEDBINDING_API void glDrawElementArrayAPPLE(GLenum mode, GLint first, GLsizei count);
GLMIXEDBINDING_API void glDrawElementArrayATI(GLenum mode, GLsizei count);
GLMIXEDBINDING_API void glDrawElements(GLenum mode, GLsizei count, GLenum type, const void * indices);
GLMIXEDBINDING_API void glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLMIXEDBINDING_API void glDrawElementsBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLMIXEDBINDING_API void glDrawElementsBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLMIXEDBINDING_API void glDrawElementsIndirect(GLenum mode, GLenum type, const void * indirect);
GLMIXEDBINDING_API void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
GLMIXEDBINDING_API void glDrawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLMIXEDBINDING_API void glDrawElementsInstancedARB(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLMIXEDBINDING_API void glDrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
GLMIXEDBINDING_API void glDrawElementsInstancedBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
GLMIXEDBINDING_API void glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLMIXEDBINDING_API void glDrawElementsInstancedBaseVertexBaseInstance(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
GLMIXEDBINDING_API void glDrawElementsInstancedBaseVertexBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
GLMIXEDBINDING_API void glDrawElementsInstancedBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLMIXEDBINDING_API void glDrawElementsInstancedBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLMIXEDBINDING_API void glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLMIXEDBINDING_API void glDrawElementsInstancedNV(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLMIXEDBINDING_API void glDrawMeshArraysSUN(GLenum mode, GLint first, GLsizei count, GLsizei width);
GLMIXEDBINDING_API void glDrawMeshTasksIndirectNV(GLintptr indirect);
GLMIXEDBINDING_API void glDrawMeshTasksNV(GLuint first, GLuint count);
GLMIXEDBINDING_API void glDrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
GLMIXEDBINDING_API void glDrawRangeElementArrayATI(GLenum mode, GLuint start, GLuint end, GLsizei count);
GLMIXEDBINDING_API void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
GLMIXEDBINDING_API void glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLMIXEDBINDING_API void glDrawRangeElementsBaseVertexEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLMIXEDBINDING_API void glDrawRangeElementsBaseVertexOES(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLMIXEDBINDING_API void glDrawRangeElementsEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
GLMIXEDBINDING_API void glDrawTextureNV(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
GLMIXEDBINDING_API void glDrawTransformFeedback(GLenum mode, GLuint id);
GLMIXEDBINDING_API void glDrawTransformFeedbackEXT(GLenum mode, GLuint id);
GLMIXEDBINDING_API void glDrawTransformFeedbackInstanced(GLenum mode, GLuint id, GLsizei instancecount);
GLMIXEDBINDING_API void glDrawTransformFeedbackInstancedEXT(GLenum mode, GLuint id, GLsizei instancecount);
GLMIXEDBINDING_API void glDrawTransformFeedbackNV(GLenum mode, GLuint id);
GLMIXEDBINDING_API void glDrawTransformFeedbackStream(GLenum mode, GLuint id, GLuint stream);
GLMIXEDBINDING_API void glDrawTransformFeedbackStreamInstanced(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
GLMIXEDBINDING_API void glDrawVkImageNV(GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
GLMIXEDBINDING_API void glEdgeFlag(GLboolean flag);
GLMIXEDBINDING_API void glEdgeFlagFormatNV(GLsizei stride);
GLMIXEDBINDING_API void glEdgeFlagPointer(GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glEdgeFlagPointerEXT(GLsizei stride, GLsizei count, const GLboolean * pointer);
GLMIXEDBINDING_API void glEdgeFlagPointerListIBM(GLint stride, const GLboolean ** pointer, GLint ptrstride);
GLMIXEDBINDING_API void glEdgeFlagv(const GLboolean * flag);
GLMIXEDBINDING_API void glEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image);
GLMIXEDBINDING_API void glEGLImageTargetTexStorageEXT(GLenum target, GLeglImageOES image, const GLint* attrib_list);
GLMIXEDBINDING_API void glEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image);
GLMIXEDBINDING_API void glEGLImageTargetTextureStorageEXT(GLuint texture, GLeglImageOES image, const GLint* attrib_list);
GLMIXEDBINDING_API void glElementPointerAPPLE(GLenum type, const void * pointer);
GLMIXEDBINDING_API void glElementPointerATI(GLenum type, const void * pointer);
GLMIXEDBINDING_API void glEnable(GLenum cap);
GLMIXEDBINDING_API void glEnableClientState(GLenum array);
GLMIXEDBINDING_API void glEnableClientStateiEXT(GLenum array, GLuint index);
GLMIXEDBINDING_API void glEnableClientStateIndexedEXT(GLenum array, GLuint index);
GLMIXEDBINDING_API void glEnableDriverControlQCOM(GLuint driverControl);
GLMIXEDBINDING_API void glEnablei(GLenum target, GLuint index);
GLMIXEDBINDING_API void glEnableiEXT(GLenum target, GLuint index);
GLMIXEDBINDING_API void glEnableIndexedEXT(GLenum target, GLuint index);
GLMIXEDBINDING_API void glEnableiNV(GLenum target, GLuint index);
GLMIXEDBINDING_API void glEnableiOES(GLenum target, GLuint index);
GLMIXEDBINDING_API void glEnableVariantClientStateEXT(GLuint id);
GLMIXEDBINDING_API void glEnableVertexArrayAttrib(GLuint vaobj, GLuint index);
GLMIXEDBINDING_API void glEnableVertexArrayAttribEXT(GLuint vaobj, GLuint index);
GLMIXEDBINDING_API void glEnableVertexArrayEXT(GLuint vaobj, GLenum array);
GLMIXEDBINDING_API void glEnableVertexAttribAPPLE(GLuint index, GLenum pname);
GLMIXEDBINDING_API void glEnableVertexAttribArray(GLuint index);
GLMIXEDBINDING_API void glEnableVertexAttribArrayARB(GLuint index);
GLMIXEDBINDING_API void glEnd();
GLMIXEDBINDING_API void glEndConditionalRender();
GLMIXEDBINDING_API void glEndConditionalRenderNV();
GLMIXEDBINDING_API void glEndConditionalRenderNVX();
GLMIXEDBINDING_API void glEndFragmentShaderATI();
GLMIXEDBINDING_API void glEndList();
GLMIXEDBINDING_API void glEndOcclusionQueryNV();
GLMIXEDBINDING_API void glEndPerfMonitorAMD(GLuint monitor);
GLMIXEDBINDING_API void glEndPerfQueryINTEL(GLuint queryHandle);
GLMIXEDBINDING_API void glEndQuery(GLenum target);
GLMIXEDBINDING_API void glEndQueryARB(GLenum target);
GLMIXEDBINDING_API void glEndQueryEXT(GLenum target);
GLMIXEDBINDING_API void glEndQueryIndexed(GLenum target, GLuint index);
GLMIXEDBINDING_API void glEndTilingQCOM(GLbitfield preserveMask);
GLMIXEDBINDING_API void glEndTransformFeedback();
GLMIXEDBINDING_API void glEndTransformFeedbackEXT();
GLMIXEDBINDING_API void glEndTransformFeedbackNV();
GLMIXEDBINDING_API void glEndVertexShaderEXT();
GLMIXEDBINDING_API void glEndVideoCaptureNV(GLuint video_capture_slot);
GLMIXEDBINDING_API void glEvalCoord1d(GLdouble u);
GLMIXEDBINDING_API void glEvalCoord1dv(const GLdouble * u);
GLMIXEDBINDING_API void glEvalCoord1f(GLfloat u);
GLMIXEDBINDING_API void glEvalCoord1fv(const GLfloat * u);
GLMIXEDBINDING_API void glEvalCoord1xOES(GLfixed u);
GLMIXEDBINDING_API void glEvalCoord1xvOES(const GLfixed * coords);
GLMIXEDBINDING_API void glEvalCoord2d(GLdouble u, GLdouble v);
GLMIXEDBINDING_API void glEvalCoord2dv(const GLdouble * u);
GLMIXEDBINDING_API void glEvalCoord2f(GLfloat u, GLfloat v);
GLMIXEDBINDING_API void glEvalCoord2fv(const GLfloat * u);
GLMIXEDBINDING_API void glEvalCoord2xOES(GLfixed u, GLfixed v);
GLMIXEDBINDING_API void glEvalCoord2xvOES(const GLfixed * coords);
GLMIXEDBINDING_API void glEvalMapsNV(GLenum target, GLenum mode);
GLMIXEDBINDING_API void glEvalMesh1(GLenum mode, GLint i1, GLint i2);
GLMIXEDBINDING_API void glEvalMesh2(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
GLMIXEDBINDING_API void glEvalPoint1(GLint i);
GLMIXEDBINDING_API void glEvalPoint2(GLint i, GLint j);
GLMIXEDBINDING_API void glEvaluateDepthValuesARB();
GLMIXEDBINDING_API void glExecuteProgramNV(GLenum target, GLuint id, const GLfloat * params);
GLMIXEDBINDING_API void glExtGetBufferPointervQCOM(GLenum target, void ** params);
GLMIXEDBINDING_API void glExtGetBuffersQCOM(GLuint * buffers, GLint maxBuffers, GLint * numBuffers);
GLMIXEDBINDING_API void glExtGetFramebuffersQCOM(GLuint * framebuffers, GLint maxFramebuffers, GLint * numFramebuffers);
GLMIXEDBINDING_API void glExtGetProgramBinarySourceQCOM(GLuint program, GLenum shadertype, GLchar * source, GLint * length);
GLMIXEDBINDING_API void glExtGetProgramsQCOM(GLuint * programs, GLint maxPrograms, GLint * numPrograms);
GLMIXEDBINDING_API void glExtGetRenderbuffersQCOM(GLuint * renderbuffers, GLint maxRenderbuffers, GLint * numRenderbuffers);
GLMIXEDBINDING_API void glExtGetShadersQCOM(GLuint * shaders, GLint maxShaders, GLint * numShaders);
GLMIXEDBINDING_API void glExtGetTexLevelParameterivQCOM(GLuint texture, GLenum face, GLint level, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glExtGetTexSubImageQCOM(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void * texels);
GLMIXEDBINDING_API void glExtGetTexturesQCOM(GLuint * textures, GLint maxTextures, GLint * numTextures);
GLMIXEDBINDING_API GLboolean glExtIsProgramBinaryQCOM(GLuint program);
GLMIXEDBINDING_API void glExtractComponentEXT(GLuint res, GLuint src, GLuint num);
GLMIXEDBINDING_API void glExtrapolateTex2DQCOM(GLuint src1, GLuint src2, GLuint output, GLfloat scaleFactor);
GLMIXEDBINDING_API void glExtTexObjectStateOverrideiQCOM(GLenum target, GLenum pname, GLint param);
GLMIXEDBINDING_API void glFeedbackBuffer(GLsizei size, GLenum type, GLfloat * buffer);
GLMIXEDBINDING_API void glFeedbackBufferxOES(GLsizei n, GLenum type, const GLfixed * buffer);
GLMIXEDBINDING_API GLsync glFenceSync(GLenum condition, GLbitfield flags);
GLMIXEDBINDING_API GLsync glFenceSyncAPPLE(GLenum condition, GLbitfield flags);
GLMIXEDBINDING_API void glFinalCombinerInputNV(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
GLMIXEDBINDING_API void glFinish();
GLMIXEDBINDING_API GLint glFinishAsyncSGIX(GLuint * markerp);
GLMIXEDBINDING_API void glFinishFenceAPPLE(GLuint fence);
GLMIXEDBINDING_API void glFinishFenceNV(GLuint fence);
GLMIXEDBINDING_API void glFinishObjectAPPLE(GLenum object, GLint name);
GLMIXEDBINDING_API void glFinishTextureSUNX();
GLMIXEDBINDING_API void glFlush();
GLMIXEDBINDING_API void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length);
GLMIXEDBINDING_API void glFlushMappedBufferRangeAPPLE(GLenum target, GLintptr offset, GLsizeiptr size);
GLMIXEDBINDING_API void glFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length);
GLMIXEDBINDING_API void glFlushMappedNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length);
GLMIXEDBINDING_API void glFlushMappedNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length);
GLMIXEDBINDING_API void glFlushPixelDataRangeNV(GLenum target);
GLMIXEDBINDING_API void glFlushRasterSGIX();
GLMIXEDBINDING_API void glFlushStaticDataIBM(GLenum target);
GLMIXEDBINDING_API void glFlushVertexArrayRangeAPPLE(GLsizei length, void * pointer);
GLMIXEDBINDING_API void glFlushVertexArrayRangeNV();
GLMIXEDBINDING_API void glFogCoordd(GLdouble coord);
GLMIXEDBINDING_API void glFogCoorddEXT(GLdouble coord);
GLMIXEDBINDING_API void glFogCoorddv(const GLdouble * coord);
GLMIXEDBINDING_API void glFogCoorddvEXT(const GLdouble * coord);
GLMIXEDBINDING_API void glFogCoordf(GLfloat coord);
GLMIXEDBINDING_API void glFogCoordfEXT(GLfloat coord);
GLMIXEDBINDING_API void glFogCoordFormatNV(GLenum type, GLsizei stride);
GLMIXEDBINDING_API void glFogCoordfv(const GLfloat * coord);
GLMIXEDBINDING_API void glFogCoordfvEXT(const GLfloat * coord);
GLMIXEDBINDING_API void glFogCoordhNV(GLhalfNV fog);
GLMIXEDBINDING_API void glFogCoordhvNV(const GLhalfNV * fog);
GLMIXEDBINDING_API void glFogCoordPointer(GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glFogCoordPointerEXT(GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glFogCoordPointerListIBM(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLMIXEDBINDING_API void glFogf(GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glFogFuncSGIS(GLsizei n, const GLfloat * points);
GLMIXEDBINDING_API void glFogfv(GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glFogi(GLenum pname, GLint param);
GLMIXEDBINDING_API void glFogiv(GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glFogxOES(GLenum pname, GLfixed param);
GLMIXEDBINDING_API void glFogxvOES(GLenum pname, const GLfixed * param);
GLMIXEDBINDING_API void glFragmentColorMaterialSGIX(GLenum face, GLenum mode);
GLMIXEDBINDING_API void glFragmentCoverageColorNV(GLuint color);
GLMIXEDBINDING_API void glFragmentLightfSGIX(GLenum light, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glFragmentLightfvSGIX(GLenum light, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glFragmentLightiSGIX(GLenum light, GLenum pname, GLint param);
GLMIXEDBINDING_API void glFragmentLightivSGIX(GLenum light, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glFragmentLightModelfSGIX(GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glFragmentLightModelfvSGIX(GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glFragmentLightModeliSGIX(GLenum pname, GLint param);
GLMIXEDBINDING_API void glFragmentLightModelivSGIX(GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glFragmentMaterialfSGIX(GLenum face, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glFragmentMaterialfvSGIX(GLenum face, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glFragmentMaterialiSGIX(GLenum face, GLenum pname, GLint param);
GLMIXEDBINDING_API void glFragmentMaterialivSGIX(GLenum face, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glFramebufferDrawBufferEXT(GLuint framebuffer, GLenum mode);
GLMIXEDBINDING_API void glFramebufferDrawBuffersEXT(GLuint framebuffer, GLsizei n, const GLenum * bufs);
GLMIXEDBINDING_API void glFramebufferFetchBarrierEXT();
GLMIXEDBINDING_API void glFramebufferFetchBarrierQCOM();
GLMIXEDBINDING_API void glFramebufferFoveationConfigQCOM(GLuint framebuffer, GLuint numLayers, GLuint focalPointsPerLayer, GLuint requestedFeatures, GLuint * providedFeatures);
GLMIXEDBINDING_API void glFramebufferFoveationParametersQCOM(GLuint framebuffer, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea);
GLMIXEDBINDING_API void glFramebufferParameteri(GLenum target, GLenum pname, GLint param);
GLMIXEDBINDING_API void glFramebufferParameteriMESA(GLenum target, GLenum pname, GLint param);
GLMIXEDBINDING_API void glFramebufferPixelLocalStorageSizeEXT(GLuint target, GLsizei size);
GLMIXEDBINDING_API void glFramebufferReadBufferEXT(GLuint framebuffer, GLenum mode);
GLMIXEDBINDING_API void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLMIXEDBINDING_API void glFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLMIXEDBINDING_API void glFramebufferSampleLocationsfvARB(GLenum target, GLuint start, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glFramebufferSampleLocationsfvNV(GLenum target, GLuint start, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glFramebufferSamplePositionsfvAMD(GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat * values);
GLMIXEDBINDING_API void glFramebufferShadingRateEXT(GLenum target, GLenum attachment, GLuint texture, GLint baseLayer, GLsizei numLayers, GLsizei texelWidth, GLsizei texelHeight);
GLMIXEDBINDING_API void glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLMIXEDBINDING_API void glFramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLMIXEDBINDING_API void glFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLMIXEDBINDING_API void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLMIXEDBINDING_API void glFramebufferTexture2DDownsampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint xscale, GLint yscale);
GLMIXEDBINDING_API void glFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLMIXEDBINDING_API void glFramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
GLMIXEDBINDING_API void glFramebufferTexture2DMultisampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
GLMIXEDBINDING_API void glFramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLMIXEDBINDING_API void glFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLMIXEDBINDING_API void glFramebufferTexture3DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLMIXEDBINDING_API void glFramebufferTextureARB(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLMIXEDBINDING_API void glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLMIXEDBINDING_API void glFramebufferTextureFaceARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
GLMIXEDBINDING_API void glFramebufferTextureFaceEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
GLMIXEDBINDING_API void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLMIXEDBINDING_API void glFramebufferTextureLayerARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLMIXEDBINDING_API void glFramebufferTextureLayerDownsampleIMG(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer, GLint xscale, GLint yscale);
GLMIXEDBINDING_API void glFramebufferTextureLayerEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLMIXEDBINDING_API void glFramebufferTextureMultisampleMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLsizei samples, GLint baseViewIndex, GLsizei numViews);
GLMIXEDBINDING_API void glFramebufferTextureMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
GLMIXEDBINDING_API void glFramebufferTextureOES(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLMIXEDBINDING_API void glFrameTerminatorGREMEDY();
GLMIXEDBINDING_API void glFrameZoomSGIX(GLint factor);
GLMIXEDBINDING_API void glFreeObjectBufferATI(GLuint buffer);
GLMIXEDBINDING_API void glFrontFace(GLenum mode);
GLMIXEDBINDING_API void glFrustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLMIXEDBINDING_API void glFrustumfOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
GLMIXEDBINDING_API void glFrustumxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
GLMIXEDBINDING_API GLuint glGenAsyncMarkersSGIX(GLsizei range);
GLMIXEDBINDING_API void glGenBuffers(GLsizei n, GLuint * buffers);
GLMIXEDBINDING_API void glGenBuffersARB(GLsizei n, GLuint * buffers);
GLMIXEDBINDING_API void glGenerateMipmap(GLenum target);
GLMIXEDBINDING_API void glGenerateMipmapEXT(GLenum target);
GLMIXEDBINDING_API void glGenerateMultiTexMipmapEXT(GLenum texunit, GLenum target);
GLMIXEDBINDING_API void glGenerateTextureMipmap(GLuint texture);
GLMIXEDBINDING_API void glGenerateTextureMipmapEXT(GLuint texture, GLenum target);
GLMIXEDBINDING_API void glGenFencesAPPLE(GLsizei n, GLuint * fences);
GLMIXEDBINDING_API void glGenFencesNV(GLsizei n, GLuint * fences);
GLMIXEDBINDING_API GLuint glGenFragmentShadersATI(GLuint range);
GLMIXEDBINDING_API void glGenFramebuffers(GLsizei n, GLuint * framebuffers);
GLMIXEDBINDING_API void glGenFramebuffersEXT(GLsizei n, GLuint * framebuffers);
GLMIXEDBINDING_API GLuint glGenLists(GLsizei range);
GLMIXEDBINDING_API void glGenNamesAMD(GLenum identifier, GLuint num, GLuint * names);
GLMIXEDBINDING_API void glGenOcclusionQueriesNV(GLsizei n, GLuint * ids);
GLMIXEDBINDING_API GLuint glGenPathsNV(GLsizei range);
GLMIXEDBINDING_API void glGenPerfMonitorsAMD(GLsizei n, GLuint * monitors);
GLMIXEDBINDING_API void glGenProgramPipelines(GLsizei n, GLuint * pipelines);
GLMIXEDBINDING_API void glGenProgramPipelinesEXT(GLsizei n, GLuint * pipelines);
GLMIXEDBINDING_API void glGenProgramsARB(GLsizei n, GLuint * programs);
GLMIXEDBINDING_API void glGenProgramsNV(GLsizei n, GLuint * programs);
GLMIXEDBINDING_API void glGenQueries(GLsizei n, GLuint * ids);
GLMIXEDBINDING_API void glGenQueriesARB(GLsizei n, GLuint * ids);
GLMIXEDBINDING_API void glGenQueriesEXT(GLsizei n, GLuint * ids);
GLMIXEDBINDING_API void glGenQueryResourceTagNV(GLsizei n, GLint * tagIds);
GLMIXEDBINDING_API void glGenRenderbuffers(GLsizei n, GLuint * renderbuffers);
GLMIXEDBINDING_API void glGenRenderbuffersEXT(GLsizei n, GLuint * renderbuffers);
GLMIXEDBINDING_API void glGenSamplers(GLsizei count, GLuint * samplers);
GLMIXEDBINDING_API void glGenSemaphoresEXT(GLsizei n, GLuint * semaphores);
GLMIXEDBINDING_API GLuint glGenSymbolsEXT(GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
GLMIXEDBINDING_API void glGenTextures(GLsizei n, GLuint * textures);
GLMIXEDBINDING_API void glGenTexturesEXT(GLsizei n, GLuint * textures);
GLMIXEDBINDING_API void glGenTransformFeedbacks(GLsizei n, GLuint * ids);
GLMIXEDBINDING_API void glGenTransformFeedbacksNV(GLsizei n, GLuint * ids);
GLMIXEDBINDING_API void glGenVertexArrays(GLsizei n, GLuint * arrays);
GLMIXEDBINDING_API void glGenVertexArraysAPPLE(GLsizei n, GLuint * arrays);
GLMIXEDBINDING_API void glGenVertexArraysOES(GLsizei n, GLuint * arrays);
GLMIXEDBINDING_API GLuint glGenVertexShadersEXT(GLuint range);
GLMIXEDBINDING_API void glGetActiveAtomicCounterBufferiv(GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
GLMIXEDBINDING_API void glGetActiveAttribARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
GLMIXEDBINDING_API void glGetActiveSubroutineName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
GLMIXEDBINDING_API void glGetActiveSubroutineUniformiv(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
GLMIXEDBINDING_API void glGetActiveSubroutineUniformName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
GLMIXEDBINDING_API void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
GLMIXEDBINDING_API void glGetActiveUniformARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
GLMIXEDBINDING_API void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
GLMIXEDBINDING_API void glGetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
GLMIXEDBINDING_API void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetActiveVaryingNV(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
GLMIXEDBINDING_API void glGetArrayObjectfvATI(GLenum array, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetArrayObjectivATI(GLenum array, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetAttachedObjectsARB(GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj);
GLMIXEDBINDING_API void glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
GLMIXEDBINDING_API GLint glGetAttribLocation(GLuint program, const GLchar * name);
GLMIXEDBINDING_API GLint glGetAttribLocationARB(GLhandleARB programObj, const GLcharARB * name);
GLMIXEDBINDING_API void glGetBooleani_v(GLenum target, GLuint index, GLboolean * data);
GLMIXEDBINDING_API void glGetBooleanIndexedvEXT(GLenum target, GLuint index, GLboolean * data);
GLMIXEDBINDING_API void glGetBooleanv(GLenum pname, GLboolean * data);
GLMIXEDBINDING_API void glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 * params);
GLMIXEDBINDING_API void glGetBufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetBufferParameterivARB(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetBufferParameterui64vNV(GLenum target, GLenum pname, GLuint64EXT * params);
GLMIXEDBINDING_API void glGetBufferPointerv(GLenum target, GLenum pname, void ** params);
GLMIXEDBINDING_API void glGetBufferPointervARB(GLenum target, GLenum pname, void ** params);
GLMIXEDBINDING_API void glGetBufferPointervOES(GLenum target, GLenum pname, void ** params);
GLMIXEDBINDING_API void glGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, void * data);
GLMIXEDBINDING_API void glGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
GLMIXEDBINDING_API void glGetClipPlane(GLenum plane, GLdouble * equation);
GLMIXEDBINDING_API void glGetClipPlanefOES(GLenum plane, GLfloat * equation);
GLMIXEDBINDING_API void glGetClipPlanexOES(GLenum plane, GLfixed * equation);
GLMIXEDBINDING_API void glGetColorTable(GLenum target, GLenum format, GLenum type, void * table);
GLMIXEDBINDING_API void glGetColorTableEXT(GLenum target, GLenum format, GLenum type, void * data);
GLMIXEDBINDING_API void glGetColorTableParameterfv(GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetColorTableParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetColorTableParameterfvSGI(GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetColorTableParameteriv(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetColorTableParameterivEXT(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetColorTableParameterivSGI(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetColorTableSGI(GLenum target, GLenum format, GLenum type, void * table);
GLMIXEDBINDING_API void glGetCombinerInputParameterfvNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetCombinerInputParameterivNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetCombinerOutputParameterfvNV(GLenum stage, GLenum portion, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetCombinerOutputParameterivNV(GLenum stage, GLenum portion, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetCombinerStageParameterfvNV(GLenum stage, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API GLuint glGetCommandHeaderNV(GLenum tokenID, GLuint size);
GLMIXEDBINDING_API void glGetCompressedMultiTexImageEXT(GLenum texunit, GLenum target, GLint lod, void * img);
GLMIXEDBINDING_API void glGetCompressedTexImage(GLenum target, GLint level, void * img);
GLMIXEDBINDING_API void glGetCompressedTexImageARB(GLenum target, GLint level, void * img);
GLMIXEDBINDING_API void glGetCompressedTextureImage(GLuint texture, GLint level, GLsizei bufSize, void * pixels);
GLMIXEDBINDING_API void glGetCompressedTextureImageEXT(GLuint texture, GLenum target, GLint lod, void * img);
GLMIXEDBINDING_API void glGetCompressedTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels);
GLMIXEDBINDING_API void glGetConvolutionFilter(GLenum target, GLenum format, GLenum type, void * image);
GLMIXEDBINDING_API void glGetConvolutionFilterEXT(GLenum target, GLenum format, GLenum type, void * image);
GLMIXEDBINDING_API void glGetConvolutionParameterfv(GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetConvolutionParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetConvolutionParameteriv(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetConvolutionParameterivEXT(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetConvolutionParameterxvOES(GLenum target, GLenum pname, GLfixed * params);
GLMIXEDBINDING_API void glGetCoverageModulationTableNV(GLsizei bufSize, GLfloat * v);
GLMIXEDBINDING_API GLuint glGetDebugMessageLog(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLMIXEDBINDING_API GLuint glGetDebugMessageLogAMD(GLuint count, GLsizei bufSize, GLenum * categories, GLenum * severities, GLuint * ids, GLsizei * lengths, GLchar * message);
GLMIXEDBINDING_API GLuint glGetDebugMessageLogARB(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLMIXEDBINDING_API GLuint glGetDebugMessageLogKHR(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLMIXEDBINDING_API void glGetDetailTexFuncSGIS(GLenum target, GLfloat * points);
GLMIXEDBINDING_API void glGetDoublei_v(GLenum target, GLuint index, GLdouble * data);
GLMIXEDBINDING_API void glGetDoublei_vEXT(GLenum pname, GLuint index, GLdouble * params);
GLMIXEDBINDING_API void glGetDoubleIndexedvEXT(GLenum target, GLuint index, GLdouble * data);
GLMIXEDBINDING_API void glGetDoublev(GLenum pname, GLdouble * data);
GLMIXEDBINDING_API void glGetDriverControlsQCOM(GLint * num, GLsizei size, GLuint * driverControls);
GLMIXEDBINDING_API void glGetDriverControlStringQCOM(GLuint driverControl, GLsizei bufSize, GLsizei * length, GLchar * driverControlString);
GLMIXEDBINDING_API GLenum glGetError();
GLMIXEDBINDING_API void glGetFenceivNV(GLuint fence, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetFinalCombinerInputParameterfvNV(GLenum variable, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetFinalCombinerInputParameterivNV(GLenum variable, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetFirstPerfQueryIdINTEL(GLuint * queryId);
GLMIXEDBINDING_API void glGetFixedvOES(GLenum pname, GLfixed * params);
GLMIXEDBINDING_API void glGetFloati_v(GLenum target, GLuint index, GLfloat * data);
GLMIXEDBINDING_API void glGetFloati_vEXT(GLenum pname, GLuint index, GLfloat * params);
GLMIXEDBINDING_API void glGetFloati_vNV(GLenum target, GLuint index, GLfloat * data);
GLMIXEDBINDING_API void glGetFloati_vOES(GLenum target, GLuint index, GLfloat * data);
GLMIXEDBINDING_API void glGetFloatIndexedvEXT(GLenum target, GLuint index, GLfloat * data);
GLMIXEDBINDING_API void glGetFloatv(GLenum pname, GLfloat * data);
GLMIXEDBINDING_API void glGetFogFuncSGIS(GLfloat * points);
GLMIXEDBINDING_API GLint glGetFragDataIndex(GLuint program, const GLchar * name);
GLMIXEDBINDING_API GLint glGetFragDataIndexEXT(GLuint program, const GLchar * name);
GLMIXEDBINDING_API GLint glGetFragDataLocation(GLuint program, const GLchar * name);
GLMIXEDBINDING_API GLint glGetFragDataLocationEXT(GLuint program, const GLchar * name);
GLMIXEDBINDING_API void glGetFragmentLightfvSGIX(GLenum light, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetFragmentLightivSGIX(GLenum light, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetFragmentMaterialfvSGIX(GLenum face, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetFragmentMaterialivSGIX(GLenum face, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetFragmentShadingRatesEXT(GLsizei samples, GLsizei maxCount, GLsizei * count, GLenum * shadingRates);
GLMIXEDBINDING_API void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetFramebufferParameterfvAMD(GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat * values);
GLMIXEDBINDING_API void glGetFramebufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetFramebufferParameterivMESA(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API GLsizei glGetFramebufferPixelLocalStorageSizeEXT(GLuint target);
GLMIXEDBINDING_API GLenum glGetGraphicsResetStatus();
GLMIXEDBINDING_API GLenum glGetGraphicsResetStatusARB();
GLMIXEDBINDING_API GLenum glGetGraphicsResetStatusEXT();
GLMIXEDBINDING_API GLenum glGetGraphicsResetStatusKHR();
GLMIXEDBINDING_API GLhandleARB glGetHandleARB(GLenum pname);
GLMIXEDBINDING_API void glGetHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
GLMIXEDBINDING_API void glGetHistogramEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
GLMIXEDBINDING_API void glGetHistogramParameterfv(GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetHistogramParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetHistogramParameteriv(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetHistogramParameterivEXT(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetHistogramParameterxvOES(GLenum target, GLenum pname, GLfixed * params);
GLMIXEDBINDING_API GLuint64 glGetImageHandleARB(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
GLMIXEDBINDING_API GLuint64 glGetImageHandleNV(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
GLMIXEDBINDING_API void glGetImageTransformParameterfvHP(GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetImageTransformParameterivHP(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetInfoLogARB(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog);
GLMIXEDBINDING_API GLint glGetInstrumentsSGIX();
GLMIXEDBINDING_API void glGetInteger64i_v(GLenum target, GLuint index, GLint64 * data);
GLMIXEDBINDING_API void glGetInteger64v(GLenum pname, GLint64 * data);
GLMIXEDBINDING_API void glGetInteger64vAPPLE(GLenum pname, GLint64 * params);
GLMIXEDBINDING_API void glGetInteger64vEXT(GLenum pname, GLint64 * data);
GLMIXEDBINDING_API void glGetIntegeri_v(GLenum target, GLuint index, GLint * data);
GLMIXEDBINDING_API void glGetIntegeri_vEXT(GLenum target, GLuint index, GLint * data);
GLMIXEDBINDING_API void glGetIntegerIndexedvEXT(GLenum target, GLuint index, GLint * data);
GLMIXEDBINDING_API void glGetIntegerui64i_vNV(GLenum value, GLuint index, GLuint64EXT * result);
GLMIXEDBINDING_API void glGetIntegerui64vNV(GLenum value, GLuint64EXT * result);
GLMIXEDBINDING_API void glGetIntegerv(GLenum pname, GLint * data);
GLMIXEDBINDING_API void glGetInternalformati64v(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 * params);
GLMIXEDBINDING_API void glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint * params);
GLMIXEDBINDING_API void glGetInternalformatSampleivNV(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint * params);
GLMIXEDBINDING_API void glGetInvariantBooleanvEXT(GLuint id, GLenum value, GLboolean * data);
GLMIXEDBINDING_API void glGetInvariantFloatvEXT(GLuint id, GLenum value, GLfloat * data);
GLMIXEDBINDING_API void glGetInvariantIntegervEXT(GLuint id, GLenum value, GLint * data);
GLMIXEDBINDING_API void glGetLightfv(GLenum light, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetLightiv(GLenum light, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetLightxOES(GLenum light, GLenum pname, GLfixed * params);
GLMIXEDBINDING_API void glGetLightxvOES(GLenum light, GLenum pname, GLfixed * params);
GLMIXEDBINDING_API void glGetListParameterfvSGIX(GLuint list, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetListParameterivSGIX(GLuint list, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetLocalConstantBooleanvEXT(GLuint id, GLenum value, GLboolean * data);
GLMIXEDBINDING_API void glGetLocalConstantFloatvEXT(GLuint id, GLenum value, GLfloat * data);
GLMIXEDBINDING_API void glGetLocalConstantIntegervEXT(GLuint id, GLenum value, GLint * data);
GLMIXEDBINDING_API void glGetMapAttribParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetMapAttribParameterivNV(GLenum target, GLuint index, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void * points);
GLMIXEDBINDING_API void glGetMapdv(GLenum target, GLenum query, GLdouble * v);
GLMIXEDBINDING_API void glGetMapfv(GLenum target, GLenum query, GLfloat * v);
GLMIXEDBINDING_API void glGetMapiv(GLenum target, GLenum query, GLint * v);
GLMIXEDBINDING_API void glGetMapParameterfvNV(GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetMapParameterivNV(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetMapxvOES(GLenum target, GLenum query, GLfixed * v);
GLMIXEDBINDING_API void glGetMaterialfv(GLenum face, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetMaterialiv(GLenum face, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetMaterialxOES(GLenum face, GLenum pname, GLfixed param);
GLMIXEDBINDING_API void glGetMaterialxvOES(GLenum face, GLenum pname, GLfixed * params);
GLMIXEDBINDING_API void glGetMemoryObjectDetachedResourcesuivNV(GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint * params);
GLMIXEDBINDING_API void glGetMemoryObjectParameterivEXT(GLuint memoryObject, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
GLMIXEDBINDING_API void glGetMinmaxEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
GLMIXEDBINDING_API void glGetMinmaxParameterfv(GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetMinmaxParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetMinmaxParameteriv(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetMinmaxParameterivEXT(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetMultisamplefv(GLenum pname, GLuint index, GLfloat * val);
GLMIXEDBINDING_API void glGetMultisamplefvNV(GLenum pname, GLuint index, GLfloat * val);
GLMIXEDBINDING_API void glGetMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble * params);
GLMIXEDBINDING_API void glGetMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetMultiTexImageEXT(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
GLMIXEDBINDING_API void glGetMultiTexLevelParameterfvEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetMultiTexLevelParameterivEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetNamedBufferParameteri64v(GLuint buffer, GLenum pname, GLint64 * params);
GLMIXEDBINDING_API void glGetNamedBufferParameteriv(GLuint buffer, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetNamedBufferParameterivEXT(GLuint buffer, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetNamedBufferParameterui64vNV(GLuint buffer, GLenum pname, GLuint64EXT * params);
GLMIXEDBINDING_API void glGetNamedBufferPointerv(GLuint buffer, GLenum pname, void ** params);
GLMIXEDBINDING_API void glGetNamedBufferPointervEXT(GLuint buffer, GLenum pname, void ** params);
GLMIXEDBINDING_API void glGetNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
GLMIXEDBINDING_API void glGetNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
GLMIXEDBINDING_API void glGetNamedFramebufferAttachmentParameteriv(GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetNamedFramebufferAttachmentParameterivEXT(GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetNamedFramebufferParameterfvAMD(GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat * values);
GLMIXEDBINDING_API void glGetNamedFramebufferParameteriv(GLuint framebuffer, GLenum pname, GLint * param);
GLMIXEDBINDING_API void glGetNamedFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetNamedProgramivEXT(GLuint program, GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetNamedProgramLocalParameterdvEXT(GLuint program, GLenum target, GLuint index, GLdouble * params);
GLMIXEDBINDING_API void glGetNamedProgramLocalParameterfvEXT(GLuint program, GLenum target, GLuint index, GLfloat * params);
GLMIXEDBINDING_API void glGetNamedProgramLocalParameterIivEXT(GLuint program, GLenum target, GLuint index, GLint * params);
GLMIXEDBINDING_API void glGetNamedProgramLocalParameterIuivEXT(GLuint program, GLenum target, GLuint index, GLuint * params);
GLMIXEDBINDING_API void glGetNamedProgramStringEXT(GLuint program, GLenum target, GLenum pname, void * string);
GLMIXEDBINDING_API void glGetNamedRenderbufferParameteriv(GLuint renderbuffer, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetNamedRenderbufferParameterivEXT(GLuint renderbuffer, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetNamedStringARB(GLint namelen, const GLchar * name, GLsizei bufSize, GLint * stringlen, GLchar * string);
GLMIXEDBINDING_API void glGetNamedStringivARB(GLint namelen, const GLchar * name, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetnColorTable(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
GLMIXEDBINDING_API void glGetnColorTableARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
GLMIXEDBINDING_API void glGetnCompressedTexImage(GLenum target, GLint lod, GLsizei bufSize, void * pixels);
GLMIXEDBINDING_API void glGetnCompressedTexImageARB(GLenum target, GLint lod, GLsizei bufSize, void * img);
GLMIXEDBINDING_API void glGetnConvolutionFilter(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
GLMIXEDBINDING_API void glGetnConvolutionFilterARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
GLMIXEDBINDING_API void glGetNextPerfQueryIdINTEL(GLuint queryId, GLuint * nextQueryId);
GLMIXEDBINDING_API void glGetnHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
GLMIXEDBINDING_API void glGetnHistogramARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
GLMIXEDBINDING_API void glGetnMapdv(GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
GLMIXEDBINDING_API void glGetnMapdvARB(GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
GLMIXEDBINDING_API void glGetnMapfv(GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
GLMIXEDBINDING_API void glGetnMapfvARB(GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
GLMIXEDBINDING_API void glGetnMapiv(GLenum target, GLenum query, GLsizei bufSize, GLint * v);
GLMIXEDBINDING_API void glGetnMapivARB(GLenum target, GLenum query, GLsizei bufSize, GLint * v);
GLMIXEDBINDING_API void glGetnMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
GLMIXEDBINDING_API void glGetnMinmaxARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
GLMIXEDBINDING_API void glGetnPixelMapfv(GLenum map, GLsizei bufSize, GLfloat * values);
GLMIXEDBINDING_API void glGetnPixelMapfvARB(GLenum map, GLsizei bufSize, GLfloat * values);
GLMIXEDBINDING_API void glGetnPixelMapuiv(GLenum map, GLsizei bufSize, GLuint * values);
GLMIXEDBINDING_API void glGetnPixelMapuivARB(GLenum map, GLsizei bufSize, GLuint * values);
GLMIXEDBINDING_API void glGetnPixelMapusv(GLenum map, GLsizei bufSize, GLushort * values);
GLMIXEDBINDING_API void glGetnPixelMapusvARB(GLenum map, GLsizei bufSize, GLushort * values);
GLMIXEDBINDING_API void glGetnPolygonStipple(GLsizei bufSize, GLubyte * pattern);
GLMIXEDBINDING_API void glGetnPolygonStippleARB(GLsizei bufSize, GLubyte * pattern);
GLMIXEDBINDING_API void glGetnSeparableFilter(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
GLMIXEDBINDING_API void glGetnSeparableFilterARB(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
GLMIXEDBINDING_API void glGetnTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
GLMIXEDBINDING_API void glGetnTexImageARB(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * img);
GLMIXEDBINDING_API void glGetnUniformdv(GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
GLMIXEDBINDING_API void glGetnUniformdvARB(GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
GLMIXEDBINDING_API void glGetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLMIXEDBINDING_API void glGetnUniformfvARB(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLMIXEDBINDING_API void glGetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLMIXEDBINDING_API void glGetnUniformfvKHR(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLMIXEDBINDING_API void glGetnUniformi64vARB(GLuint program, GLint location, GLsizei bufSize, GLint64 * params);
GLMIXEDBINDING_API void glGetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLMIXEDBINDING_API void glGetnUniformivARB(GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLMIXEDBINDING_API void glGetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLMIXEDBINDING_API void glGetnUniformivKHR(GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLMIXEDBINDING_API void glGetnUniformui64vARB(GLuint program, GLint location, GLsizei bufSize, GLuint64 * params);
GLMIXEDBINDING_API void glGetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
GLMIXEDBINDING_API void glGetnUniformuivARB(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
GLMIXEDBINDING_API void glGetnUniformuivKHR(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
GLMIXEDBINDING_API void glGetObjectBufferfvATI(GLuint buffer, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetObjectBufferivATI(GLuint buffer, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
GLMIXEDBINDING_API void glGetObjectLabelEXT(GLenum type, GLuint object, GLsizei bufSize, GLsizei * length, GLchar * label);
GLMIXEDBINDING_API void glGetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
GLMIXEDBINDING_API void glGetObjectParameterfvARB(GLhandleARB obj, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetObjectParameterivAPPLE(GLenum objectType, GLuint name, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetObjectParameterivARB(GLhandleARB obj, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetObjectPtrLabel(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
GLMIXEDBINDING_API void glGetObjectPtrLabelKHR(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
GLMIXEDBINDING_API void glGetOcclusionQueryivNV(GLuint id, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetOcclusionQueryuivNV(GLuint id, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetPathColorGenfvNV(GLenum color, GLenum pname, GLfloat * value);
GLMIXEDBINDING_API void glGetPathColorGenivNV(GLenum color, GLenum pname, GLint * value);
GLMIXEDBINDING_API void glGetPathCommandsNV(GLuint path, GLubyte * commands);
GLMIXEDBINDING_API void glGetPathCoordsNV(GLuint path, GLfloat * coords);
GLMIXEDBINDING_API void glGetPathDashArrayNV(GLuint path, GLfloat * dashArray);
GLMIXEDBINDING_API GLfloat glGetPathLengthNV(GLuint path, GLsizei startSegment, GLsizei numSegments);
GLMIXEDBINDING_API void glGetPathMetricRangeNV(PathMetricMask metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat * metrics);
GLMIXEDBINDING_API void glGetPathMetricsNV(PathMetricMask metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLsizei stride, GLfloat * metrics);
GLMIXEDBINDING_API void glGetPathParameterfvNV(GLuint path, GLenum pname, GLfloat * value);
GLMIXEDBINDING_API void glGetPathParameterivNV(GLuint path, GLenum pname, GLint * value);
GLMIXEDBINDING_API void glGetPathSpacingNV(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat * returnedSpacing);
GLMIXEDBINDING_API void glGetPathTexGenfvNV(GLenum texCoordSet, GLenum pname, GLfloat * value);
GLMIXEDBINDING_API void glGetPathTexGenivNV(GLenum texCoordSet, GLenum pname, GLint * value);
GLMIXEDBINDING_API void glGetPerfCounterInfoINTEL(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar * counterName, GLuint counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue);
GLMIXEDBINDING_API void glGetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint * data, GLint * bytesWritten);
GLMIXEDBINDING_API void glGetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname, void * data);
GLMIXEDBINDING_API void glGetPerfMonitorCountersAMD(GLuint group, GLint * numCounters, GLint * maxActiveCounters, GLsizei counterSize, GLuint * counters);
GLMIXEDBINDING_API void glGetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei * length, GLchar * counterString);
GLMIXEDBINDING_API void glGetPerfMonitorGroupsAMD(GLint * numGroups, GLsizei groupsSize, GLuint * groups);
GLMIXEDBINDING_API void glGetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei * length, GLchar * groupString);
GLMIXEDBINDING_API void glGetPerfQueryDataINTEL(GLuint queryHandle, GLuint flags, GLsizei dataSize, void * data, GLuint * bytesWritten);
GLMIXEDBINDING_API void glGetPerfQueryIdByNameINTEL(GLchar * queryName, GLuint * queryId);
GLMIXEDBINDING_API void glGetPerfQueryInfoINTEL(GLuint queryId, GLuint queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, PerformanceQueryCapsMaskINTEL capsMask);
GLMIXEDBINDING_API void glGetPixelMapfv(GLenum map, GLfloat * values);
GLMIXEDBINDING_API void glGetPixelMapuiv(GLenum map, GLuint * values);
GLMIXEDBINDING_API void glGetPixelMapusv(GLenum map, GLushort * values);
GLMIXEDBINDING_API void glGetPixelMapxv(GLenum map, GLint size, GLfixed * values);
GLMIXEDBINDING_API void glGetPixelTexGenParameterfvSGIS(GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetPixelTexGenParameterivSGIS(GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetPixelTransformParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetPixelTransformParameterivEXT(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetPointeri_vEXT(GLenum pname, GLuint index, void ** params);
GLMIXEDBINDING_API void glGetPointerIndexedvEXT(GLenum target, GLuint index, void ** data);
GLMIXEDBINDING_API void glGetPointerv(GLenum pname, void ** params);
GLMIXEDBINDING_API void glGetPointervEXT(GLenum pname, void ** params);
GLMIXEDBINDING_API void glGetPointervKHR(GLenum pname, void ** params);
GLMIXEDBINDING_API void glGetPolygonStipple(GLubyte * mask);
GLMIXEDBINDING_API void glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
GLMIXEDBINDING_API void glGetProgramBinaryOES(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
GLMIXEDBINDING_API void glGetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble * params);
GLMIXEDBINDING_API void glGetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat * params);
GLMIXEDBINDING_API void glGetProgramEnvParameterIivNV(GLenum target, GLuint index, GLint * params);
GLMIXEDBINDING_API void glGetProgramEnvParameterIuivNV(GLenum target, GLuint index, GLuint * params);
GLMIXEDBINDING_API void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLMIXEDBINDING_API void glGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetProgramiv(GLuint program, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetProgramivARB(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetProgramivNV(GLuint id, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble * params);
GLMIXEDBINDING_API void glGetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat * params);
GLMIXEDBINDING_API void glGetProgramLocalParameterIivNV(GLenum target, GLuint index, GLint * params);
GLMIXEDBINDING_API void glGetProgramLocalParameterIuivNV(GLenum target, GLuint index, GLuint * params);
GLMIXEDBINDING_API void glGetProgramNamedParameterdvNV(GLuint id, GLsizei len, const GLubyte * name, GLdouble * params);
GLMIXEDBINDING_API void glGetProgramNamedParameterfvNV(GLuint id, GLsizei len, const GLubyte * name, GLfloat * params);
GLMIXEDBINDING_API void glGetProgramParameterdvNV(GLenum target, GLuint index, GLenum pname, GLdouble * params);
GLMIXEDBINDING_API void glGetProgramParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLMIXEDBINDING_API void glGetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLMIXEDBINDING_API void glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetProgramResourcefvNV(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLfloat * params);
GLMIXEDBINDING_API GLuint glGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar * name);
GLMIXEDBINDING_API void glGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLint * params);
GLMIXEDBINDING_API GLint glGetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar * name);
GLMIXEDBINDING_API GLint glGetProgramResourceLocationIndex(GLuint program, GLenum programInterface, const GLchar * name);
GLMIXEDBINDING_API GLint glGetProgramResourceLocationIndexEXT(GLuint program, GLenum programInterface, const GLchar * name);
GLMIXEDBINDING_API void glGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
GLMIXEDBINDING_API void glGetProgramStageiv(GLuint program, GLenum shadertype, GLenum pname, GLint * values);
GLMIXEDBINDING_API void glGetProgramStringARB(GLenum target, GLenum pname, void * string);
GLMIXEDBINDING_API void glGetProgramStringNV(GLuint id, GLenum pname, GLubyte * program);
GLMIXEDBINDING_API void glGetProgramSubroutineParameteruivNV(GLenum target, GLuint index, GLuint * param);
GLMIXEDBINDING_API void glGetQueryBufferObjecti64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLMIXEDBINDING_API void glGetQueryBufferObjectiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLMIXEDBINDING_API void glGetQueryBufferObjectui64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLMIXEDBINDING_API void glGetQueryBufferObjectuiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
GLMIXEDBINDING_API void glGetQueryIndexediv(GLenum target, GLuint index, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetQueryiv(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetQueryivARB(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetQueryivEXT(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetQueryObjecti64v(GLuint id, GLenum pname, GLint64 * params);
GLMIXEDBINDING_API void glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 * params);
GLMIXEDBINDING_API void glGetQueryObjectiv(GLuint id, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetQueryObjectivARB(GLuint id, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetQueryObjectivEXT(GLuint id, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetQueryObjectui64v(GLuint id, GLenum pname, GLuint64 * params);
GLMIXEDBINDING_API void glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 * params);
GLMIXEDBINDING_API void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetQueryObjectuivARB(GLuint id, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetQueryObjectuivEXT(GLuint id, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetSamplerParameterIivEXT(GLuint sampler, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetSamplerParameterIivOES(GLuint sampler, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetSamplerParameterIuivEXT(GLuint sampler, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetSamplerParameterIuivOES(GLuint sampler, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetSemaphoreParameterivNV(GLuint semaphore, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetSemaphoreParameterui64vEXT(GLuint semaphore, GLenum pname, GLuint64 * params);
GLMIXEDBINDING_API void glGetSeparableFilter(GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
GLMIXEDBINDING_API void glGetSeparableFilterEXT(GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
GLMIXEDBINDING_API void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLMIXEDBINDING_API void glGetShaderiv(GLuint shader, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
GLMIXEDBINDING_API void glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
GLMIXEDBINDING_API void glGetShaderSourceARB(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source);
GLMIXEDBINDING_API void glGetShadingRateImagePaletteNV(GLuint viewport, GLuint entry, GLenum * rate);
GLMIXEDBINDING_API void glGetShadingRateSampleLocationivNV(GLenum rate, GLuint samples, GLuint index, GLint * location);
GLMIXEDBINDING_API void glGetSharpenTexFuncSGIS(GLenum target, GLfloat * points);
GLMIXEDBINDING_API GLushort glGetStageIndexNV(GLenum shadertype);
GLMIXEDBINDING_API const GLubyte * glGetString(GLenum name);
GLMIXEDBINDING_API const GLubyte * glGetStringi(GLenum name, GLuint index);
GLMIXEDBINDING_API GLuint glGetSubroutineIndex(GLuint program, GLenum shadertype, const GLchar * name);
GLMIXEDBINDING_API GLint glGetSubroutineUniformLocation(GLuint program, GLenum shadertype, const GLchar * name);
GLMIXEDBINDING_API void glGetSynciv(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
GLMIXEDBINDING_API void glGetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
GLMIXEDBINDING_API void glGetTexBumpParameterfvATI(GLenum pname, GLfloat * param);
GLMIXEDBINDING_API void glGetTexBumpParameterivATI(GLenum pname, GLint * param);
GLMIXEDBINDING_API void glGetTexEnvfv(GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetTexEnviv(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetTexEnvxvOES(GLenum target, GLenum pname, GLfixed * params);
GLMIXEDBINDING_API void glGetTexFilterFuncSGIS(GLenum target, GLenum filter, GLfloat * weights);
GLMIXEDBINDING_API void glGetTexGendv(GLenum coord, GLenum pname, GLdouble * params);
GLMIXEDBINDING_API void glGetTexGenfv(GLenum coord, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetTexGeniv(GLenum coord, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetTexGenxvOES(GLenum coord, GLenum pname, GLfixed * params);
GLMIXEDBINDING_API void glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
GLMIXEDBINDING_API void glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetTexLevelParameterxvOES(GLenum target, GLint level, GLenum pname, GLfixed * params);
GLMIXEDBINDING_API void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetTexParameterIiv(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetTexParameterIivOES(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetTexParameterIuivOES(GLenum target, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetTexParameteriv(GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetTexParameterPointervAPPLE(GLenum target, GLenum pname, void ** params);
GLMIXEDBINDING_API void glGetTexParameterxvOES(GLenum target, GLenum pname, GLfixed * params);
GLMIXEDBINDING_API GLuint64 glGetTextureHandleARB(GLuint texture);
GLMIXEDBINDING_API GLuint64 glGetTextureHandleIMG(GLuint texture);
GLMIXEDBINDING_API GLuint64 glGetTextureHandleNV(GLuint texture);
GLMIXEDBINDING_API void glGetTextureImage(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
GLMIXEDBINDING_API void glGetTextureImageEXT(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
GLMIXEDBINDING_API void glGetTextureLevelParameterfv(GLuint texture, GLint level, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetTextureLevelParameterfvEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetTextureLevelParameteriv(GLuint texture, GLint level, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetTextureLevelParameterivEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetTextureParameterfv(GLuint texture, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetTextureParameterIiv(GLuint texture, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetTextureParameterIuiv(GLuint texture, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetTextureParameteriv(GLuint texture, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, GLint * params);
GLMIXEDBINDING_API GLuint64 glGetTextureSamplerHandleARB(GLuint texture, GLuint sampler);
GLMIXEDBINDING_API GLuint64 glGetTextureSamplerHandleIMG(GLuint texture, GLuint sampler);
GLMIXEDBINDING_API GLuint64 glGetTextureSamplerHandleNV(GLuint texture, GLuint sampler);
GLMIXEDBINDING_API void glGetTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
GLMIXEDBINDING_API void glGetTrackMatrixivNV(GLenum target, GLuint address, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetTransformFeedbacki64_v(GLuint xfb, GLenum pname, GLuint index, GLint64 * param);
GLMIXEDBINDING_API void glGetTransformFeedbacki_v(GLuint xfb, GLenum pname, GLuint index, GLint * param);
GLMIXEDBINDING_API void glGetTransformFeedbackiv(GLuint xfb, GLenum pname, GLint * param);
GLMIXEDBINDING_API void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
GLMIXEDBINDING_API void glGetTransformFeedbackVaryingEXT(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
GLMIXEDBINDING_API void glGetTransformFeedbackVaryingNV(GLuint program, GLuint index, GLint * location);
GLMIXEDBINDING_API void glGetTranslatedShaderSourceANGLE(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
GLMIXEDBINDING_API GLuint glGetUniformBlockIndex(GLuint program, const GLchar * uniformBlockName);
GLMIXEDBINDING_API GLint glGetUniformBufferSizeEXT(GLuint program, GLint location);
GLMIXEDBINDING_API void glGetUniformdv(GLuint program, GLint location, GLdouble * params);
GLMIXEDBINDING_API void glGetUniformfv(GLuint program, GLint location, GLfloat * params);
GLMIXEDBINDING_API void glGetUniformfvARB(GLhandleARB programObj, GLint location, GLfloat * params);
GLMIXEDBINDING_API void glGetUniformi64vARB(GLuint program, GLint location, GLint64 * params);
GLMIXEDBINDING_API void glGetUniformi64vNV(GLuint program, GLint location, GLint64EXT * params);
GLMIXEDBINDING_API void glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
GLMIXEDBINDING_API void glGetUniformiv(GLuint program, GLint location, GLint * params);
GLMIXEDBINDING_API void glGetUniformivARB(GLhandleARB programObj, GLint location, GLint * params);
GLMIXEDBINDING_API GLint glGetUniformLocation(GLuint program, const GLchar * name);
GLMIXEDBINDING_API GLint glGetUniformLocationARB(GLhandleARB programObj, const GLcharARB * name);
GLMIXEDBINDING_API GLintptr glGetUniformOffsetEXT(GLuint program, GLint location);
GLMIXEDBINDING_API void glGetUniformSubroutineuiv(GLenum shadertype, GLint location, GLuint * params);
GLMIXEDBINDING_API void glGetUniformui64vARB(GLuint program, GLint location, GLuint64 * params);
GLMIXEDBINDING_API void glGetUniformui64vNV(GLuint program, GLint location, GLuint64EXT * params);
GLMIXEDBINDING_API void glGetUniformuiv(GLuint program, GLint location, GLuint * params);
GLMIXEDBINDING_API void glGetUniformuivEXT(GLuint program, GLint location, GLuint * params);
GLMIXEDBINDING_API void glGetUnsignedBytei_vEXT(GLenum target, GLuint index, GLubyte * data);
GLMIXEDBINDING_API void glGetUnsignedBytevEXT(GLenum pname, GLubyte * data);
GLMIXEDBINDING_API void glGetVariantArrayObjectfvATI(GLuint id, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetVariantArrayObjectivATI(GLuint id, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetVariantBooleanvEXT(GLuint id, GLenum value, GLboolean * data);
GLMIXEDBINDING_API void glGetVariantFloatvEXT(GLuint id, GLenum value, GLfloat * data);
GLMIXEDBINDING_API void glGetVariantIntegervEXT(GLuint id, GLenum value, GLint * data);
GLMIXEDBINDING_API void glGetVariantPointervEXT(GLuint id, GLenum value, void ** data);
GLMIXEDBINDING_API GLint glGetVaryingLocationNV(GLuint program, const GLchar * name);
GLMIXEDBINDING_API void glGetVertexArrayIndexed64iv(GLuint vaobj, GLuint index, GLenum pname, GLint64 * param);
GLMIXEDBINDING_API void glGetVertexArrayIndexediv(GLuint vaobj, GLuint index, GLenum pname, GLint * param);
GLMIXEDBINDING_API void glGetVertexArrayIntegeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, GLint * param);
GLMIXEDBINDING_API void glGetVertexArrayIntegervEXT(GLuint vaobj, GLenum pname, GLint * param);
GLMIXEDBINDING_API void glGetVertexArrayiv(GLuint vaobj, GLenum pname, GLint * param);
GLMIXEDBINDING_API void glGetVertexArrayPointeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, void ** param);
GLMIXEDBINDING_API void glGetVertexArrayPointervEXT(GLuint vaobj, GLenum pname, void ** param);
GLMIXEDBINDING_API void glGetVertexAttribArrayObjectfvATI(GLuint index, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetVertexAttribArrayObjectivATI(GLuint index, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetVertexAttribdv(GLuint index, GLenum pname, GLdouble * params);
GLMIXEDBINDING_API void glGetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble * params);
GLMIXEDBINDING_API void glGetVertexAttribdvNV(GLuint index, GLenum pname, GLdouble * params);
GLMIXEDBINDING_API void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetVertexAttribfvNV(GLuint index, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetVertexAttribIivEXT(GLuint index, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetVertexAttribIuivEXT(GLuint index, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glGetVertexAttribiv(GLuint index, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetVertexAttribivARB(GLuint index, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetVertexAttribivNV(GLuint index, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetVertexAttribLdv(GLuint index, GLenum pname, GLdouble * params);
GLMIXEDBINDING_API void glGetVertexAttribLdvEXT(GLuint index, GLenum pname, GLdouble * params);
GLMIXEDBINDING_API void glGetVertexAttribLi64vNV(GLuint index, GLenum pname, GLint64EXT * params);
GLMIXEDBINDING_API void glGetVertexAttribLui64vARB(GLuint index, GLenum pname, GLuint64EXT * params);
GLMIXEDBINDING_API void glGetVertexAttribLui64vNV(GLuint index, GLenum pname, GLuint64EXT * params);
GLMIXEDBINDING_API void glGetVertexAttribPointerv(GLuint index, GLenum pname, void ** pointer);
GLMIXEDBINDING_API void glGetVertexAttribPointervARB(GLuint index, GLenum pname, void ** pointer);
GLMIXEDBINDING_API void glGetVertexAttribPointervNV(GLuint index, GLenum pname, void ** pointer);
GLMIXEDBINDING_API void glGetVideoCaptureivNV(GLuint video_capture_slot, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetVideoCaptureStreamdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble * params);
GLMIXEDBINDING_API void glGetVideoCaptureStreamfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat * params);
GLMIXEDBINDING_API void glGetVideoCaptureStreamivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetVideoi64vNV(GLuint video_slot, GLenum pname, GLint64EXT * params);
GLMIXEDBINDING_API void glGetVideoivNV(GLuint video_slot, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glGetVideoui64vNV(GLuint video_slot, GLenum pname, GLuint64EXT * params);
GLMIXEDBINDING_API void glGetVideouivNV(GLuint video_slot, GLenum pname, GLuint * params);
GLMIXEDBINDING_API GLVULKANPROCNV glGetVkProcAddrNV(const GLchar * name);
GLMIXEDBINDING_API void glGlobalAlphaFactorbSUN(GLbyte factor);
GLMIXEDBINDING_API void glGlobalAlphaFactordSUN(GLdouble factor);
GLMIXEDBINDING_API void glGlobalAlphaFactorfSUN(GLfloat factor);
GLMIXEDBINDING_API void glGlobalAlphaFactoriSUN(GLint factor);
GLMIXEDBINDING_API void glGlobalAlphaFactorsSUN(GLshort factor);
GLMIXEDBINDING_API void glGlobalAlphaFactorubSUN(GLubyte factor);
GLMIXEDBINDING_API void glGlobalAlphaFactoruiSUN(GLuint factor);
GLMIXEDBINDING_API void glGlobalAlphaFactorusSUN(GLushort factor);
GLMIXEDBINDING_API void glHint(GLenum target, GLenum mode);
GLMIXEDBINDING_API void glHintPGI(GLenum target, VertexHintsMaskPGI mode);
GLMIXEDBINDING_API void glHistogram(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
GLMIXEDBINDING_API void glHistogramEXT(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
GLMIXEDBINDING_API void glIglooInterfaceSGIX(GLenum pname, const void * params);
GLMIXEDBINDING_API void glImageTransformParameterfHP(GLenum target, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glImageTransformParameterfvHP(GLenum target, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glImageTransformParameteriHP(GLenum target, GLenum pname, GLint param);
GLMIXEDBINDING_API void glImageTransformParameterivHP(GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glImportMemoryFdEXT(GLuint memory, GLuint64 size, GLenum handleType, GLint fd);
GLMIXEDBINDING_API void glImportMemoryWin32HandleEXT(GLuint memory, GLuint64 size, GLenum handleType, void * handle);
GLMIXEDBINDING_API void glImportMemoryWin32NameEXT(GLuint memory, GLuint64 size, GLenum handleType, const void * name);
GLMIXEDBINDING_API void glImportSemaphoreFdEXT(GLuint semaphore, GLenum handleType, GLint fd);
GLMIXEDBINDING_API void glImportSemaphoreWin32HandleEXT(GLuint semaphore, GLenum handleType, void * handle);
GLMIXEDBINDING_API void glImportSemaphoreWin32NameEXT(GLuint semaphore, GLenum handleType, const void * name);
GLMIXEDBINDING_API GLsync glImportSyncEXT(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
GLMIXEDBINDING_API void glIndexd(GLdouble c);
GLMIXEDBINDING_API void glIndexdv(const GLdouble * c);
GLMIXEDBINDING_API void glIndexf(GLfloat c);
GLMIXEDBINDING_API void glIndexFormatNV(GLenum type, GLsizei stride);
GLMIXEDBINDING_API void glIndexFuncEXT(GLenum func, GLclampf ref);
GLMIXEDBINDING_API void glIndexfv(const GLfloat * c);
GLMIXEDBINDING_API void glIndexi(GLint c);
GLMIXEDBINDING_API void glIndexiv(const GLint * c);
GLMIXEDBINDING_API void glIndexMask(GLuint mask);
GLMIXEDBINDING_API void glIndexMaterialEXT(GLenum face, GLenum mode);
GLMIXEDBINDING_API void glIndexPointer(GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glIndexPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLMIXEDBINDING_API void glIndexPointerListIBM(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLMIXEDBINDING_API void glIndexs(GLshort c);
GLMIXEDBINDING_API void glIndexsv(const GLshort * c);
GLMIXEDBINDING_API void glIndexub(GLubyte c);
GLMIXEDBINDING_API void glIndexubv(const GLubyte * c);
GLMIXEDBINDING_API void glIndexxOES(GLfixed component);
GLMIXEDBINDING_API void glIndexxvOES(const GLfixed * component);
GLMIXEDBINDING_API void glInitNames();
GLMIXEDBINDING_API void glInsertComponentEXT(GLuint res, GLuint src, GLuint num);
GLMIXEDBINDING_API void glInsertEventMarkerEXT(GLsizei length, const GLchar * marker);
GLMIXEDBINDING_API void glInstrumentsBufferSGIX(GLsizei size, GLint * buffer);
GLMIXEDBINDING_API void glInterleavedArrays(GLenum format, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glInterpolatePathsNV(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
GLMIXEDBINDING_API void glInvalidateBufferData(GLuint buffer);
GLMIXEDBINDING_API void glInvalidateBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr length);
GLMIXEDBINDING_API void glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments);
GLMIXEDBINDING_API void glInvalidateNamedFramebufferData(GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments);
GLMIXEDBINDING_API void glInvalidateNamedFramebufferSubData(GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glInvalidateTexImage(GLuint texture, GLint level);
GLMIXEDBINDING_API void glInvalidateTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
GLMIXEDBINDING_API GLboolean glIsAsyncMarkerSGIX(GLuint marker);
GLMIXEDBINDING_API GLboolean glIsBuffer(GLuint buffer);
GLMIXEDBINDING_API GLboolean glIsBufferARB(GLuint buffer);
GLMIXEDBINDING_API GLboolean glIsBufferResidentNV(GLenum target);
GLMIXEDBINDING_API GLboolean glIsCommandListNV(GLuint list);
GLMIXEDBINDING_API GLboolean glIsEnabled(GLenum cap);
GLMIXEDBINDING_API GLboolean glIsEnabledi(GLenum target, GLuint index);
GLMIXEDBINDING_API GLboolean glIsEnablediEXT(GLenum target, GLuint index);
GLMIXEDBINDING_API GLboolean glIsEnabledIndexedEXT(GLenum target, GLuint index);
GLMIXEDBINDING_API GLboolean glIsEnablediNV(GLenum target, GLuint index);
GLMIXEDBINDING_API GLboolean glIsEnablediOES(GLenum target, GLuint index);
GLMIXEDBINDING_API GLboolean glIsFenceAPPLE(GLuint fence);
GLMIXEDBINDING_API GLboolean glIsFenceNV(GLuint fence);
GLMIXEDBINDING_API GLboolean glIsFramebuffer(GLuint framebuffer);
GLMIXEDBINDING_API GLboolean glIsFramebufferEXT(GLuint framebuffer);
GLMIXEDBINDING_API GLboolean glIsImageHandleResidentARB(GLuint64 handle);
GLMIXEDBINDING_API GLboolean glIsImageHandleResidentNV(GLuint64 handle);
GLMIXEDBINDING_API GLboolean glIsList(GLuint list);
GLMIXEDBINDING_API GLboolean glIsMemoryObjectEXT(GLuint memoryObject);
GLMIXEDBINDING_API GLboolean glIsNameAMD(GLenum identifier, GLuint name);
GLMIXEDBINDING_API GLboolean glIsNamedBufferResidentNV(GLuint buffer);
GLMIXEDBINDING_API GLboolean glIsNamedStringARB(GLint namelen, const GLchar * name);
GLMIXEDBINDING_API GLboolean glIsObjectBufferATI(GLuint buffer);
GLMIXEDBINDING_API GLboolean glIsOcclusionQueryNV(GLuint id);
GLMIXEDBINDING_API GLboolean glIsPathNV(GLuint path);
GLMIXEDBINDING_API GLboolean glIsPointInFillPathNV(GLuint path, GLuint mask, GLfloat x, GLfloat y);
GLMIXEDBINDING_API GLboolean glIsPointInStrokePathNV(GLuint path, GLfloat x, GLfloat y);
GLMIXEDBINDING_API GLboolean glIsProgram(GLuint program);
GLMIXEDBINDING_API GLboolean glIsProgramARB(GLuint program);
GLMIXEDBINDING_API GLboolean glIsProgramNV(GLuint id);
GLMIXEDBINDING_API GLboolean glIsProgramPipeline(GLuint pipeline);
GLMIXEDBINDING_API GLboolean glIsProgramPipelineEXT(GLuint pipeline);
GLMIXEDBINDING_API GLboolean glIsQuery(GLuint id);
GLMIXEDBINDING_API GLboolean glIsQueryARB(GLuint id);
GLMIXEDBINDING_API GLboolean glIsQueryEXT(GLuint id);
GLMIXEDBINDING_API GLboolean glIsRenderbuffer(GLuint renderbuffer);
GLMIXEDBINDING_API GLboolean glIsRenderbufferEXT(GLuint renderbuffer);
GLMIXEDBINDING_API GLboolean glIsSampler(GLuint sampler);
GLMIXEDBINDING_API GLboolean glIsSemaphoreEXT(GLuint semaphore);
GLMIXEDBINDING_API GLboolean glIsShader(GLuint shader);
GLMIXEDBINDING_API GLboolean glIsStateNV(GLuint state);
GLMIXEDBINDING_API GLboolean glIsSync(GLsync sync);
GLMIXEDBINDING_API GLboolean glIsSyncAPPLE(GLsync sync);
GLMIXEDBINDING_API GLboolean glIsTexture(GLuint texture);
GLMIXEDBINDING_API GLboolean glIsTextureEXT(GLuint texture);
GLMIXEDBINDING_API GLboolean glIsTextureHandleResidentARB(GLuint64 handle);
GLMIXEDBINDING_API GLboolean glIsTextureHandleResidentNV(GLuint64 handle);
GLMIXEDBINDING_API GLboolean glIsTransformFeedback(GLuint id);
GLMIXEDBINDING_API GLboolean glIsTransformFeedbackNV(GLuint id);
GLMIXEDBINDING_API GLboolean glIsVariantEnabledEXT(GLuint id, GLenum cap);
GLMIXEDBINDING_API GLboolean glIsVertexArray(GLuint array);
GLMIXEDBINDING_API GLboolean glIsVertexArrayAPPLE(GLuint array);
GLMIXEDBINDING_API GLboolean glIsVertexArrayOES(GLuint array);
GLMIXEDBINDING_API GLboolean glIsVertexAttribEnabledAPPLE(GLuint index, GLenum pname);
GLMIXEDBINDING_API void glLabelObjectEXT(GLenum type, GLuint object, GLsizei length, const GLchar * label);
GLMIXEDBINDING_API void glLGPUCopyImageSubDataNVX(GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
GLMIXEDBINDING_API void glLGPUInterlockNVX();
GLMIXEDBINDING_API void glLGPUNamedBufferSubDataNVX(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
GLMIXEDBINDING_API void glLightEnviSGIX(GLenum pname, GLint param);
GLMIXEDBINDING_API void glLightf(GLenum light, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glLightfv(GLenum light, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glLighti(GLenum light, GLenum pname, GLint param);
GLMIXEDBINDING_API void glLightiv(GLenum light, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glLightModelf(GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glLightModelfv(GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glLightModeli(GLenum pname, GLint param);
GLMIXEDBINDING_API void glLightModeliv(GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glLightModelxOES(GLenum pname, GLfixed param);
GLMIXEDBINDING_API void glLightModelxvOES(GLenum pname, const GLfixed * param);
GLMIXEDBINDING_API void glLightxOES(GLenum light, GLenum pname, GLfixed param);
GLMIXEDBINDING_API void glLightxvOES(GLenum light, GLenum pname, const GLfixed * params);
GLMIXEDBINDING_API void glLineStipple(GLint factor, GLushort pattern);
GLMIXEDBINDING_API void glLineWidth(GLfloat width);
GLMIXEDBINDING_API void glLineWidthxOES(GLfixed width);
GLMIXEDBINDING_API void glLinkProgram(GLuint program);
GLMIXEDBINDING_API void glLinkProgramARB(GLhandleARB programObj);
GLMIXEDBINDING_API void glListBase(GLuint base);
GLMIXEDBINDING_API void glListDrawCommandsStatesClientNV(GLuint list, GLuint segment, const void ** indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
GLMIXEDBINDING_API void glListParameterfSGIX(GLuint list, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glListParameterfvSGIX(GLuint list, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glListParameteriSGIX(GLuint list, GLenum pname, GLint param);
GLMIXEDBINDING_API void glListParameterivSGIX(GLuint list, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glLoadIdentity();
GLMIXEDBINDING_API void glLoadIdentityDeformationMapSGIX(FfdMaskSGIX mask);
GLMIXEDBINDING_API void glLoadMatrixd(const GLdouble * m);
GLMIXEDBINDING_API void glLoadMatrixf(const GLfloat * m);
GLMIXEDBINDING_API void glLoadMatrixxOES(const GLfixed * m);
GLMIXEDBINDING_API void glLoadName(GLuint name);
GLMIXEDBINDING_API void glLoadProgramNV(GLenum target, GLuint id, GLsizei len, const GLubyte * program);
GLMIXEDBINDING_API void glLoadTransposeMatrixd(const GLdouble * m);
GLMIXEDBINDING_API void glLoadTransposeMatrixdARB(const GLdouble * m);
GLMIXEDBINDING_API void glLoadTransposeMatrixf(const GLfloat * m);
GLMIXEDBINDING_API void glLoadTransposeMatrixfARB(const GLfloat * m);
GLMIXEDBINDING_API void glLoadTransposeMatrixxOES(const GLfixed * m);
GLMIXEDBINDING_API void glLockArraysEXT(GLint first, GLsizei count);
GLMIXEDBINDING_API void glLogicOp(GLenum opcode);
GLMIXEDBINDING_API void glMakeBufferNonResidentNV(GLenum target);
GLMIXEDBINDING_API void glMakeBufferResidentNV(GLenum target, GLenum access);
GLMIXEDBINDING_API void glMakeImageHandleNonResidentARB(GLuint64 handle);
GLMIXEDBINDING_API void glMakeImageHandleNonResidentNV(GLuint64 handle);
GLMIXEDBINDING_API void glMakeImageHandleResidentARB(GLuint64 handle, GLenum access);
GLMIXEDBINDING_API void glMakeImageHandleResidentNV(GLuint64 handle, GLenum access);
GLMIXEDBINDING_API void glMakeNamedBufferNonResidentNV(GLuint buffer);
GLMIXEDBINDING_API void glMakeNamedBufferResidentNV(GLuint buffer, GLenum access);
GLMIXEDBINDING_API void glMakeTextureHandleNonResidentARB(GLuint64 handle);
GLMIXEDBINDING_API void glMakeTextureHandleNonResidentNV(GLuint64 handle);
GLMIXEDBINDING_API void glMakeTextureHandleResidentARB(GLuint64 handle);
GLMIXEDBINDING_API void glMakeTextureHandleResidentNV(GLuint64 handle);
GLMIXEDBINDING_API void glMap1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
GLMIXEDBINDING_API void glMap1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
GLMIXEDBINDING_API void glMap1xOES(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
GLMIXEDBINDING_API void glMap2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
GLMIXEDBINDING_API void glMap2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
GLMIXEDBINDING_API void glMap2xOES(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
GLMIXEDBINDING_API void * glMapBuffer(GLenum target, GLenum access);
GLMIXEDBINDING_API void * glMapBufferARB(GLenum target, GLenum access);
GLMIXEDBINDING_API void * glMapBufferOES(GLenum target, GLenum access);
GLMIXEDBINDING_API void * glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, MapBufferAccessMask access);
GLMIXEDBINDING_API void * glMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, MapBufferAccessMask access);
GLMIXEDBINDING_API void glMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void * points);
GLMIXEDBINDING_API void glMapGrid1d(GLint un, GLdouble u1, GLdouble u2);
GLMIXEDBINDING_API void glMapGrid1f(GLint un, GLfloat u1, GLfloat u2);
GLMIXEDBINDING_API void glMapGrid1xOES(GLint n, GLfixed u1, GLfixed u2);
GLMIXEDBINDING_API void glMapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
GLMIXEDBINDING_API void glMapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
GLMIXEDBINDING_API void glMapGrid2xOES(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
GLMIXEDBINDING_API void * glMapNamedBuffer(GLuint buffer, GLenum access);
GLMIXEDBINDING_API void * glMapNamedBufferEXT(GLuint buffer, GLenum access);
GLMIXEDBINDING_API void * glMapNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length, MapBufferAccessMask access);
GLMIXEDBINDING_API void * glMapNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length, MapBufferAccessMask access);
GLMIXEDBINDING_API void * glMapObjectBufferATI(GLuint buffer);
GLMIXEDBINDING_API void glMapParameterfvNV(GLenum target, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glMapParameterivNV(GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void * glMapTexture2DINTEL(GLuint texture, GLint level, GLbitfield access, GLint * stride, GLenum * layout);
GLMIXEDBINDING_API void glMapVertexAttrib1dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
GLMIXEDBINDING_API void glMapVertexAttrib1fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
GLMIXEDBINDING_API void glMapVertexAttrib2dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
GLMIXEDBINDING_API void glMapVertexAttrib2fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
GLMIXEDBINDING_API void glMaterialf(GLenum face, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glMaterialfv(GLenum face, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glMateriali(GLenum face, GLenum pname, GLint param);
GLMIXEDBINDING_API void glMaterialiv(GLenum face, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glMaterialxOES(GLenum face, GLenum pname, GLfixed param);
GLMIXEDBINDING_API void glMaterialxvOES(GLenum face, GLenum pname, const GLfixed * param);
GLMIXEDBINDING_API void glMatrixFrustumEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLMIXEDBINDING_API void glMatrixIndexPointerARB(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glMatrixIndexubvARB(GLint size, const GLubyte * indices);
GLMIXEDBINDING_API void glMatrixIndexuivARB(GLint size, const GLuint * indices);
GLMIXEDBINDING_API void glMatrixIndexusvARB(GLint size, const GLushort * indices);
GLMIXEDBINDING_API void glMatrixLoad3x2fNV(GLenum matrixMode, const GLfloat * m);
GLMIXEDBINDING_API void glMatrixLoad3x3fNV(GLenum matrixMode, const GLfloat * m);
GLMIXEDBINDING_API void glMatrixLoaddEXT(GLenum mode, const GLdouble * m);
GLMIXEDBINDING_API void glMatrixLoadfEXT(GLenum mode, const GLfloat * m);
GLMIXEDBINDING_API void glMatrixLoadIdentityEXT(GLenum mode);
GLMIXEDBINDING_API void glMatrixLoadTranspose3x3fNV(GLenum matrixMode, const GLfloat * m);
GLMIXEDBINDING_API void glMatrixLoadTransposedEXT(GLenum mode, const GLdouble * m);
GLMIXEDBINDING_API void glMatrixLoadTransposefEXT(GLenum mode, const GLfloat * m);
GLMIXEDBINDING_API void glMatrixMode(GLenum mode);
GLMIXEDBINDING_API void glMatrixMult3x2fNV(GLenum matrixMode, const GLfloat * m);
GLMIXEDBINDING_API void glMatrixMult3x3fNV(GLenum matrixMode, const GLfloat * m);
GLMIXEDBINDING_API void glMatrixMultdEXT(GLenum mode, const GLdouble * m);
GLMIXEDBINDING_API void glMatrixMultfEXT(GLenum mode, const GLfloat * m);
GLMIXEDBINDING_API void glMatrixMultTranspose3x3fNV(GLenum matrixMode, const GLfloat * m);
GLMIXEDBINDING_API void glMatrixMultTransposedEXT(GLenum mode, const GLdouble * m);
GLMIXEDBINDING_API void glMatrixMultTransposefEXT(GLenum mode, const GLfloat * m);
GLMIXEDBINDING_API void glMatrixOrthoEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLMIXEDBINDING_API void glMatrixPopEXT(GLenum mode);
GLMIXEDBINDING_API void glMatrixPushEXT(GLenum mode);
GLMIXEDBINDING_API void glMatrixRotatedEXT(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glMatrixRotatefEXT(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glMatrixScaledEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glMatrixScalefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glMatrixTranslatedEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glMatrixTranslatefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glMaxActiveShaderCoresARM(GLuint count);
GLMIXEDBINDING_API void glMaxShaderCompilerThreadsARB(GLuint count);
GLMIXEDBINDING_API void glMaxShaderCompilerThreadsKHR(GLuint count);
GLMIXEDBINDING_API void glMemoryBarrier(MemoryBarrierMask barriers);
GLMIXEDBINDING_API void glMemoryBarrierByRegion(MemoryBarrierMask barriers);
GLMIXEDBINDING_API void glMemoryBarrierEXT(MemoryBarrierMask barriers);
GLMIXEDBINDING_API void glMemoryObjectParameterivEXT(GLuint memoryObject, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glMinmax(GLenum target, GLenum internalformat, GLboolean sink);
GLMIXEDBINDING_API void glMinmaxEXT(GLenum target, GLenum internalformat, GLboolean sink);
GLMIXEDBINDING_API void glMinSampleShading(GLfloat value);
GLMIXEDBINDING_API void glMinSampleShadingARB(GLfloat value);
GLMIXEDBINDING_API void glMinSampleShadingOES(GLfloat value);
GLMIXEDBINDING_API void glMulticastBarrierNV();
GLMIXEDBINDING_API void glMulticastBlitFramebufferNV(GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, ClearBufferMask mask, GLenum filter);
GLMIXEDBINDING_API void glMulticastBufferSubDataNV(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
GLMIXEDBINDING_API void glMulticastCopyBufferSubDataNV(GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLMIXEDBINDING_API void glMulticastCopyImageSubDataNV(GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLMIXEDBINDING_API void glMulticastFramebufferSampleLocationsfvNV(GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glMulticastGetQueryObjecti64vNV(GLuint gpu, GLuint id, GLenum pname, GLint64 * params);
GLMIXEDBINDING_API void glMulticastGetQueryObjectivNV(GLuint gpu, GLuint id, GLenum pname, GLint * params);
GLMIXEDBINDING_API void glMulticastGetQueryObjectui64vNV(GLuint gpu, GLuint id, GLenum pname, GLuint64 * params);
GLMIXEDBINDING_API void glMulticastGetQueryObjectuivNV(GLuint gpu, GLuint id, GLenum pname, GLuint * params);
GLMIXEDBINDING_API void glMulticastScissorArrayvNVX(GLuint gpu, GLuint first, GLsizei count, const GLint * v);
GLMIXEDBINDING_API void glMulticastViewportArrayvNVX(GLuint gpu, GLuint first, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glMulticastViewportPositionWScaleNVX(GLuint gpu, GLuint index, GLfloat xcoeff, GLfloat ycoeff);
GLMIXEDBINDING_API void glMulticastWaitSyncNV(GLuint signalGpu, GLbitfield waitGpuMask);
GLMIXEDBINDING_API void glMultiDrawArrays(GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
GLMIXEDBINDING_API void glMultiDrawArraysEXT(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
GLMIXEDBINDING_API void glMultiDrawArraysIndirect(GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
GLMIXEDBINDING_API void glMultiDrawArraysIndirectAMD(GLenum mode, const void * indirect, GLsizei primcount, GLsizei stride);
GLMIXEDBINDING_API void glMultiDrawArraysIndirectBindlessCountNV(GLenum mode, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
GLMIXEDBINDING_API void glMultiDrawArraysIndirectBindlessNV(GLenum mode, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
GLMIXEDBINDING_API void glMultiDrawArraysIndirectCount(GLenum mode, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
GLMIXEDBINDING_API void glMultiDrawArraysIndirectCountARB(GLenum mode, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
GLMIXEDBINDING_API void glMultiDrawArraysIndirectEXT(GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
GLMIXEDBINDING_API void glMultiDrawElementArrayAPPLE(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
GLMIXEDBINDING_API void glMultiDrawElements(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
GLMIXEDBINDING_API void glMultiDrawElementsBaseVertex(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
GLMIXEDBINDING_API void glMultiDrawElementsBaseVertexEXT(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
GLMIXEDBINDING_API void glMultiDrawElementsEXT(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount);
GLMIXEDBINDING_API void glMultiDrawElementsIndirect(GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
GLMIXEDBINDING_API void glMultiDrawElementsIndirectAMD(GLenum mode, GLenum type, const void * indirect, GLsizei primcount, GLsizei stride);
GLMIXEDBINDING_API void glMultiDrawElementsIndirectBindlessCountNV(GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
GLMIXEDBINDING_API void glMultiDrawElementsIndirectBindlessNV(GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
GLMIXEDBINDING_API void glMultiDrawElementsIndirectCount(GLenum mode, GLenum type, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
GLMIXEDBINDING_API void glMultiDrawElementsIndirectCountARB(GLenum mode, GLenum type, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
GLMIXEDBINDING_API void glMultiDrawElementsIndirectEXT(GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
GLMIXEDBINDING_API void glMultiDrawMeshTasksIndirectCountNV(GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
GLMIXEDBINDING_API void glMultiDrawMeshTasksIndirectNV(GLintptr indirect, GLsizei drawcount, GLsizei stride);
GLMIXEDBINDING_API void glMultiDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, const GLint * first, const GLsizei * count, GLsizei primcount);
GLMIXEDBINDING_API void glMultiModeDrawArraysIBM(const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei primcount, GLint modestride);
GLMIXEDBINDING_API void glMultiModeDrawElementsIBM(const GLenum * mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, GLint modestride);
GLMIXEDBINDING_API void glMultiTexBufferEXT(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
GLMIXEDBINDING_API void glMultiTexCoord1bOES(GLenum texture, GLbyte s);
GLMIXEDBINDING_API void glMultiTexCoord1bvOES(GLenum texture, const GLbyte * coords);
GLMIXEDBINDING_API void glMultiTexCoord1d(GLenum target, GLdouble s);
GLMIXEDBINDING_API void glMultiTexCoord1dARB(GLenum target, GLdouble s);
GLMIXEDBINDING_API void glMultiTexCoord1dv(GLenum target, const GLdouble * v);
GLMIXEDBINDING_API void glMultiTexCoord1dvARB(GLenum target, const GLdouble * v);
GLMIXEDBINDING_API void glMultiTexCoord1f(GLenum target, GLfloat s);
GLMIXEDBINDING_API void glMultiTexCoord1fARB(GLenum target, GLfloat s);
GLMIXEDBINDING_API void glMultiTexCoord1fv(GLenum target, const GLfloat * v);
GLMIXEDBINDING_API void glMultiTexCoord1fvARB(GLenum target, const GLfloat * v);
GLMIXEDBINDING_API void glMultiTexCoord1hNV(GLenum target, GLhalfNV s);
GLMIXEDBINDING_API void glMultiTexCoord1hvNV(GLenum target, const GLhalfNV * v);
GLMIXEDBINDING_API void glMultiTexCoord1i(GLenum target, GLint s);
GLMIXEDBINDING_API void glMultiTexCoord1iARB(GLenum target, GLint s);
GLMIXEDBINDING_API void glMultiTexCoord1iv(GLenum target, const GLint * v);
GLMIXEDBINDING_API void glMultiTexCoord1ivARB(GLenum target, const GLint * v);
GLMIXEDBINDING_API void glMultiTexCoord1s(GLenum target, GLshort s);
GLMIXEDBINDING_API void glMultiTexCoord1sARB(GLenum target, GLshort s);
GLMIXEDBINDING_API void glMultiTexCoord1sv(GLenum target, const GLshort * v);
GLMIXEDBINDING_API void glMultiTexCoord1svARB(GLenum target, const GLshort * v);
GLMIXEDBINDING_API void glMultiTexCoord1xOES(GLenum texture, GLfixed s);
GLMIXEDBINDING_API void glMultiTexCoord1xvOES(GLenum texture, const GLfixed * coords);
GLMIXEDBINDING_API void glMultiTexCoord2bOES(GLenum texture, GLbyte s, GLbyte t);
GLMIXEDBINDING_API void glMultiTexCoord2bvOES(GLenum texture, const GLbyte * coords);
GLMIXEDBINDING_API void glMultiTexCoord2d(GLenum target, GLdouble s, GLdouble t);
GLMIXEDBINDING_API void glMultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t);
GLMIXEDBINDING_API void glMultiTexCoord2dv(GLenum target, const GLdouble * v);
GLMIXEDBINDING_API void glMultiTexCoord2dvARB(GLenum target, const GLdouble * v);
GLMIXEDBINDING_API void glMultiTexCoord2f(GLenum target, GLfloat s, GLfloat t);
GLMIXEDBINDING_API void glMultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t);
GLMIXEDBINDING_API void glMultiTexCoord2fv(GLenum target, const GLfloat * v);
GLMIXEDBINDING_API void glMultiTexCoord2fvARB(GLenum target, const GLfloat * v);
GLMIXEDBINDING_API void glMultiTexCoord2hNV(GLenum target, GLhalfNV s, GLhalfNV t);
GLMIXEDBINDING_API void glMultiTexCoord2hvNV(GLenum target, const GLhalfNV * v);
GLMIXEDBINDING_API void glMultiTexCoord2i(GLenum target, GLint s, GLint t);
GLMIXEDBINDING_API void glMultiTexCoord2iARB(GLenum target, GLint s, GLint t);
GLMIXEDBINDING_API void glMultiTexCoord2iv(GLenum target, const GLint * v);
GLMIXEDBINDING_API void glMultiTexCoord2ivARB(GLenum target, const GLint * v);
GLMIXEDBINDING_API void glMultiTexCoord2s(GLenum target, GLshort s, GLshort t);
GLMIXEDBINDING_API void glMultiTexCoord2sARB(GLenum target, GLshort s, GLshort t);
GLMIXEDBINDING_API void glMultiTexCoord2sv(GLenum target, const GLshort * v);
GLMIXEDBINDING_API void glMultiTexCoord2svARB(GLenum target, const GLshort * v);
GLMIXEDBINDING_API void glMultiTexCoord2xOES(GLenum texture, GLfixed s, GLfixed t);
GLMIXEDBINDING_API void glMultiTexCoord2xvOES(GLenum texture, const GLfixed * coords);
GLMIXEDBINDING_API void glMultiTexCoord3bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r);
GLMIXEDBINDING_API void glMultiTexCoord3bvOES(GLenum texture, const GLbyte * coords);
GLMIXEDBINDING_API void glMultiTexCoord3d(GLenum target, GLdouble s, GLdouble t, GLdouble r);
GLMIXEDBINDING_API void glMultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r);
GLMIXEDBINDING_API void glMultiTexCoord3dv(GLenum target, const GLdouble * v);
GLMIXEDBINDING_API void glMultiTexCoord3dvARB(GLenum target, const GLdouble * v);
GLMIXEDBINDING_API void glMultiTexCoord3f(GLenum target, GLfloat s, GLfloat t, GLfloat r);
GLMIXEDBINDING_API void glMultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r);
GLMIXEDBINDING_API void glMultiTexCoord3fv(GLenum target, const GLfloat * v);
GLMIXEDBINDING_API void glMultiTexCoord3fvARB(GLenum target, const GLfloat * v);
GLMIXEDBINDING_API void glMultiTexCoord3hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
GLMIXEDBINDING_API void glMultiTexCoord3hvNV(GLenum target, const GLhalfNV * v);
GLMIXEDBINDING_API void glMultiTexCoord3i(GLenum target, GLint s, GLint t, GLint r);
GLMIXEDBINDING_API void glMultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r);
GLMIXEDBINDING_API void glMultiTexCoord3iv(GLenum target, const GLint * v);
GLMIXEDBINDING_API void glMultiTexCoord3ivARB(GLenum target, const GLint * v);
GLMIXEDBINDING_API void glMultiTexCoord3s(GLenum target, GLshort s, GLshort t, GLshort r);
GLMIXEDBINDING_API void glMultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r);
GLMIXEDBINDING_API void glMultiTexCoord3sv(GLenum target, const GLshort * v);
GLMIXEDBINDING_API void glMultiTexCoord3svARB(GLenum target, const GLshort * v);
GLMIXEDBINDING_API void glMultiTexCoord3xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r);
GLMIXEDBINDING_API void glMultiTexCoord3xvOES(GLenum texture, const GLfixed * coords);
GLMIXEDBINDING_API void glMultiTexCoord4bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
GLMIXEDBINDING_API void glMultiTexCoord4bvOES(GLenum texture, const GLbyte * coords);
GLMIXEDBINDING_API void glMultiTexCoord4d(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLMIXEDBINDING_API void glMultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLMIXEDBINDING_API void glMultiTexCoord4dv(GLenum target, const GLdouble * v);
GLMIXEDBINDING_API void glMultiTexCoord4dvARB(GLenum target, const GLdouble * v);
GLMIXEDBINDING_API void glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLMIXEDBINDING_API void glMultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLMIXEDBINDING_API void glMultiTexCoord4fv(GLenum target, const GLfloat * v);
GLMIXEDBINDING_API void glMultiTexCoord4fvARB(GLenum target, const GLfloat * v);
GLMIXEDBINDING_API void glMultiTexCoord4hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
GLMIXEDBINDING_API void glMultiTexCoord4hvNV(GLenum target, const GLhalfNV * v);
GLMIXEDBINDING_API void glMultiTexCoord4i(GLenum target, GLint s, GLint t, GLint r, GLint q);
GLMIXEDBINDING_API void glMultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q);
GLMIXEDBINDING_API void glMultiTexCoord4iv(GLenum target, const GLint * v);
GLMIXEDBINDING_API void glMultiTexCoord4ivARB(GLenum target, const GLint * v);
GLMIXEDBINDING_API void glMultiTexCoord4s(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
GLMIXEDBINDING_API void glMultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
GLMIXEDBINDING_API void glMultiTexCoord4sv(GLenum target, const GLshort * v);
GLMIXEDBINDING_API void glMultiTexCoord4svARB(GLenum target, const GLshort * v);
GLMIXEDBINDING_API void glMultiTexCoord4xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
GLMIXEDBINDING_API void glMultiTexCoord4xvOES(GLenum texture, const GLfixed * coords);
GLMIXEDBINDING_API void glMultiTexCoordP1ui(GLenum texture, GLenum type, GLuint coords);
GLMIXEDBINDING_API void glMultiTexCoordP1uiv(GLenum texture, GLenum type, const GLuint * coords);
GLMIXEDBINDING_API void glMultiTexCoordP2ui(GLenum texture, GLenum type, GLuint coords);
GLMIXEDBINDING_API void glMultiTexCoordP2uiv(GLenum texture, GLenum type, const GLuint * coords);
GLMIXEDBINDING_API void glMultiTexCoordP3ui(GLenum texture, GLenum type, GLuint coords);
GLMIXEDBINDING_API void glMultiTexCoordP3uiv(GLenum texture, GLenum type, const GLuint * coords);
GLMIXEDBINDING_API void glMultiTexCoordP4ui(GLenum texture, GLenum type, GLuint coords);
GLMIXEDBINDING_API void glMultiTexCoordP4uiv(GLenum texture, GLenum type, const GLuint * coords);
GLMIXEDBINDING_API void glMultiTexCoordPointerEXT(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glMultiTexEnvfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glMultiTexEnviEXT(GLenum texunit, GLenum target, GLenum pname, GLint param);
GLMIXEDBINDING_API void glMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glMultiTexGendEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
GLMIXEDBINDING_API void glMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLdouble * params);
GLMIXEDBINDING_API void glMultiTexGenfEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glMultiTexGeniEXT(GLenum texunit, GLenum coord, GLenum pname, GLint param);
GLMIXEDBINDING_API void glMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glMultiTexParameterfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glMultiTexParameteriEXT(GLenum texunit, GLenum target, GLenum pname, GLint param);
GLMIXEDBINDING_API void glMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, const GLuint * params);
GLMIXEDBINDING_API void glMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glMultiTexRenderbufferEXT(GLenum texunit, GLenum target, GLuint renderbuffer);
GLMIXEDBINDING_API void glMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glMultMatrixd(const GLdouble * m);
GLMIXEDBINDING_API void glMultMatrixf(const GLfloat * m);
GLMIXEDBINDING_API void glMultMatrixxOES(const GLfixed * m);
GLMIXEDBINDING_API void glMultTransposeMatrixd(const GLdouble * m);
GLMIXEDBINDING_API void glMultTransposeMatrixdARB(const GLdouble * m);
GLMIXEDBINDING_API void glMultTransposeMatrixf(const GLfloat * m);
GLMIXEDBINDING_API void glMultTransposeMatrixfARB(const GLfloat * m);
GLMIXEDBINDING_API void glMultTransposeMatrixxOES(const GLfixed * m);
GLMIXEDBINDING_API void glNamedBufferAttachMemoryNV(GLuint buffer, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glNamedBufferData(GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
GLMIXEDBINDING_API void glNamedBufferDataEXT(GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
GLMIXEDBINDING_API void glNamedBufferPageCommitmentARB(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
GLMIXEDBINDING_API void glNamedBufferPageCommitmentEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
GLMIXEDBINDING_API void glNamedBufferPageCommitmentMemNV(GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
GLMIXEDBINDING_API void glNamedBufferStorage(GLuint buffer, GLsizeiptr size, const void * data, BufferStorageMask flags);
GLMIXEDBINDING_API void glNamedBufferStorageEXT(GLuint buffer, GLsizeiptr size, const void * data, BufferStorageMask flags);
GLMIXEDBINDING_API void glNamedBufferStorageExternalEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, BufferStorageMask flags);
GLMIXEDBINDING_API void glNamedBufferStorageMemEXT(GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
GLMIXEDBINDING_API void glNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
GLMIXEDBINDING_API void glNamedCopyBufferSubDataEXT(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLMIXEDBINDING_API void glNamedFramebufferDrawBuffer(GLuint framebuffer, GLenum buf);
GLMIXEDBINDING_API void glNamedFramebufferDrawBuffers(GLuint framebuffer, GLsizei n, const GLenum * bufs);
GLMIXEDBINDING_API void glNamedFramebufferParameteri(GLuint framebuffer, GLenum pname, GLint param);
GLMIXEDBINDING_API void glNamedFramebufferParameteriEXT(GLuint framebuffer, GLenum pname, GLint param);
GLMIXEDBINDING_API void glNamedFramebufferReadBuffer(GLuint framebuffer, GLenum src);
GLMIXEDBINDING_API void glNamedFramebufferRenderbuffer(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLMIXEDBINDING_API void glNamedFramebufferRenderbufferEXT(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLMIXEDBINDING_API void glNamedFramebufferSampleLocationsfvARB(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glNamedFramebufferSampleLocationsfvNV(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glNamedFramebufferSamplePositionsfvAMD(GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat * values);
GLMIXEDBINDING_API void glNamedFramebufferTexture(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
GLMIXEDBINDING_API void glNamedFramebufferTexture1DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLMIXEDBINDING_API void glNamedFramebufferTexture2DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLMIXEDBINDING_API void glNamedFramebufferTexture3DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLMIXEDBINDING_API void glNamedFramebufferTextureEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
GLMIXEDBINDING_API void glNamedFramebufferTextureFaceEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
GLMIXEDBINDING_API void glNamedFramebufferTextureLayer(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLMIXEDBINDING_API void glNamedFramebufferTextureLayerEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLMIXEDBINDING_API void glNamedFramebufferTextureMultiviewOVR(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
GLMIXEDBINDING_API void glNamedProgramLocalParameter4dEXT(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glNamedProgramLocalParameter4dvEXT(GLuint program, GLenum target, GLuint index, const GLdouble * params);
GLMIXEDBINDING_API void glNamedProgramLocalParameter4fEXT(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLMIXEDBINDING_API void glNamedProgramLocalParameter4fvEXT(GLuint program, GLenum target, GLuint index, const GLfloat * params);
GLMIXEDBINDING_API void glNamedProgramLocalParameterI4iEXT(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLMIXEDBINDING_API void glNamedProgramLocalParameterI4ivEXT(GLuint program, GLenum target, GLuint index, const GLint * params);
GLMIXEDBINDING_API void glNamedProgramLocalParameterI4uiEXT(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLMIXEDBINDING_API void glNamedProgramLocalParameterI4uivEXT(GLuint program, GLenum target, GLuint index, const GLuint * params);
GLMIXEDBINDING_API void glNamedProgramLocalParameters4fvEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat * params);
GLMIXEDBINDING_API void glNamedProgramLocalParametersI4ivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint * params);
GLMIXEDBINDING_API void glNamedProgramLocalParametersI4uivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint * params);
GLMIXEDBINDING_API void glNamedProgramStringEXT(GLuint program, GLenum target, GLenum format, GLsizei len, const void * string);
GLMIXEDBINDING_API void glNamedRenderbufferStorage(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glNamedRenderbufferStorageEXT(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glNamedRenderbufferStorageMultisample(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glNamedRenderbufferStorageMultisampleAdvancedAMD(GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glNamedRenderbufferStorageMultisampleCoverageEXT(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glNamedRenderbufferStorageMultisampleEXT(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glNamedStringARB(GLenum type, GLint namelen, const GLchar * name, GLint stringlen, const GLchar * string);
GLMIXEDBINDING_API void glNewList(GLuint list, GLenum mode);
GLMIXEDBINDING_API GLuint glNewObjectBufferATI(GLsizei size, const void * pointer, GLenum usage);
GLMIXEDBINDING_API void glNormal3b(GLbyte nx, GLbyte ny, GLbyte nz);
GLMIXEDBINDING_API void glNormal3bv(const GLbyte * v);
GLMIXEDBINDING_API void glNormal3d(GLdouble nx, GLdouble ny, GLdouble nz);
GLMIXEDBINDING_API void glNormal3dv(const GLdouble * v);
GLMIXEDBINDING_API void glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz);
GLMIXEDBINDING_API void glNormal3fv(const GLfloat * v);
GLMIXEDBINDING_API void glNormal3fVertex3fSUN(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glNormal3fVertex3fvSUN(const GLfloat * n, const GLfloat * v);
GLMIXEDBINDING_API void glNormal3hNV(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
GLMIXEDBINDING_API void glNormal3hvNV(const GLhalfNV * v);
GLMIXEDBINDING_API void glNormal3i(GLint nx, GLint ny, GLint nz);
GLMIXEDBINDING_API void glNormal3iv(const GLint * v);
GLMIXEDBINDING_API void glNormal3s(GLshort nx, GLshort ny, GLshort nz);
GLMIXEDBINDING_API void glNormal3sv(const GLshort * v);
GLMIXEDBINDING_API void glNormal3xOES(GLfixed nx, GLfixed ny, GLfixed nz);
GLMIXEDBINDING_API void glNormal3xvOES(const GLfixed * coords);
GLMIXEDBINDING_API void glNormalFormatNV(GLenum type, GLsizei stride);
GLMIXEDBINDING_API void glNormalP3ui(GLenum type, GLuint coords);
GLMIXEDBINDING_API void glNormalP3uiv(GLenum type, const GLuint * coords);
GLMIXEDBINDING_API void glNormalPointer(GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glNormalPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLMIXEDBINDING_API void glNormalPointerListIBM(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLMIXEDBINDING_API void glNormalPointervINTEL(GLenum type, const void ** pointer);
GLMIXEDBINDING_API void glNormalStream3bATI(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
GLMIXEDBINDING_API void glNormalStream3bvATI(GLenum stream, const GLbyte * coords);
GLMIXEDBINDING_API void glNormalStream3dATI(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
GLMIXEDBINDING_API void glNormalStream3dvATI(GLenum stream, const GLdouble * coords);
GLMIXEDBINDING_API void glNormalStream3fATI(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
GLMIXEDBINDING_API void glNormalStream3fvATI(GLenum stream, const GLfloat * coords);
GLMIXEDBINDING_API void glNormalStream3iATI(GLenum stream, GLint nx, GLint ny, GLint nz);
GLMIXEDBINDING_API void glNormalStream3ivATI(GLenum stream, const GLint * coords);
GLMIXEDBINDING_API void glNormalStream3sATI(GLenum stream, GLshort nx, GLshort ny, GLshort nz);
GLMIXEDBINDING_API void glNormalStream3svATI(GLenum stream, const GLshort * coords);
GLMIXEDBINDING_API void glObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
GLMIXEDBINDING_API void glObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
GLMIXEDBINDING_API void glObjectPtrLabel(const void * ptr, GLsizei length, const GLchar * label);
GLMIXEDBINDING_API void glObjectPtrLabelKHR(const void * ptr, GLsizei length, const GLchar * label);
GLMIXEDBINDING_API GLenum glObjectPurgeableAPPLE(GLenum objectType, GLuint name, GLenum option);
GLMIXEDBINDING_API GLenum glObjectUnpurgeableAPPLE(GLenum objectType, GLuint name, GLenum option);
GLMIXEDBINDING_API void glOrtho(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLMIXEDBINDING_API void glOrthofOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
GLMIXEDBINDING_API void glOrthoxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
GLMIXEDBINDING_API void glPassTexCoordATI(GLuint dst, GLuint coord, GLenum swizzle);
GLMIXEDBINDING_API void glPassThrough(GLfloat token);
GLMIXEDBINDING_API void glPassThroughxOES(GLfixed token);
GLMIXEDBINDING_API void glPatchParameterfv(GLenum pname, const GLfloat * values);
GLMIXEDBINDING_API void glPatchParameteri(GLenum pname, GLint value);
GLMIXEDBINDING_API void glPatchParameteriEXT(GLenum pname, GLint value);
GLMIXEDBINDING_API void glPatchParameteriOES(GLenum pname, GLint value);
GLMIXEDBINDING_API void glPathColorGenNV(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat * coeffs);
GLMIXEDBINDING_API void glPathCommandsNV(GLuint path, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
GLMIXEDBINDING_API void glPathCoordsNV(GLuint path, GLsizei numCoords, GLenum coordType, const void * coords);
GLMIXEDBINDING_API void glPathCoverDepthFuncNV(GLenum func);
GLMIXEDBINDING_API void glPathDashArrayNV(GLuint path, GLsizei dashCount, const GLfloat * dashArray);
GLMIXEDBINDING_API void glPathFogGenNV(GLenum genMode);
GLMIXEDBINDING_API GLenum glPathGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLMIXEDBINDING_API GLenum glPathGlyphIndexRangeNV(GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint * baseAndCount);
GLMIXEDBINDING_API void glPathGlyphRangeNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLMIXEDBINDING_API void glPathGlyphsNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLsizei numGlyphs, GLenum type, const void * charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLMIXEDBINDING_API GLenum glPathMemoryGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void * fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLMIXEDBINDING_API void glPathParameterfNV(GLuint path, GLenum pname, GLfloat value);
GLMIXEDBINDING_API void glPathParameterfvNV(GLuint path, GLenum pname, const GLfloat * value);
GLMIXEDBINDING_API void glPathParameteriNV(GLuint path, GLenum pname, GLint value);
GLMIXEDBINDING_API void glPathParameterivNV(GLuint path, GLenum pname, const GLint * value);
GLMIXEDBINDING_API void glPathStencilDepthOffsetNV(GLfloat factor, GLfloat units);
GLMIXEDBINDING_API void glPathStencilFuncNV(GLenum func, GLint ref, GLuint mask);
GLMIXEDBINDING_API void glPathStringNV(GLuint path, GLenum format, GLsizei length, const void * pathString);
GLMIXEDBINDING_API void glPathSubCommandsNV(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
GLMIXEDBINDING_API void glPathSubCoordsNV(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void * coords);
GLMIXEDBINDING_API void glPathTexGenNV(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat * coeffs);
GLMIXEDBINDING_API void glPauseTransformFeedback();
GLMIXEDBINDING_API void glPauseTransformFeedbackNV();
GLMIXEDBINDING_API void glPixelDataRangeNV(GLenum target, GLsizei length, const void * pointer);
GLMIXEDBINDING_API void glPixelMapfv(GLenum map, GLsizei mapsize, const GLfloat * values);
GLMIXEDBINDING_API void glPixelMapuiv(GLenum map, GLsizei mapsize, const GLuint * values);
GLMIXEDBINDING_API void glPixelMapusv(GLenum map, GLsizei mapsize, const GLushort * values);
GLMIXEDBINDING_API void glPixelMapx(GLenum map, GLint size, const GLfixed * values);
GLMIXEDBINDING_API void glPixelStoref(GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glPixelStorei(GLenum pname, GLint param);
GLMIXEDBINDING_API void glPixelStorex(GLenum pname, GLfixed param);
GLMIXEDBINDING_API void glPixelTexGenParameterfSGIS(GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glPixelTexGenParameterfvSGIS(GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glPixelTexGenParameteriSGIS(GLenum pname, GLint param);
GLMIXEDBINDING_API void glPixelTexGenParameterivSGIS(GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glPixelTexGenSGIX(GLenum mode);
GLMIXEDBINDING_API void glPixelTransferf(GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glPixelTransferi(GLenum pname, GLint param);
GLMIXEDBINDING_API void glPixelTransferxOES(GLenum pname, GLfixed param);
GLMIXEDBINDING_API void glPixelTransformParameterfEXT(GLenum target, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glPixelTransformParameterfvEXT(GLenum target, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glPixelTransformParameteriEXT(GLenum target, GLenum pname, GLint param);
GLMIXEDBINDING_API void glPixelTransformParameterivEXT(GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glPixelZoom(GLfloat xfactor, GLfloat yfactor);
GLMIXEDBINDING_API void glPixelZoomxOES(GLfixed xfactor, GLfixed yfactor);
GLMIXEDBINDING_API void glPNTrianglesfATI(GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glPNTrianglesiATI(GLenum pname, GLint param);
GLMIXEDBINDING_API GLboolean glPointAlongPathNV(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat * x, GLfloat * y, GLfloat * tangentX, GLfloat * tangentY);
GLMIXEDBINDING_API void glPointParameterf(GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glPointParameterfARB(GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glPointParameterfEXT(GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glPointParameterfSGIS(GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glPointParameterfv(GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glPointParameterfvARB(GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glPointParameterfvEXT(GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glPointParameterfvSGIS(GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glPointParameteri(GLenum pname, GLint param);
GLMIXEDBINDING_API void glPointParameteriNV(GLenum pname, GLint param);
GLMIXEDBINDING_API void glPointParameteriv(GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glPointParameterivNV(GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glPointParameterxOES(GLenum pname, GLfixed param);
GLMIXEDBINDING_API void glPointParameterxvOES(GLenum pname, const GLfixed * params);
GLMIXEDBINDING_API void glPointSize(GLfloat size);
GLMIXEDBINDING_API void glPointSizexOES(GLfixed size);
GLMIXEDBINDING_API GLint glPollAsyncSGIX(GLuint * markerp);
GLMIXEDBINDING_API GLint glPollInstrumentsSGIX(GLint * marker_p);
GLMIXEDBINDING_API void glPolygonMode(GLenum face, GLenum mode);
GLMIXEDBINDING_API void glPolygonModeNV(GLenum face, GLenum mode);
GLMIXEDBINDING_API void glPolygonOffset(GLfloat factor, GLfloat units);
GLMIXEDBINDING_API void glPolygonOffsetClamp(GLfloat factor, GLfloat units, GLfloat clamp);
GLMIXEDBINDING_API void glPolygonOffsetClampEXT(GLfloat factor, GLfloat units, GLfloat clamp);
GLMIXEDBINDING_API void glPolygonOffsetEXT(GLfloat factor, GLfloat bias);
GLMIXEDBINDING_API void glPolygonOffsetxOES(GLfixed factor, GLfixed units);
GLMIXEDBINDING_API void glPolygonStipple(const GLubyte * mask);
GLMIXEDBINDING_API void glPopAttrib();
GLMIXEDBINDING_API void glPopClientAttrib();
GLMIXEDBINDING_API void glPopDebugGroup();
GLMIXEDBINDING_API void glPopDebugGroupKHR();
GLMIXEDBINDING_API void glPopGroupMarkerEXT();
GLMIXEDBINDING_API void glPopMatrix();
GLMIXEDBINDING_API void glPopName();
GLMIXEDBINDING_API void glPresentFrameDualFillNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
GLMIXEDBINDING_API void glPresentFrameKeyedNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
GLMIXEDBINDING_API void glPrimitiveBoundingBox(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLMIXEDBINDING_API void glPrimitiveBoundingBoxARB(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLMIXEDBINDING_API void glPrimitiveBoundingBoxEXT(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLMIXEDBINDING_API void glPrimitiveBoundingBoxOES(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLMIXEDBINDING_API void glPrimitiveRestartIndex(GLuint index);
GLMIXEDBINDING_API void glPrimitiveRestartIndexNV(GLuint index);
GLMIXEDBINDING_API void glPrimitiveRestartNV();
GLMIXEDBINDING_API void glPrioritizeTextures(GLsizei n, const GLuint * textures, const GLfloat * priorities);
GLMIXEDBINDING_API void glPrioritizeTexturesEXT(GLsizei n, const GLuint * textures, const GLclampf * priorities);
GLMIXEDBINDING_API void glPrioritizeTexturesxOES(GLsizei n, const GLuint * textures, const GLfixed * priorities);
GLMIXEDBINDING_API void glProgramBinary(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
GLMIXEDBINDING_API void glProgramBinaryOES(GLuint program, GLenum binaryFormat, const void * binary, GLint length);
GLMIXEDBINDING_API void glProgramBufferParametersfvNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat * params);
GLMIXEDBINDING_API void glProgramBufferParametersIivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint * params);
GLMIXEDBINDING_API void glProgramBufferParametersIuivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint * params);
GLMIXEDBINDING_API void glProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glProgramEnvParameter4dvARB(GLenum target, GLuint index, const GLdouble * params);
GLMIXEDBINDING_API void glProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLMIXEDBINDING_API void glProgramEnvParameter4fvARB(GLenum target, GLuint index, const GLfloat * params);
GLMIXEDBINDING_API void glProgramEnvParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLMIXEDBINDING_API void glProgramEnvParameterI4ivNV(GLenum target, GLuint index, const GLint * params);
GLMIXEDBINDING_API void glProgramEnvParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLMIXEDBINDING_API void glProgramEnvParameterI4uivNV(GLenum target, GLuint index, const GLuint * params);
GLMIXEDBINDING_API void glProgramEnvParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat * params);
GLMIXEDBINDING_API void glProgramEnvParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint * params);
GLMIXEDBINDING_API void glProgramEnvParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint * params);
GLMIXEDBINDING_API void glProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glProgramLocalParameter4dvARB(GLenum target, GLuint index, const GLdouble * params);
GLMIXEDBINDING_API void glProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLMIXEDBINDING_API void glProgramLocalParameter4fvARB(GLenum target, GLuint index, const GLfloat * params);
GLMIXEDBINDING_API void glProgramLocalParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLMIXEDBINDING_API void glProgramLocalParameterI4ivNV(GLenum target, GLuint index, const GLint * params);
GLMIXEDBINDING_API void glProgramLocalParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLMIXEDBINDING_API void glProgramLocalParameterI4uivNV(GLenum target, GLuint index, const GLuint * params);
GLMIXEDBINDING_API void glProgramLocalParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat * params);
GLMIXEDBINDING_API void glProgramLocalParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint * params);
GLMIXEDBINDING_API void glProgramLocalParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint * params);
GLMIXEDBINDING_API void glProgramNamedParameter4dNV(GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glProgramNamedParameter4dvNV(GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);
GLMIXEDBINDING_API void glProgramNamedParameter4fNV(GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLMIXEDBINDING_API void glProgramNamedParameter4fvNV(GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);
GLMIXEDBINDING_API void glProgramParameter4dNV(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glProgramParameter4dvNV(GLenum target, GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glProgramParameter4fNV(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLMIXEDBINDING_API void glProgramParameter4fvNV(GLenum target, GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glProgramParameteri(GLuint program, GLenum pname, GLint value);
GLMIXEDBINDING_API void glProgramParameteriARB(GLuint program, GLenum pname, GLint value);
GLMIXEDBINDING_API void glProgramParameteriEXT(GLuint program, GLenum pname, GLint value);
GLMIXEDBINDING_API void glProgramParameters4dvNV(GLenum target, GLuint index, GLsizei count, const GLdouble * v);
GLMIXEDBINDING_API void glProgramParameters4fvNV(GLenum target, GLuint index, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glProgramPathFragmentInputGenNV(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat * coeffs);
GLMIXEDBINDING_API void glProgramStringARB(GLenum target, GLenum format, GLsizei len, const void * string);
GLMIXEDBINDING_API void glProgramSubroutineParametersuivNV(GLenum target, GLsizei count, const GLuint * params);
GLMIXEDBINDING_API void glProgramUniform1d(GLuint program, GLint location, GLdouble v0);
GLMIXEDBINDING_API void glProgramUniform1dEXT(GLuint program, GLint location, GLdouble x);
GLMIXEDBINDING_API void glProgramUniform1dv(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniform1dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniform1f(GLuint program, GLint location, GLfloat v0);
GLMIXEDBINDING_API void glProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0);
GLMIXEDBINDING_API void glProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniform1i(GLuint program, GLint location, GLint v0);
GLMIXEDBINDING_API void glProgramUniform1i64ARB(GLuint program, GLint location, GLint64 x);
GLMIXEDBINDING_API void glProgramUniform1i64NV(GLuint program, GLint location, GLint64EXT x);
GLMIXEDBINDING_API void glProgramUniform1i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 * value);
GLMIXEDBINDING_API void glProgramUniform1i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
GLMIXEDBINDING_API void glProgramUniform1iEXT(GLuint program, GLint location, GLint v0);
GLMIXEDBINDING_API void glProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glProgramUniform1ui(GLuint program, GLint location, GLuint v0);
GLMIXEDBINDING_API void glProgramUniform1ui64ARB(GLuint program, GLint location, GLuint64 x);
GLMIXEDBINDING_API void glProgramUniform1ui64NV(GLuint program, GLint location, GLuint64EXT x);
GLMIXEDBINDING_API void glProgramUniform1ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
GLMIXEDBINDING_API void glProgramUniform1ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLMIXEDBINDING_API void glProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0);
GLMIXEDBINDING_API void glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glProgramUniform2d(GLuint program, GLint location, GLdouble v0, GLdouble v1);
GLMIXEDBINDING_API void glProgramUniform2dEXT(GLuint program, GLint location, GLdouble x, GLdouble y);
GLMIXEDBINDING_API void glProgramUniform2dv(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniform2dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLMIXEDBINDING_API void glProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLMIXEDBINDING_API void glProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1);
GLMIXEDBINDING_API void glProgramUniform2i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y);
GLMIXEDBINDING_API void glProgramUniform2i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
GLMIXEDBINDING_API void glProgramUniform2i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 * value);
GLMIXEDBINDING_API void glProgramUniform2i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
GLMIXEDBINDING_API void glProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1);
GLMIXEDBINDING_API void glProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1);
GLMIXEDBINDING_API void glProgramUniform2ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y);
GLMIXEDBINDING_API void glProgramUniform2ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
GLMIXEDBINDING_API void glProgramUniform2ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
GLMIXEDBINDING_API void glProgramUniform2ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLMIXEDBINDING_API void glProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1);
GLMIXEDBINDING_API void glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glProgramUniform3d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
GLMIXEDBINDING_API void glProgramUniform3dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glProgramUniform3dv(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniform3dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLMIXEDBINDING_API void glProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLMIXEDBINDING_API void glProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLMIXEDBINDING_API void glProgramUniform3i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
GLMIXEDBINDING_API void glProgramUniform3i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLMIXEDBINDING_API void glProgramUniform3i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 * value);
GLMIXEDBINDING_API void glProgramUniform3i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
GLMIXEDBINDING_API void glProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLMIXEDBINDING_API void glProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLMIXEDBINDING_API void glProgramUniform3ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
GLMIXEDBINDING_API void glProgramUniform3ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLMIXEDBINDING_API void glProgramUniform3ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
GLMIXEDBINDING_API void glProgramUniform3ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLMIXEDBINDING_API void glProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLMIXEDBINDING_API void glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glProgramUniform4d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
GLMIXEDBINDING_API void glProgramUniform4dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glProgramUniform4dv(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniform4dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLMIXEDBINDING_API void glProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLMIXEDBINDING_API void glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLMIXEDBINDING_API void glProgramUniform4i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
GLMIXEDBINDING_API void glProgramUniform4i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLMIXEDBINDING_API void glProgramUniform4i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 * value);
GLMIXEDBINDING_API void glProgramUniform4i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
GLMIXEDBINDING_API void glProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLMIXEDBINDING_API void glProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLMIXEDBINDING_API void glProgramUniform4ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
GLMIXEDBINDING_API void glProgramUniform4ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLMIXEDBINDING_API void glProgramUniform4ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
GLMIXEDBINDING_API void glProgramUniform4ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLMIXEDBINDING_API void glProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLMIXEDBINDING_API void glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glProgramUniformHandleui64ARB(GLuint program, GLint location, GLuint64 value);
GLMIXEDBINDING_API void glProgramUniformHandleui64IMG(GLuint program, GLint location, GLuint64 value);
GLMIXEDBINDING_API void glProgramUniformHandleui64NV(GLuint program, GLint location, GLuint64 value);
GLMIXEDBINDING_API void glProgramUniformHandleui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
GLMIXEDBINDING_API void glProgramUniformHandleui64vIMG(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
GLMIXEDBINDING_API void glProgramUniformHandleui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
GLMIXEDBINDING_API void glProgramUniformMatrix2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix2x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix2x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix2x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix2x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix3x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix3x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix3x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix3x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix4x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix4x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix4x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix4x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glProgramUniformui64NV(GLuint program, GLint location, GLuint64EXT value);
GLMIXEDBINDING_API void glProgramUniformui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLMIXEDBINDING_API void glProgramVertexLimitNV(GLenum target, GLint limit);
GLMIXEDBINDING_API void glProvokingVertex(GLenum mode);
GLMIXEDBINDING_API void glProvokingVertexEXT(GLenum mode);
GLMIXEDBINDING_API void glPushAttrib(AttribMask mask);
GLMIXEDBINDING_API void glPushClientAttrib(ClientAttribMask mask);
GLMIXEDBINDING_API void glPushClientAttribDefaultEXT(ClientAttribMask mask);
GLMIXEDBINDING_API void glPushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar * message);
GLMIXEDBINDING_API void glPushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, const GLchar * message);
GLMIXEDBINDING_API void glPushGroupMarkerEXT(GLsizei length, const GLchar * marker);
GLMIXEDBINDING_API void glPushMatrix();
GLMIXEDBINDING_API void glPushName(GLuint name);
GLMIXEDBINDING_API void glQueryCounter(GLuint id, GLenum target);
GLMIXEDBINDING_API void glQueryCounterEXT(GLuint id, GLenum target);
GLMIXEDBINDING_API GLbitfield glQueryMatrixxOES(GLfixed * mantissa, GLint * exponent);
GLMIXEDBINDING_API void glQueryObjectParameteruiAMD(GLenum target, GLuint id, GLenum pname, OcclusionQueryEventMaskAMD param);
GLMIXEDBINDING_API GLint glQueryResourceNV(GLenum queryType, GLint tagId, GLuint count, GLint * buffer);
GLMIXEDBINDING_API void glQueryResourceTagNV(GLint tagId, const GLchar * tagString);
GLMIXEDBINDING_API void glRasterPos2d(GLdouble x, GLdouble y);
GLMIXEDBINDING_API void glRasterPos2dv(const GLdouble * v);
GLMIXEDBINDING_API void glRasterPos2f(GLfloat x, GLfloat y);
GLMIXEDBINDING_API void glRasterPos2fv(const GLfloat * v);
GLMIXEDBINDING_API void glRasterPos2i(GLint x, GLint y);
GLMIXEDBINDING_API void glRasterPos2iv(const GLint * v);
GLMIXEDBINDING_API void glRasterPos2s(GLshort x, GLshort y);
GLMIXEDBINDING_API void glRasterPos2sv(const GLshort * v);
GLMIXEDBINDING_API void glRasterPos2xOES(GLfixed x, GLfixed y);
GLMIXEDBINDING_API void glRasterPos2xvOES(const GLfixed * coords);
GLMIXEDBINDING_API void glRasterPos3d(GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glRasterPos3dv(const GLdouble * v);
GLMIXEDBINDING_API void glRasterPos3f(GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glRasterPos3fv(const GLfloat * v);
GLMIXEDBINDING_API void glRasterPos3i(GLint x, GLint y, GLint z);
GLMIXEDBINDING_API void glRasterPos3iv(const GLint * v);
GLMIXEDBINDING_API void glRasterPos3s(GLshort x, GLshort y, GLshort z);
GLMIXEDBINDING_API void glRasterPos3sv(const GLshort * v);
GLMIXEDBINDING_API void glRasterPos3xOES(GLfixed x, GLfixed y, GLfixed z);
GLMIXEDBINDING_API void glRasterPos3xvOES(const GLfixed * coords);
GLMIXEDBINDING_API void glRasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glRasterPos4dv(const GLdouble * v);
GLMIXEDBINDING_API void glRasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLMIXEDBINDING_API void glRasterPos4fv(const GLfloat * v);
GLMIXEDBINDING_API void glRasterPos4i(GLint x, GLint y, GLint z, GLint w);
GLMIXEDBINDING_API void glRasterPos4iv(const GLint * v);
GLMIXEDBINDING_API void glRasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w);
GLMIXEDBINDING_API void glRasterPos4sv(const GLshort * v);
GLMIXEDBINDING_API void glRasterPos4xOES(GLfixed x, GLfixed y, GLfixed z, GLfixed w);
GLMIXEDBINDING_API void glRasterPos4xvOES(const GLfixed * coords);
GLMIXEDBINDING_API void glRasterSamplesEXT(GLuint samples, GLboolean fixedsamplelocations);
GLMIXEDBINDING_API void glReadBuffer(GLenum src);
GLMIXEDBINDING_API void glReadBufferIndexedEXT(GLenum src, GLint index);
GLMIXEDBINDING_API void glReadBufferNV(GLenum mode);
GLMIXEDBINDING_API void glReadInstrumentsSGIX(GLint marker);
GLMIXEDBINDING_API void glReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLMIXEDBINDING_API void glReadnPixelsARB(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLMIXEDBINDING_API void glReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLMIXEDBINDING_API void glReadnPixelsKHR(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLMIXEDBINDING_API void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
GLMIXEDBINDING_API void glRectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
GLMIXEDBINDING_API void glRectdv(const GLdouble * v1, const GLdouble * v2);
GLMIXEDBINDING_API void glRectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
GLMIXEDBINDING_API void glRectfv(const GLfloat * v1, const GLfloat * v2);
GLMIXEDBINDING_API void glRecti(GLint x1, GLint y1, GLint x2, GLint y2);
GLMIXEDBINDING_API void glRectiv(const GLint * v1, const GLint * v2);
GLMIXEDBINDING_API void glRects(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
GLMIXEDBINDING_API void glRectsv(const GLshort * v1, const GLshort * v2);
GLMIXEDBINDING_API void glRectxOES(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
GLMIXEDBINDING_API void glRectxvOES(const GLfixed * v1, const GLfixed * v2);
GLMIXEDBINDING_API void glReferencePlaneSGIX(const GLdouble * equation);
GLMIXEDBINDING_API GLboolean glReleaseKeyedMutexWin32EXT(GLuint memory, GLuint64 key);
GLMIXEDBINDING_API void glReleaseShaderCompiler();
GLMIXEDBINDING_API void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glRenderbufferStorageMultisampleAdvancedAMD(GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glRenderbufferStorageMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glRenderbufferStorageMultisampleAPPLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glRenderbufferStorageMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glRenderbufferStorageMultisampleIMG(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glRenderbufferStorageMultisampleNV(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glRenderGpuMaskNV(GLbitfield mask);
GLMIXEDBINDING_API GLint glRenderMode(GLenum mode);
GLMIXEDBINDING_API void glReplacementCodePointerSUN(GLenum type, GLsizei stride, const void ** pointer);
GLMIXEDBINDING_API void glReplacementCodeubSUN(GLubyte code);
GLMIXEDBINDING_API void glReplacementCodeubvSUN(const GLubyte * code);
GLMIXEDBINDING_API void glReplacementCodeuiColor3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glReplacementCodeuiColor3fVertex3fvSUN(const GLuint * rc, const GLfloat * c, const GLfloat * v);
GLMIXEDBINDING_API void glReplacementCodeuiColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glReplacementCodeuiColor4fNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
GLMIXEDBINDING_API void glReplacementCodeuiColor4ubVertex3fSUN(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glReplacementCodeuiColor4ubVertex3fvSUN(const GLuint * rc, const GLubyte * c, const GLfloat * v);
GLMIXEDBINDING_API void glReplacementCodeuiNormal3fVertex3fSUN(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glReplacementCodeuiNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * n, const GLfloat * v);
GLMIXEDBINDING_API void glReplacementCodeuiSUN(GLuint code);
GLMIXEDBINDING_API void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
GLMIXEDBINDING_API void glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * tc, const GLfloat * n, const GLfloat * v);
GLMIXEDBINDING_API void glReplacementCodeuiTexCoord2fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glReplacementCodeuiTexCoord2fVertex3fvSUN(const GLuint * rc, const GLfloat * tc, const GLfloat * v);
GLMIXEDBINDING_API void glReplacementCodeuiVertex3fSUN(GLuint rc, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glReplacementCodeuiVertex3fvSUN(const GLuint * rc, const GLfloat * v);
GLMIXEDBINDING_API void glReplacementCodeuivSUN(const GLuint * code);
GLMIXEDBINDING_API void glReplacementCodeusSUN(GLushort code);
GLMIXEDBINDING_API void glReplacementCodeusvSUN(const GLushort * code);
GLMIXEDBINDING_API void glRequestResidentProgramsNV(GLsizei n, const GLuint * programs);
GLMIXEDBINDING_API void glResetHistogram(GLenum target);
GLMIXEDBINDING_API void glResetHistogramEXT(GLenum target);
GLMIXEDBINDING_API void glResetMemoryObjectParameterNV(GLuint memory, GLenum pname);
GLMIXEDBINDING_API void glResetMinmax(GLenum target);
GLMIXEDBINDING_API void glResetMinmaxEXT(GLenum target);
GLMIXEDBINDING_API void glResizeBuffersMESA();
GLMIXEDBINDING_API void glResolveDepthValuesNV();
GLMIXEDBINDING_API void glResolveMultisampleFramebufferAPPLE();
GLMIXEDBINDING_API void glResumeTransformFeedback();
GLMIXEDBINDING_API void glResumeTransformFeedbackNV();
GLMIXEDBINDING_API void glRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glRotatexOES(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
GLMIXEDBINDING_API void glSampleCoverage(GLfloat value, GLboolean invert);
GLMIXEDBINDING_API void glSampleCoverageARB(GLfloat value, GLboolean invert);
GLMIXEDBINDING_API void glSampleCoveragexOES(GLclampx value, GLboolean invert);
GLMIXEDBINDING_API void glSampleMapATI(GLuint dst, GLuint interp, GLenum swizzle);
GLMIXEDBINDING_API void glSampleMaskEXT(GLclampf value, GLboolean invert);
GLMIXEDBINDING_API void glSampleMaski(GLuint maskNumber, GLbitfield mask);
GLMIXEDBINDING_API void glSampleMaskIndexedNV(GLuint index, GLbitfield mask);
GLMIXEDBINDING_API void glSampleMaskSGIS(GLclampf value, GLboolean invert);
GLMIXEDBINDING_API void glSamplePatternEXT(GLenum pattern);
GLMIXEDBINDING_API void glSamplePatternSGIS(GLenum pattern);
GLMIXEDBINDING_API void glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat * param);
GLMIXEDBINDING_API void glSamplerParameteri(GLuint sampler, GLenum pname, GLint param);
GLMIXEDBINDING_API void glSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint * param);
GLMIXEDBINDING_API void glSamplerParameterIivEXT(GLuint sampler, GLenum pname, const GLint * param);
GLMIXEDBINDING_API void glSamplerParameterIivOES(GLuint sampler, GLenum pname, const GLint * param);
GLMIXEDBINDING_API void glSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint * param);
GLMIXEDBINDING_API void glSamplerParameterIuivEXT(GLuint sampler, GLenum pname, const GLuint * param);
GLMIXEDBINDING_API void glSamplerParameterIuivOES(GLuint sampler, GLenum pname, const GLuint * param);
GLMIXEDBINDING_API void glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint * param);
GLMIXEDBINDING_API void glScaled(GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glScalef(GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glScalexOES(GLfixed x, GLfixed y, GLfixed z);
GLMIXEDBINDING_API void glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glScissorArrayv(GLuint first, GLsizei count, const GLint * v);
GLMIXEDBINDING_API void glScissorArrayvNV(GLuint first, GLsizei count, const GLint * v);
GLMIXEDBINDING_API void glScissorArrayvOES(GLuint first, GLsizei count, const GLint * v);
GLMIXEDBINDING_API void glScissorExclusiveArrayvNV(GLuint first, GLsizei count, const GLint * v);
GLMIXEDBINDING_API void glScissorExclusiveNV(GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glScissorIndexed(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glScissorIndexedNV(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glScissorIndexedOES(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glScissorIndexedv(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glScissorIndexedvNV(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glScissorIndexedvOES(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glSecondaryColor3b(GLbyte red, GLbyte green, GLbyte blue);
GLMIXEDBINDING_API void glSecondaryColor3bEXT(GLbyte red, GLbyte green, GLbyte blue);
GLMIXEDBINDING_API void glSecondaryColor3bv(const GLbyte * v);
GLMIXEDBINDING_API void glSecondaryColor3bvEXT(const GLbyte * v);
GLMIXEDBINDING_API void glSecondaryColor3d(GLdouble red, GLdouble green, GLdouble blue);
GLMIXEDBINDING_API void glSecondaryColor3dEXT(GLdouble red, GLdouble green, GLdouble blue);
GLMIXEDBINDING_API void glSecondaryColor3dv(const GLdouble * v);
GLMIXEDBINDING_API void glSecondaryColor3dvEXT(const GLdouble * v);
GLMIXEDBINDING_API void glSecondaryColor3f(GLfloat red, GLfloat green, GLfloat blue);
GLMIXEDBINDING_API void glSecondaryColor3fEXT(GLfloat red, GLfloat green, GLfloat blue);
GLMIXEDBINDING_API void glSecondaryColor3fv(const GLfloat * v);
GLMIXEDBINDING_API void glSecondaryColor3fvEXT(const GLfloat * v);
GLMIXEDBINDING_API void glSecondaryColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
GLMIXEDBINDING_API void glSecondaryColor3hvNV(const GLhalfNV * v);
GLMIXEDBINDING_API void glSecondaryColor3i(GLint red, GLint green, GLint blue);
GLMIXEDBINDING_API void glSecondaryColor3iEXT(GLint red, GLint green, GLint blue);
GLMIXEDBINDING_API void glSecondaryColor3iv(const GLint * v);
GLMIXEDBINDING_API void glSecondaryColor3ivEXT(const GLint * v);
GLMIXEDBINDING_API void glSecondaryColor3s(GLshort red, GLshort green, GLshort blue);
GLMIXEDBINDING_API void glSecondaryColor3sEXT(GLshort red, GLshort green, GLshort blue);
GLMIXEDBINDING_API void glSecondaryColor3sv(const GLshort * v);
GLMIXEDBINDING_API void glSecondaryColor3svEXT(const GLshort * v);
GLMIXEDBINDING_API void glSecondaryColor3ub(GLubyte red, GLubyte green, GLubyte blue);
GLMIXEDBINDING_API void glSecondaryColor3ubEXT(GLubyte red, GLubyte green, GLubyte blue);
GLMIXEDBINDING_API void glSecondaryColor3ubv(const GLubyte * v);
GLMIXEDBINDING_API void glSecondaryColor3ubvEXT(const GLubyte * v);
GLMIXEDBINDING_API void glSecondaryColor3ui(GLuint red, GLuint green, GLuint blue);
GLMIXEDBINDING_API void glSecondaryColor3uiEXT(GLuint red, GLuint green, GLuint blue);
GLMIXEDBINDING_API void glSecondaryColor3uiv(const GLuint * v);
GLMIXEDBINDING_API void glSecondaryColor3uivEXT(const GLuint * v);
GLMIXEDBINDING_API void glSecondaryColor3us(GLushort red, GLushort green, GLushort blue);
GLMIXEDBINDING_API void glSecondaryColor3usEXT(GLushort red, GLushort green, GLushort blue);
GLMIXEDBINDING_API void glSecondaryColor3usv(const GLushort * v);
GLMIXEDBINDING_API void glSecondaryColor3usvEXT(const GLushort * v);
GLMIXEDBINDING_API void glSecondaryColorFormatNV(GLint size, GLenum type, GLsizei stride);
GLMIXEDBINDING_API void glSecondaryColorP3ui(GLenum type, GLuint color);
GLMIXEDBINDING_API void glSecondaryColorP3uiv(GLenum type, const GLuint * color);
GLMIXEDBINDING_API void glSecondaryColorPointer(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glSecondaryColorPointerEXT(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glSecondaryColorPointerListIBM(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLMIXEDBINDING_API void glSelectBuffer(GLsizei size, GLuint * buffer);
GLMIXEDBINDING_API void glSelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint * counterList);
GLMIXEDBINDING_API void glSemaphoreParameterivNV(GLuint semaphore, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glSemaphoreParameterui64vEXT(GLuint semaphore, GLenum pname, const GLuint64 * params);
GLMIXEDBINDING_API void glSeparableFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
GLMIXEDBINDING_API void glSeparableFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
GLMIXEDBINDING_API void glSetFenceAPPLE(GLuint fence);
GLMIXEDBINDING_API void glSetFenceNV(GLuint fence, GLenum condition);
GLMIXEDBINDING_API void glSetFragmentShaderConstantATI(GLuint dst, const GLfloat * value);
GLMIXEDBINDING_API void glSetInvariantEXT(GLuint id, GLenum type, const void * addr);
GLMIXEDBINDING_API void glSetLocalConstantEXT(GLuint id, GLenum type, const void * addr);
GLMIXEDBINDING_API void glSetMultisamplefvAMD(GLenum pname, GLuint index, const GLfloat * val);
GLMIXEDBINDING_API void glShadeModel(GLenum mode);
GLMIXEDBINDING_API void glShaderBinary(GLsizei count, const GLuint * shaders, GLenum binaryFormat, const void * binary, GLsizei length);
GLMIXEDBINDING_API void glShaderOp1EXT(GLenum op, GLuint res, GLuint arg1);
GLMIXEDBINDING_API void glShaderOp2EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2);
GLMIXEDBINDING_API void glShaderOp3EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
GLMIXEDBINDING_API void glShaderSource(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
GLMIXEDBINDING_API void glShaderSourceARB(GLhandleARB shaderObj, GLsizei count, const GLcharARB ** string, const GLint * length);
GLMIXEDBINDING_API void glShaderStorageBlockBinding(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
GLMIXEDBINDING_API void glShadingRateCombinerOpsEXT(GLenum combinerOp0, GLenum combinerOp1);
GLMIXEDBINDING_API void glShadingRateEXT(GLenum rate);
GLMIXEDBINDING_API void glShadingRateImageBarrierNV(GLboolean synchronize);
GLMIXEDBINDING_API void glShadingRateImagePaletteNV(GLuint viewport, GLuint first, GLsizei count, const GLenum * rates);
GLMIXEDBINDING_API void glShadingRateQCOM(GLenum rate);
GLMIXEDBINDING_API void glShadingRateSampleOrderCustomNV(GLenum rate, GLuint samples, const GLint * locations);
GLMIXEDBINDING_API void glShadingRateSampleOrderNV(GLenum order);
GLMIXEDBINDING_API void glSharpenTexFuncSGIS(GLenum target, GLsizei n, const GLfloat * points);
GLMIXEDBINDING_API void glSignalSemaphoreEXT(GLuint semaphore, GLuint numBufferBarriers, const GLuint * buffers, GLuint numTextureBarriers, const GLuint * textures, const GLenum * dstLayouts);
GLMIXEDBINDING_API void glSignalSemaphoreui64NVX(GLuint signalGpu, GLsizei fenceObjectCount, const GLuint * semaphoreArray, const GLuint64 * fenceValueArray);
GLMIXEDBINDING_API void glSignalVkFenceNV(GLuint64 vkFence);
GLMIXEDBINDING_API void glSignalVkSemaphoreNV(GLuint64 vkSemaphore);
GLMIXEDBINDING_API void glSpecializeShader(GLuint shader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue);
GLMIXEDBINDING_API void glSpecializeShaderARB(GLuint shader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue);
GLMIXEDBINDING_API void glSpriteParameterfSGIX(GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glSpriteParameterfvSGIX(GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glSpriteParameteriSGIX(GLenum pname, GLint param);
GLMIXEDBINDING_API void glSpriteParameterivSGIX(GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glStartInstrumentsSGIX();
GLMIXEDBINDING_API void glStartTilingQCOM(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);
GLMIXEDBINDING_API void glStateCaptureNV(GLuint state, GLenum mode);
GLMIXEDBINDING_API void glStencilClearTagEXT(GLsizei stencilTagBits, GLuint stencilClearTag);
GLMIXEDBINDING_API void glStencilFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat * transformValues);
GLMIXEDBINDING_API void glStencilFillPathNV(GLuint path, GLenum fillMode, GLuint mask);
GLMIXEDBINDING_API void glStencilFunc(GLenum func, GLint ref, GLuint mask);
GLMIXEDBINDING_API void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
GLMIXEDBINDING_API void glStencilFuncSeparateATI(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
GLMIXEDBINDING_API void glStencilMask(GLuint mask);
GLMIXEDBINDING_API void glStencilMaskSeparate(GLenum face, GLuint mask);
GLMIXEDBINDING_API void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
GLMIXEDBINDING_API void glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
GLMIXEDBINDING_API void glStencilOpSeparateATI(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
GLMIXEDBINDING_API void glStencilOpValueAMD(GLenum face, GLuint value);
GLMIXEDBINDING_API void glStencilStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat * transformValues);
GLMIXEDBINDING_API void glStencilStrokePathNV(GLuint path, GLint reference, GLuint mask);
GLMIXEDBINDING_API void glStencilThenCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLMIXEDBINDING_API void glStencilThenCoverFillPathNV(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
GLMIXEDBINDING_API void glStencilThenCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLMIXEDBINDING_API void glStencilThenCoverStrokePathNV(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
GLMIXEDBINDING_API void glStopInstrumentsSGIX(GLint marker);
GLMIXEDBINDING_API void glStringMarkerGREMEDY(GLsizei len, const void * string);
GLMIXEDBINDING_API void glSubpixelPrecisionBiasNV(GLuint xbits, GLuint ybits);
GLMIXEDBINDING_API void glSwizzleEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
GLMIXEDBINDING_API void glSyncTextureINTEL(GLuint texture);
GLMIXEDBINDING_API void glTagSampleBufferSGIX();
GLMIXEDBINDING_API void glTangent3bEXT(GLbyte tx, GLbyte ty, GLbyte tz);
GLMIXEDBINDING_API void glTangent3bvEXT(const GLbyte * v);
GLMIXEDBINDING_API void glTangent3dEXT(GLdouble tx, GLdouble ty, GLdouble tz);
GLMIXEDBINDING_API void glTangent3dvEXT(const GLdouble * v);
GLMIXEDBINDING_API void glTangent3fEXT(GLfloat tx, GLfloat ty, GLfloat tz);
GLMIXEDBINDING_API void glTangent3fvEXT(const GLfloat * v);
GLMIXEDBINDING_API void glTangent3iEXT(GLint tx, GLint ty, GLint tz);
GLMIXEDBINDING_API void glTangent3ivEXT(const GLint * v);
GLMIXEDBINDING_API void glTangent3sEXT(GLshort tx, GLshort ty, GLshort tz);
GLMIXEDBINDING_API void glTangent3svEXT(const GLshort * v);
GLMIXEDBINDING_API void glTangentPointerEXT(GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glTbufferMask3DFX(GLuint mask);
GLMIXEDBINDING_API void glTessellationFactorAMD(GLfloat factor);
GLMIXEDBINDING_API void glTessellationModeAMD(GLenum mode);
GLMIXEDBINDING_API GLboolean glTestFenceAPPLE(GLuint fence);
GLMIXEDBINDING_API GLboolean glTestFenceNV(GLuint fence);
GLMIXEDBINDING_API GLboolean glTestObjectAPPLE(GLenum object, GLuint name);
GLMIXEDBINDING_API void glTexAttachMemoryNV(GLenum target, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer);
GLMIXEDBINDING_API void glTexBufferARB(GLenum target, GLenum internalformat, GLuint buffer);
GLMIXEDBINDING_API void glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer);
GLMIXEDBINDING_API void glTexBufferOES(GLenum target, GLenum internalformat, GLuint buffer);
GLMIXEDBINDING_API void glTexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLMIXEDBINDING_API void glTexBufferRangeEXT(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLMIXEDBINDING_API void glTexBufferRangeOES(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLMIXEDBINDING_API void glTexBumpParameterfvATI(GLenum pname, const GLfloat * param);
GLMIXEDBINDING_API void glTexBumpParameterivATI(GLenum pname, const GLint * param);
GLMIXEDBINDING_API void glTexCoord1bOES(GLbyte s);
GLMIXEDBINDING_API void glTexCoord1bvOES(const GLbyte * coords);
GLMIXEDBINDING_API void glTexCoord1d(GLdouble s);
GLMIXEDBINDING_API void glTexCoord1dv(const GLdouble * v);
GLMIXEDBINDING_API void glTexCoord1f(GLfloat s);
GLMIXEDBINDING_API void glTexCoord1fv(const GLfloat * v);
GLMIXEDBINDING_API void glTexCoord1hNV(GLhalfNV s);
GLMIXEDBINDING_API void glTexCoord1hvNV(const GLhalfNV * v);
GLMIXEDBINDING_API void glTexCoord1i(GLint s);
GLMIXEDBINDING_API void glTexCoord1iv(const GLint * v);
GLMIXEDBINDING_API void glTexCoord1s(GLshort s);
GLMIXEDBINDING_API void glTexCoord1sv(const GLshort * v);
GLMIXEDBINDING_API void glTexCoord1xOES(GLfixed s);
GLMIXEDBINDING_API void glTexCoord1xvOES(const GLfixed * coords);
GLMIXEDBINDING_API void glTexCoord2bOES(GLbyte s, GLbyte t);
GLMIXEDBINDING_API void glTexCoord2bvOES(const GLbyte * coords);
GLMIXEDBINDING_API void glTexCoord2d(GLdouble s, GLdouble t);
GLMIXEDBINDING_API void glTexCoord2dv(const GLdouble * v);
GLMIXEDBINDING_API void glTexCoord2f(GLfloat s, GLfloat t);
GLMIXEDBINDING_API void glTexCoord2fColor3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glTexCoord2fColor3fVertex3fvSUN(const GLfloat * tc, const GLfloat * c, const GLfloat * v);
GLMIXEDBINDING_API void glTexCoord2fColor4fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glTexCoord2fColor4fNormal3fVertex3fvSUN(const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
GLMIXEDBINDING_API void glTexCoord2fColor4ubVertex3fSUN(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glTexCoord2fColor4ubVertex3fvSUN(const GLfloat * tc, const GLubyte * c, const GLfloat * v);
GLMIXEDBINDING_API void glTexCoord2fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glTexCoord2fNormal3fVertex3fvSUN(const GLfloat * tc, const GLfloat * n, const GLfloat * v);
GLMIXEDBINDING_API void glTexCoord2fv(const GLfloat * v);
GLMIXEDBINDING_API void glTexCoord2fVertex3fSUN(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glTexCoord2fVertex3fvSUN(const GLfloat * tc, const GLfloat * v);
GLMIXEDBINDING_API void glTexCoord2hNV(GLhalfNV s, GLhalfNV t);
GLMIXEDBINDING_API void glTexCoord2hvNV(const GLhalfNV * v);
GLMIXEDBINDING_API void glTexCoord2i(GLint s, GLint t);
GLMIXEDBINDING_API void glTexCoord2iv(const GLint * v);
GLMIXEDBINDING_API void glTexCoord2s(GLshort s, GLshort t);
GLMIXEDBINDING_API void glTexCoord2sv(const GLshort * v);
GLMIXEDBINDING_API void glTexCoord2xOES(GLfixed s, GLfixed t);
GLMIXEDBINDING_API void glTexCoord2xvOES(const GLfixed * coords);
GLMIXEDBINDING_API void glTexCoord3bOES(GLbyte s, GLbyte t, GLbyte r);
GLMIXEDBINDING_API void glTexCoord3bvOES(const GLbyte * coords);
GLMIXEDBINDING_API void glTexCoord3d(GLdouble s, GLdouble t, GLdouble r);
GLMIXEDBINDING_API void glTexCoord3dv(const GLdouble * v);
GLMIXEDBINDING_API void glTexCoord3f(GLfloat s, GLfloat t, GLfloat r);
GLMIXEDBINDING_API void glTexCoord3fv(const GLfloat * v);
GLMIXEDBINDING_API void glTexCoord3hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r);
GLMIXEDBINDING_API void glTexCoord3hvNV(const GLhalfNV * v);
GLMIXEDBINDING_API void glTexCoord3i(GLint s, GLint t, GLint r);
GLMIXEDBINDING_API void glTexCoord3iv(const GLint * v);
GLMIXEDBINDING_API void glTexCoord3s(GLshort s, GLshort t, GLshort r);
GLMIXEDBINDING_API void glTexCoord3sv(const GLshort * v);
GLMIXEDBINDING_API void glTexCoord3xOES(GLfixed s, GLfixed t, GLfixed r);
GLMIXEDBINDING_API void glTexCoord3xvOES(const GLfixed * coords);
GLMIXEDBINDING_API void glTexCoord4bOES(GLbyte s, GLbyte t, GLbyte r, GLbyte q);
GLMIXEDBINDING_API void glTexCoord4bvOES(const GLbyte * coords);
GLMIXEDBINDING_API void glTexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLMIXEDBINDING_API void glTexCoord4dv(const GLdouble * v);
GLMIXEDBINDING_API void glTexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLMIXEDBINDING_API void glTexCoord4fColor4fNormal3fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLMIXEDBINDING_API void glTexCoord4fColor4fNormal3fVertex4fvSUN(const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
GLMIXEDBINDING_API void glTexCoord4fv(const GLfloat * v);
GLMIXEDBINDING_API void glTexCoord4fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLMIXEDBINDING_API void glTexCoord4fVertex4fvSUN(const GLfloat * tc, const GLfloat * v);
GLMIXEDBINDING_API void glTexCoord4hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
GLMIXEDBINDING_API void glTexCoord4hvNV(const GLhalfNV * v);
GLMIXEDBINDING_API void glTexCoord4i(GLint s, GLint t, GLint r, GLint q);
GLMIXEDBINDING_API void glTexCoord4iv(const GLint * v);
GLMIXEDBINDING_API void glTexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q);
GLMIXEDBINDING_API void glTexCoord4sv(const GLshort * v);
GLMIXEDBINDING_API void glTexCoord4xOES(GLfixed s, GLfixed t, GLfixed r, GLfixed q);
GLMIXEDBINDING_API void glTexCoord4xvOES(const GLfixed * coords);
GLMIXEDBINDING_API void glTexCoordFormatNV(GLint size, GLenum type, GLsizei stride);
GLMIXEDBINDING_API void glTexCoordP1ui(GLenum type, GLuint coords);
GLMIXEDBINDING_API void glTexCoordP1uiv(GLenum type, const GLuint * coords);
GLMIXEDBINDING_API void glTexCoordP2ui(GLenum type, GLuint coords);
GLMIXEDBINDING_API void glTexCoordP2uiv(GLenum type, const GLuint * coords);
GLMIXEDBINDING_API void glTexCoordP3ui(GLenum type, GLuint coords);
GLMIXEDBINDING_API void glTexCoordP3uiv(GLenum type, const GLuint * coords);
GLMIXEDBINDING_API void glTexCoordP4ui(GLenum type, GLuint coords);
GLMIXEDBINDING_API void glTexCoordP4uiv(GLenum type, const GLuint * coords);
GLMIXEDBINDING_API void glTexCoordPointer(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glTexCoordPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLMIXEDBINDING_API void glTexCoordPointerListIBM(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLMIXEDBINDING_API void glTexCoordPointervINTEL(GLint size, GLenum type, const void ** pointer);
GLMIXEDBINDING_API void glTexEnvf(GLenum target, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glTexEnvfv(GLenum target, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glTexEnvi(GLenum target, GLenum pname, GLint param);
GLMIXEDBINDING_API void glTexEnviv(GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glTexEnvxOES(GLenum target, GLenum pname, GLfixed param);
GLMIXEDBINDING_API void glTexEnvxvOES(GLenum target, GLenum pname, const GLfixed * params);
GLMIXEDBINDING_API void glTexEstimateMotionQCOM(GLuint ref, GLuint target, GLuint output);
GLMIXEDBINDING_API void glTexEstimateMotionRegionsQCOM(GLuint ref, GLuint target, GLuint output, GLuint mask);
GLMIXEDBINDING_API void glTexFilterFuncSGIS(GLenum target, GLenum filter, GLsizei n, const GLfloat * weights);
GLMIXEDBINDING_API void glTexGend(GLenum coord, GLenum pname, GLdouble param);
GLMIXEDBINDING_API void glTexGendv(GLenum coord, GLenum pname, const GLdouble * params);
GLMIXEDBINDING_API void glTexGenf(GLenum coord, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glTexGenfv(GLenum coord, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glTexGeni(GLenum coord, GLenum pname, GLint param);
GLMIXEDBINDING_API void glTexGeniv(GLenum coord, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glTexGenxOES(GLenum coord, GLenum pname, GLfixed param);
GLMIXEDBINDING_API void glTexGenxvOES(GLenum coord, GLenum pname, const GLfixed * params);
GLMIXEDBINDING_API void glTexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTexImage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLMIXEDBINDING_API void glTexImage2DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLMIXEDBINDING_API void glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTexImage3DEXT(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTexImage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLMIXEDBINDING_API void glTexImage3DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
GLMIXEDBINDING_API void glTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTexImage4DSGIS(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTexPageCommitmentARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
GLMIXEDBINDING_API void glTexPageCommitmentEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
GLMIXEDBINDING_API void glTexPageCommitmentMemNV(GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
GLMIXEDBINDING_API void glTexParameterf(GLenum target, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glTexParameterfv(GLenum target, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glTexParameteri(GLenum target, GLenum pname, GLint param);
GLMIXEDBINDING_API void glTexParameterIiv(GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glTexParameterIivEXT(GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glTexParameterIivOES(GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glTexParameterIuiv(GLenum target, GLenum pname, const GLuint * params);
GLMIXEDBINDING_API void glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint * params);
GLMIXEDBINDING_API void glTexParameterIuivOES(GLenum target, GLenum pname, const GLuint * params);
GLMIXEDBINDING_API void glTexParameteriv(GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glTexParameterxOES(GLenum target, GLenum pname, GLfixed param);
GLMIXEDBINDING_API void glTexParameterxvOES(GLenum target, GLenum pname, const GLfixed * params);
GLMIXEDBINDING_API void glTexRenderbufferNV(GLenum target, GLuint renderbuffer);
GLMIXEDBINDING_API void glTexStorage1D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLMIXEDBINDING_API void glTexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLMIXEDBINDING_API void glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glTexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLMIXEDBINDING_API void glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLMIXEDBINDING_API void glTexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLMIXEDBINDING_API void glTexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLMIXEDBINDING_API void glTexStorage3DMultisampleOES(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLMIXEDBINDING_API void glTexStorageAttribs2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, const GLint* attrib_list);
GLMIXEDBINDING_API void glTexStorageAttribs3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, const GLint* attrib_list);
GLMIXEDBINDING_API void glTexStorageMem1DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glTexStorageMem2DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glTexStorageMem2DMultisampleEXT(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glTexStorageMem3DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glTexStorageMem3DMultisampleEXT(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glTexStorageSparseAMD(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, TextureStorageMaskAMD flags);
GLMIXEDBINDING_API void glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTexSubImage4DSGIS(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTextureAttachMemoryNV(GLuint texture, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glTextureBarrier();
GLMIXEDBINDING_API void glTextureBarrierNV();
GLMIXEDBINDING_API void glTextureBuffer(GLuint texture, GLenum internalformat, GLuint buffer);
GLMIXEDBINDING_API void glTextureBufferEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
GLMIXEDBINDING_API void glTextureBufferRange(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLMIXEDBINDING_API void glTextureBufferRangeEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLMIXEDBINDING_API void glTextureColorMaskSGIS(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLMIXEDBINDING_API void glTextureFoveationParametersQCOM(GLuint texture, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea);
GLMIXEDBINDING_API void glTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTextureImage2DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLMIXEDBINDING_API void glTextureImage2DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLMIXEDBINDING_API void glTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTextureImage3DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
GLMIXEDBINDING_API void glTextureImage3DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
GLMIXEDBINDING_API void glTextureLightEXT(GLenum pname);
GLMIXEDBINDING_API void glTextureMaterialEXT(GLenum face, GLenum mode);
GLMIXEDBINDING_API void glTextureNormalEXT(GLenum mode);
GLMIXEDBINDING_API void glTexturePageCommitmentEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
GLMIXEDBINDING_API void glTexturePageCommitmentMemNV(GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
GLMIXEDBINDING_API void glTextureParameterf(GLuint texture, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glTextureParameterfEXT(GLuint texture, GLenum target, GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glTextureParameterfv(GLuint texture, GLenum pname, const GLfloat * param);
GLMIXEDBINDING_API void glTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glTextureParameteri(GLuint texture, GLenum pname, GLint param);
GLMIXEDBINDING_API void glTextureParameteriEXT(GLuint texture, GLenum target, GLenum pname, GLint param);
GLMIXEDBINDING_API void glTextureParameterIiv(GLuint texture, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glTextureParameterIuiv(GLuint texture, GLenum pname, const GLuint * params);
GLMIXEDBINDING_API void glTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, const GLuint * params);
GLMIXEDBINDING_API void glTextureParameteriv(GLuint texture, GLenum pname, const GLint * param);
GLMIXEDBINDING_API void glTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glTextureRangeAPPLE(GLenum target, GLsizei length, const void * pointer);
GLMIXEDBINDING_API void glTextureRenderbufferEXT(GLuint texture, GLenum target, GLuint renderbuffer);
GLMIXEDBINDING_API void glTextureStorage1D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
GLMIXEDBINDING_API void glTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLMIXEDBINDING_API void glTextureStorage2D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glTextureStorage2DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLMIXEDBINDING_API void glTextureStorage2DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLMIXEDBINDING_API void glTextureStorage3D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLMIXEDBINDING_API void glTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLMIXEDBINDING_API void glTextureStorage3DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLMIXEDBINDING_API void glTextureStorage3DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLMIXEDBINDING_API void glTextureStorageMem1DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glTextureStorageMem2DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glTextureStorageMem2DMultisampleEXT(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glTextureStorageMem3DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glTextureStorageMem3DMultisampleEXT(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
GLMIXEDBINDING_API void glTextureStorageSparseAMD(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, TextureStorageMaskAMD flags);
GLMIXEDBINDING_API void glTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLMIXEDBINDING_API void glTextureView(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLMIXEDBINDING_API void glTextureViewEXT(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLMIXEDBINDING_API void glTextureViewOES(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLMIXEDBINDING_API void glTrackMatrixNV(GLenum target, GLuint address, GLenum matrix, GLenum transform);
GLMIXEDBINDING_API void glTransformFeedbackAttribsNV(GLsizei count, const GLint * attribs, GLenum bufferMode);
GLMIXEDBINDING_API void glTransformFeedbackBufferBase(GLuint xfb, GLuint index, GLuint buffer);
GLMIXEDBINDING_API void glTransformFeedbackBufferRange(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLMIXEDBINDING_API void glTransformFeedbackStreamAttribsNV(GLsizei count, const GLint * attribs, GLsizei nbuffers, const GLint * bufstreams, GLenum bufferMode);
GLMIXEDBINDING_API void glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
GLMIXEDBINDING_API void glTransformFeedbackVaryingsEXT(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
GLMIXEDBINDING_API void glTransformFeedbackVaryingsNV(GLuint program, GLsizei count, const GLint * locations, GLenum bufferMode);
GLMIXEDBINDING_API void glTransformPathNV(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat * transformValues);
GLMIXEDBINDING_API void glTranslated(GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glTranslatef(GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glTranslatexOES(GLfixed x, GLfixed y, GLfixed z);
GLMIXEDBINDING_API void glUniform1d(GLint location, GLdouble x);
GLMIXEDBINDING_API void glUniform1dv(GLint location, GLsizei count, const GLdouble * value);
GLMIXEDBINDING_API void glUniform1f(GLint location, GLfloat v0);
GLMIXEDBINDING_API void glUniform1fARB(GLint location, GLfloat v0);
GLMIXEDBINDING_API void glUniform1fv(GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glUniform1fvARB(GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glUniform1i(GLint location, GLint v0);
GLMIXEDBINDING_API void glUniform1i64ARB(GLint location, GLint64 x);
GLMIXEDBINDING_API void glUniform1i64NV(GLint location, GLint64EXT x);
GLMIXEDBINDING_API void glUniform1i64vARB(GLint location, GLsizei count, const GLint64 * value);
GLMIXEDBINDING_API void glUniform1i64vNV(GLint location, GLsizei count, const GLint64EXT * value);
GLMIXEDBINDING_API void glUniform1iARB(GLint location, GLint v0);
GLMIXEDBINDING_API void glUniform1iv(GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glUniform1ivARB(GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glUniform1ui(GLint location, GLuint v0);
GLMIXEDBINDING_API void glUniform1ui64ARB(GLint location, GLuint64 x);
GLMIXEDBINDING_API void glUniform1ui64NV(GLint location, GLuint64EXT x);
GLMIXEDBINDING_API void glUniform1ui64vARB(GLint location, GLsizei count, const GLuint64 * value);
GLMIXEDBINDING_API void glUniform1ui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
GLMIXEDBINDING_API void glUniform1uiEXT(GLint location, GLuint v0);
GLMIXEDBINDING_API void glUniform1uiv(GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glUniform1uivEXT(GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glUniform2d(GLint location, GLdouble x, GLdouble y);
GLMIXEDBINDING_API void glUniform2dv(GLint location, GLsizei count, const GLdouble * value);
GLMIXEDBINDING_API void glUniform2f(GLint location, GLfloat v0, GLfloat v1);
GLMIXEDBINDING_API void glUniform2fARB(GLint location, GLfloat v0, GLfloat v1);
GLMIXEDBINDING_API void glUniform2fv(GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glUniform2fvARB(GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glUniform2i(GLint location, GLint v0, GLint v1);
GLMIXEDBINDING_API void glUniform2i64ARB(GLint location, GLint64 x, GLint64 y);
GLMIXEDBINDING_API void glUniform2i64NV(GLint location, GLint64EXT x, GLint64EXT y);
GLMIXEDBINDING_API void glUniform2i64vARB(GLint location, GLsizei count, const GLint64 * value);
GLMIXEDBINDING_API void glUniform2i64vNV(GLint location, GLsizei count, const GLint64EXT * value);
GLMIXEDBINDING_API void glUniform2iARB(GLint location, GLint v0, GLint v1);
GLMIXEDBINDING_API void glUniform2iv(GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glUniform2ivARB(GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glUniform2ui(GLint location, GLuint v0, GLuint v1);
GLMIXEDBINDING_API void glUniform2ui64ARB(GLint location, GLuint64 x, GLuint64 y);
GLMIXEDBINDING_API void glUniform2ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y);
GLMIXEDBINDING_API void glUniform2ui64vARB(GLint location, GLsizei count, const GLuint64 * value);
GLMIXEDBINDING_API void glUniform2ui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
GLMIXEDBINDING_API void glUniform2uiEXT(GLint location, GLuint v0, GLuint v1);
GLMIXEDBINDING_API void glUniform2uiv(GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glUniform2uivEXT(GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glUniform3d(GLint location, GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glUniform3dv(GLint location, GLsizei count, const GLdouble * value);
GLMIXEDBINDING_API void glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLMIXEDBINDING_API void glUniform3fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLMIXEDBINDING_API void glUniform3fv(GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glUniform3fvARB(GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
GLMIXEDBINDING_API void glUniform3i64ARB(GLint location, GLint64 x, GLint64 y, GLint64 z);
GLMIXEDBINDING_API void glUniform3i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLMIXEDBINDING_API void glUniform3i64vARB(GLint location, GLsizei count, const GLint64 * value);
GLMIXEDBINDING_API void glUniform3i64vNV(GLint location, GLsizei count, const GLint64EXT * value);
GLMIXEDBINDING_API void glUniform3iARB(GLint location, GLint v0, GLint v1, GLint v2);
GLMIXEDBINDING_API void glUniform3iv(GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glUniform3ivARB(GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
GLMIXEDBINDING_API void glUniform3ui64ARB(GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
GLMIXEDBINDING_API void glUniform3ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLMIXEDBINDING_API void glUniform3ui64vARB(GLint location, GLsizei count, const GLuint64 * value);
GLMIXEDBINDING_API void glUniform3ui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
GLMIXEDBINDING_API void glUniform3uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2);
GLMIXEDBINDING_API void glUniform3uiv(GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glUniform3uivEXT(GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glUniform4d(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glUniform4dv(GLint location, GLsizei count, const GLdouble * value);
GLMIXEDBINDING_API void glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLMIXEDBINDING_API void glUniform4fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLMIXEDBINDING_API void glUniform4fv(GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glUniform4fvARB(GLint location, GLsizei count, const GLfloat * value);
GLMIXEDBINDING_API void glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLMIXEDBINDING_API void glUniform4i64ARB(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
GLMIXEDBINDING_API void glUniform4i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLMIXEDBINDING_API void glUniform4i64vARB(GLint location, GLsizei count, const GLint64 * value);
GLMIXEDBINDING_API void glUniform4i64vNV(GLint location, GLsizei count, const GLint64EXT * value);
GLMIXEDBINDING_API void glUniform4iARB(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLMIXEDBINDING_API void glUniform4iv(GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glUniform4ivARB(GLint location, GLsizei count, const GLint * value);
GLMIXEDBINDING_API void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLMIXEDBINDING_API void glUniform4ui64ARB(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
GLMIXEDBINDING_API void glUniform4ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLMIXEDBINDING_API void glUniform4ui64vARB(GLint location, GLsizei count, const GLuint64 * value);
GLMIXEDBINDING_API void glUniform4ui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
GLMIXEDBINDING_API void glUniform4uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLMIXEDBINDING_API void glUniform4uiv(GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glUniform4uivEXT(GLint location, GLsizei count, const GLuint * value);
GLMIXEDBINDING_API void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
GLMIXEDBINDING_API void glUniformBufferEXT(GLuint program, GLint location, GLuint buffer);
GLMIXEDBINDING_API void glUniformHandleui64ARB(GLint location, GLuint64 value);
GLMIXEDBINDING_API void glUniformHandleui64IMG(GLint location, GLuint64 value);
GLMIXEDBINDING_API void glUniformHandleui64NV(GLint location, GLuint64 value);
GLMIXEDBINDING_API void glUniformHandleui64vARB(GLint location, GLsizei count, const GLuint64 * value);
GLMIXEDBINDING_API void glUniformHandleui64vIMG(GLint location, GLsizei count, const GLuint64 * value);
GLMIXEDBINDING_API void glUniformHandleui64vNV(GLint location, GLsizei count, const GLuint64 * value);
GLMIXEDBINDING_API void glUniformMatrix2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix2fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix2x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix2x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix2x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix2x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix3fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix3x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix3x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix3x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix3x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix4fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix4x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix4x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix4x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLMIXEDBINDING_API void glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformMatrix4x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLMIXEDBINDING_API void glUniformSubroutinesuiv(GLenum shadertype, GLsizei count, const GLuint * indices);
GLMIXEDBINDING_API void glUniformui64NV(GLint location, GLuint64EXT value);
GLMIXEDBINDING_API void glUniformui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
GLMIXEDBINDING_API void glUnlockArraysEXT();
GLMIXEDBINDING_API GLboolean glUnmapBuffer(GLenum target);
GLMIXEDBINDING_API GLboolean glUnmapBufferARB(GLenum target);
GLMIXEDBINDING_API GLboolean glUnmapBufferOES(GLenum target);
GLMIXEDBINDING_API GLboolean glUnmapNamedBuffer(GLuint buffer);
GLMIXEDBINDING_API GLboolean glUnmapNamedBufferEXT(GLuint buffer);
GLMIXEDBINDING_API void glUnmapObjectBufferATI(GLuint buffer);
GLMIXEDBINDING_API void glUnmapTexture2DINTEL(GLuint texture, GLint level);
GLMIXEDBINDING_API void glUpdateObjectBufferATI(GLuint buffer, GLuint offset, GLsizei size, const void * pointer, GLenum preserve);
GLMIXEDBINDING_API void glUploadGpuMaskNVX(GLbitfield mask);
GLMIXEDBINDING_API void glUseProgram(GLuint program);
GLMIXEDBINDING_API void glUseProgramObjectARB(GLhandleARB programObj);
GLMIXEDBINDING_API void glUseProgramStages(GLuint pipeline, UseProgramStageMask stages, GLuint program);
GLMIXEDBINDING_API void glUseProgramStagesEXT(GLuint pipeline, UseProgramStageMask stages, GLuint program);
GLMIXEDBINDING_API void glUseShaderProgramEXT(GLenum type, GLuint program);
GLMIXEDBINDING_API void glValidateProgram(GLuint program);
GLMIXEDBINDING_API void glValidateProgramARB(GLhandleARB programObj);
GLMIXEDBINDING_API void glValidateProgramPipeline(GLuint pipeline);
GLMIXEDBINDING_API void glValidateProgramPipelineEXT(GLuint pipeline);
GLMIXEDBINDING_API void glVariantArrayObjectATI(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
GLMIXEDBINDING_API void glVariantbvEXT(GLuint id, const GLbyte * addr);
GLMIXEDBINDING_API void glVariantdvEXT(GLuint id, const GLdouble * addr);
GLMIXEDBINDING_API void glVariantfvEXT(GLuint id, const GLfloat * addr);
GLMIXEDBINDING_API void glVariantivEXT(GLuint id, const GLint * addr);
GLMIXEDBINDING_API void glVariantPointerEXT(GLuint id, GLenum type, GLuint stride, const void * addr);
GLMIXEDBINDING_API void glVariantsvEXT(GLuint id, const GLshort * addr);
GLMIXEDBINDING_API void glVariantubvEXT(GLuint id, const GLubyte * addr);
GLMIXEDBINDING_API void glVariantuivEXT(GLuint id, const GLuint * addr);
GLMIXEDBINDING_API void glVariantusvEXT(GLuint id, const GLushort * addr);
GLMIXEDBINDING_API void glVDPAUFiniNV();
GLMIXEDBINDING_API void glVDPAUGetSurfaceivNV(GLvdpauSurfaceNV surface, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
GLMIXEDBINDING_API void glVDPAUInitNV(const void * vdpDevice, const void * getProcAddress);
GLMIXEDBINDING_API GLboolean glVDPAUIsSurfaceNV(GLvdpauSurfaceNV surface);
GLMIXEDBINDING_API void glVDPAUMapSurfacesNV(GLsizei numSurfaces, const GLvdpauSurfaceNV * surfaces);
GLMIXEDBINDING_API GLvdpauSurfaceNV glVDPAURegisterOutputSurfaceNV(const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
GLMIXEDBINDING_API GLvdpauSurfaceNV glVDPAURegisterVideoSurfaceNV(const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
GLMIXEDBINDING_API GLvdpauSurfaceNV glVDPAURegisterVideoSurfaceWithPictureStructureNV(const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames, GLboolean isFrameStructure);
GLMIXEDBINDING_API void glVDPAUSurfaceAccessNV(GLvdpauSurfaceNV surface, GLenum access);
GLMIXEDBINDING_API void glVDPAUUnmapSurfacesNV(GLsizei numSurface, const GLvdpauSurfaceNV * surfaces);
GLMIXEDBINDING_API void glVDPAUUnregisterSurfaceNV(GLvdpauSurfaceNV surface);
GLMIXEDBINDING_API void glVertex2bOES(GLbyte x, GLbyte y);
GLMIXEDBINDING_API void glVertex2bvOES(const GLbyte * coords);
GLMIXEDBINDING_API void glVertex2d(GLdouble x, GLdouble y);
GLMIXEDBINDING_API void glVertex2dv(const GLdouble * v);
GLMIXEDBINDING_API void glVertex2f(GLfloat x, GLfloat y);
GLMIXEDBINDING_API void glVertex2fv(const GLfloat * v);
GLMIXEDBINDING_API void glVertex2hNV(GLhalfNV x, GLhalfNV y);
GLMIXEDBINDING_API void glVertex2hvNV(const GLhalfNV * v);
GLMIXEDBINDING_API void glVertex2i(GLint x, GLint y);
GLMIXEDBINDING_API void glVertex2iv(const GLint * v);
GLMIXEDBINDING_API void glVertex2s(GLshort x, GLshort y);
GLMIXEDBINDING_API void glVertex2sv(const GLshort * v);
GLMIXEDBINDING_API void glVertex2xOES(GLfixed x);
GLMIXEDBINDING_API void glVertex2xvOES(const GLfixed * coords);
GLMIXEDBINDING_API void glVertex3bOES(GLbyte x, GLbyte y, GLbyte z);
GLMIXEDBINDING_API void glVertex3bvOES(const GLbyte * coords);
GLMIXEDBINDING_API void glVertex3d(GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glVertex3dv(const GLdouble * v);
GLMIXEDBINDING_API void glVertex3f(GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glVertex3fv(const GLfloat * v);
GLMIXEDBINDING_API void glVertex3hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z);
GLMIXEDBINDING_API void glVertex3hvNV(const GLhalfNV * v);
GLMIXEDBINDING_API void glVertex3i(GLint x, GLint y, GLint z);
GLMIXEDBINDING_API void glVertex3iv(const GLint * v);
GLMIXEDBINDING_API void glVertex3s(GLshort x, GLshort y, GLshort z);
GLMIXEDBINDING_API void glVertex3sv(const GLshort * v);
GLMIXEDBINDING_API void glVertex3xOES(GLfixed x, GLfixed y);
GLMIXEDBINDING_API void glVertex3xvOES(const GLfixed * coords);
GLMIXEDBINDING_API void glVertex4bOES(GLbyte x, GLbyte y, GLbyte z, GLbyte w);
GLMIXEDBINDING_API void glVertex4bvOES(const GLbyte * coords);
GLMIXEDBINDING_API void glVertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glVertex4dv(const GLdouble * v);
GLMIXEDBINDING_API void glVertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLMIXEDBINDING_API void glVertex4fv(const GLfloat * v);
GLMIXEDBINDING_API void glVertex4hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
GLMIXEDBINDING_API void glVertex4hvNV(const GLhalfNV * v);
GLMIXEDBINDING_API void glVertex4i(GLint x, GLint y, GLint z, GLint w);
GLMIXEDBINDING_API void glVertex4iv(const GLint * v);
GLMIXEDBINDING_API void glVertex4s(GLshort x, GLshort y, GLshort z, GLshort w);
GLMIXEDBINDING_API void glVertex4sv(const GLshort * v);
GLMIXEDBINDING_API void glVertex4xOES(GLfixed x, GLfixed y, GLfixed z);
GLMIXEDBINDING_API void glVertex4xvOES(const GLfixed * coords);
GLMIXEDBINDING_API void glVertexArrayAttribBinding(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
GLMIXEDBINDING_API void glVertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLMIXEDBINDING_API void glVertexArrayAttribIFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLMIXEDBINDING_API void glVertexArrayAttribLFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLMIXEDBINDING_API void glVertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint divisor);
GLMIXEDBINDING_API void glVertexArrayBindVertexBufferEXT(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLMIXEDBINDING_API void glVertexArrayColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLMIXEDBINDING_API void glVertexArrayEdgeFlagOffsetEXT(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
GLMIXEDBINDING_API void glVertexArrayElementBuffer(GLuint vaobj, GLuint buffer);
GLMIXEDBINDING_API void glVertexArrayFogCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLMIXEDBINDING_API void glVertexArrayIndexOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLMIXEDBINDING_API void glVertexArrayMultiTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLMIXEDBINDING_API void glVertexArrayNormalOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLMIXEDBINDING_API void glVertexArrayParameteriAPPLE(GLenum pname, GLint param);
GLMIXEDBINDING_API void glVertexArrayRangeAPPLE(GLsizei length, void * pointer);
GLMIXEDBINDING_API void glVertexArrayRangeNV(GLsizei length, const void * pointer);
GLMIXEDBINDING_API void glVertexArraySecondaryColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLMIXEDBINDING_API void glVertexArrayTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLMIXEDBINDING_API void glVertexArrayVertexAttribBindingEXT(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
GLMIXEDBINDING_API void glVertexArrayVertexAttribDivisorEXT(GLuint vaobj, GLuint index, GLuint divisor);
GLMIXEDBINDING_API void glVertexArrayVertexAttribFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLMIXEDBINDING_API void glVertexArrayVertexAttribIFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLMIXEDBINDING_API void glVertexArrayVertexAttribIOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLMIXEDBINDING_API void glVertexArrayVertexAttribLFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLMIXEDBINDING_API void glVertexArrayVertexAttribLOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLMIXEDBINDING_API void glVertexArrayVertexAttribOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
GLMIXEDBINDING_API void glVertexArrayVertexBindingDivisorEXT(GLuint vaobj, GLuint bindingindex, GLuint divisor);
GLMIXEDBINDING_API void glVertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLMIXEDBINDING_API void glVertexArrayVertexBuffers(GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
GLMIXEDBINDING_API void glVertexArrayVertexOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLMIXEDBINDING_API void glVertexAttrib1d(GLuint index, GLdouble x);
GLMIXEDBINDING_API void glVertexAttrib1dARB(GLuint index, GLdouble x);
GLMIXEDBINDING_API void glVertexAttrib1dNV(GLuint index, GLdouble x);
GLMIXEDBINDING_API void glVertexAttrib1dv(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttrib1dvARB(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttrib1dvNV(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttrib1f(GLuint index, GLfloat x);
GLMIXEDBINDING_API void glVertexAttrib1fARB(GLuint index, GLfloat x);
GLMIXEDBINDING_API void glVertexAttrib1fNV(GLuint index, GLfloat x);
GLMIXEDBINDING_API void glVertexAttrib1fv(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttrib1fvARB(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttrib1fvNV(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttrib1hNV(GLuint index, GLhalfNV x);
GLMIXEDBINDING_API void glVertexAttrib1hvNV(GLuint index, const GLhalfNV * v);
GLMIXEDBINDING_API void glVertexAttrib1s(GLuint index, GLshort x);
GLMIXEDBINDING_API void glVertexAttrib1sARB(GLuint index, GLshort x);
GLMIXEDBINDING_API void glVertexAttrib1sNV(GLuint index, GLshort x);
GLMIXEDBINDING_API void glVertexAttrib1sv(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttrib1svARB(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttrib1svNV(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttrib2d(GLuint index, GLdouble x, GLdouble y);
GLMIXEDBINDING_API void glVertexAttrib2dARB(GLuint index, GLdouble x, GLdouble y);
GLMIXEDBINDING_API void glVertexAttrib2dNV(GLuint index, GLdouble x, GLdouble y);
GLMIXEDBINDING_API void glVertexAttrib2dv(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttrib2dvARB(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttrib2dvNV(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
GLMIXEDBINDING_API void glVertexAttrib2fARB(GLuint index, GLfloat x, GLfloat y);
GLMIXEDBINDING_API void glVertexAttrib2fNV(GLuint index, GLfloat x, GLfloat y);
GLMIXEDBINDING_API void glVertexAttrib2fv(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttrib2fvARB(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttrib2fvNV(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttrib2hNV(GLuint index, GLhalfNV x, GLhalfNV y);
GLMIXEDBINDING_API void glVertexAttrib2hvNV(GLuint index, const GLhalfNV * v);
GLMIXEDBINDING_API void glVertexAttrib2s(GLuint index, GLshort x, GLshort y);
GLMIXEDBINDING_API void glVertexAttrib2sARB(GLuint index, GLshort x, GLshort y);
GLMIXEDBINDING_API void glVertexAttrib2sNV(GLuint index, GLshort x, GLshort y);
GLMIXEDBINDING_API void glVertexAttrib2sv(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttrib2svARB(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttrib2svNV(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glVertexAttrib3dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glVertexAttrib3dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glVertexAttrib3dv(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttrib3dvARB(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttrib3dvNV(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glVertexAttrib3fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glVertexAttrib3fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glVertexAttrib3fv(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttrib3fvARB(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttrib3fvNV(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttrib3hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
GLMIXEDBINDING_API void glVertexAttrib3hvNV(GLuint index, const GLhalfNV * v);
GLMIXEDBINDING_API void glVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z);
GLMIXEDBINDING_API void glVertexAttrib3sARB(GLuint index, GLshort x, GLshort y, GLshort z);
GLMIXEDBINDING_API void glVertexAttrib3sNV(GLuint index, GLshort x, GLshort y, GLshort z);
GLMIXEDBINDING_API void glVertexAttrib3sv(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttrib3svARB(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttrib3svNV(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttrib4bv(GLuint index, const GLbyte * v);
GLMIXEDBINDING_API void glVertexAttrib4bvARB(GLuint index, const GLbyte * v);
GLMIXEDBINDING_API void glVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glVertexAttrib4dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glVertexAttrib4dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glVertexAttrib4dv(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttrib4dvARB(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttrib4dvNV(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLMIXEDBINDING_API void glVertexAttrib4fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLMIXEDBINDING_API void glVertexAttrib4fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLMIXEDBINDING_API void glVertexAttrib4fv(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttrib4fvARB(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttrib4fvNV(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttrib4hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
GLMIXEDBINDING_API void glVertexAttrib4hvNV(GLuint index, const GLhalfNV * v);
GLMIXEDBINDING_API void glVertexAttrib4iv(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glVertexAttrib4ivARB(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glVertexAttrib4Nbv(GLuint index, const GLbyte * v);
GLMIXEDBINDING_API void glVertexAttrib4NbvARB(GLuint index, const GLbyte * v);
GLMIXEDBINDING_API void glVertexAttrib4Niv(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glVertexAttrib4NivARB(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glVertexAttrib4Nsv(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttrib4NsvARB(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLMIXEDBINDING_API void glVertexAttrib4NubARB(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLMIXEDBINDING_API void glVertexAttrib4Nubv(GLuint index, const GLubyte * v);
GLMIXEDBINDING_API void glVertexAttrib4NubvARB(GLuint index, const GLubyte * v);
GLMIXEDBINDING_API void glVertexAttrib4Nuiv(GLuint index, const GLuint * v);
GLMIXEDBINDING_API void glVertexAttrib4NuivARB(GLuint index, const GLuint * v);
GLMIXEDBINDING_API void glVertexAttrib4Nusv(GLuint index, const GLushort * v);
GLMIXEDBINDING_API void glVertexAttrib4NusvARB(GLuint index, const GLushort * v);
GLMIXEDBINDING_API void glVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLMIXEDBINDING_API void glVertexAttrib4sARB(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLMIXEDBINDING_API void glVertexAttrib4sNV(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLMIXEDBINDING_API void glVertexAttrib4sv(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttrib4svARB(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttrib4svNV(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttrib4ubNV(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLMIXEDBINDING_API void glVertexAttrib4ubv(GLuint index, const GLubyte * v);
GLMIXEDBINDING_API void glVertexAttrib4ubvARB(GLuint index, const GLubyte * v);
GLMIXEDBINDING_API void glVertexAttrib4ubvNV(GLuint index, const GLubyte * v);
GLMIXEDBINDING_API void glVertexAttrib4uiv(GLuint index, const GLuint * v);
GLMIXEDBINDING_API void glVertexAttrib4uivARB(GLuint index, const GLuint * v);
GLMIXEDBINDING_API void glVertexAttrib4usv(GLuint index, const GLushort * v);
GLMIXEDBINDING_API void glVertexAttrib4usvARB(GLuint index, const GLushort * v);
GLMIXEDBINDING_API void glVertexAttribArrayObjectATI(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
GLMIXEDBINDING_API void glVertexAttribBinding(GLuint attribindex, GLuint bindingindex);
GLMIXEDBINDING_API void glVertexAttribDivisor(GLuint index, GLuint divisor);
GLMIXEDBINDING_API void glVertexAttribDivisorANGLE(GLuint index, GLuint divisor);
GLMIXEDBINDING_API void glVertexAttribDivisorARB(GLuint index, GLuint divisor);
GLMIXEDBINDING_API void glVertexAttribDivisorEXT(GLuint index, GLuint divisor);
GLMIXEDBINDING_API void glVertexAttribDivisorNV(GLuint index, GLuint divisor);
GLMIXEDBINDING_API void glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLMIXEDBINDING_API void glVertexAttribFormatNV(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
GLMIXEDBINDING_API void glVertexAttribI1i(GLuint index, GLint x);
GLMIXEDBINDING_API void glVertexAttribI1iEXT(GLuint index, GLint x);
GLMIXEDBINDING_API void glVertexAttribI1iv(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glVertexAttribI1ivEXT(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glVertexAttribI1ui(GLuint index, GLuint x);
GLMIXEDBINDING_API void glVertexAttribI1uiEXT(GLuint index, GLuint x);
GLMIXEDBINDING_API void glVertexAttribI1uiv(GLuint index, const GLuint * v);
GLMIXEDBINDING_API void glVertexAttribI1uivEXT(GLuint index, const GLuint * v);
GLMIXEDBINDING_API void glVertexAttribI2i(GLuint index, GLint x, GLint y);
GLMIXEDBINDING_API void glVertexAttribI2iEXT(GLuint index, GLint x, GLint y);
GLMIXEDBINDING_API void glVertexAttribI2iv(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glVertexAttribI2ivEXT(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glVertexAttribI2ui(GLuint index, GLuint x, GLuint y);
GLMIXEDBINDING_API void glVertexAttribI2uiEXT(GLuint index, GLuint x, GLuint y);
GLMIXEDBINDING_API void glVertexAttribI2uiv(GLuint index, const GLuint * v);
GLMIXEDBINDING_API void glVertexAttribI2uivEXT(GLuint index, const GLuint * v);
GLMIXEDBINDING_API void glVertexAttribI3i(GLuint index, GLint x, GLint y, GLint z);
GLMIXEDBINDING_API void glVertexAttribI3iEXT(GLuint index, GLint x, GLint y, GLint z);
GLMIXEDBINDING_API void glVertexAttribI3iv(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glVertexAttribI3ivEXT(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glVertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z);
GLMIXEDBINDING_API void glVertexAttribI3uiEXT(GLuint index, GLuint x, GLuint y, GLuint z);
GLMIXEDBINDING_API void glVertexAttribI3uiv(GLuint index, const GLuint * v);
GLMIXEDBINDING_API void glVertexAttribI3uivEXT(GLuint index, const GLuint * v);
GLMIXEDBINDING_API void glVertexAttribI4bv(GLuint index, const GLbyte * v);
GLMIXEDBINDING_API void glVertexAttribI4bvEXT(GLuint index, const GLbyte * v);
GLMIXEDBINDING_API void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
GLMIXEDBINDING_API void glVertexAttribI4iEXT(GLuint index, GLint x, GLint y, GLint z, GLint w);
GLMIXEDBINDING_API void glVertexAttribI4iv(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glVertexAttribI4ivEXT(GLuint index, const GLint * v);
GLMIXEDBINDING_API void glVertexAttribI4sv(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttribI4svEXT(GLuint index, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttribI4ubv(GLuint index, const GLubyte * v);
GLMIXEDBINDING_API void glVertexAttribI4ubvEXT(GLuint index, const GLubyte * v);
GLMIXEDBINDING_API void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLMIXEDBINDING_API void glVertexAttribI4uiEXT(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLMIXEDBINDING_API void glVertexAttribI4uiv(GLuint index, const GLuint * v);
GLMIXEDBINDING_API void glVertexAttribI4uivEXT(GLuint index, const GLuint * v);
GLMIXEDBINDING_API void glVertexAttribI4usv(GLuint index, const GLushort * v);
GLMIXEDBINDING_API void glVertexAttribI4usvEXT(GLuint index, const GLushort * v);
GLMIXEDBINDING_API void glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLMIXEDBINDING_API void glVertexAttribIFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride);
GLMIXEDBINDING_API void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glVertexAttribIPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glVertexAttribL1d(GLuint index, GLdouble x);
GLMIXEDBINDING_API void glVertexAttribL1dEXT(GLuint index, GLdouble x);
GLMIXEDBINDING_API void glVertexAttribL1dv(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttribL1dvEXT(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttribL1i64NV(GLuint index, GLint64EXT x);
GLMIXEDBINDING_API void glVertexAttribL1i64vNV(GLuint index, const GLint64EXT * v);
GLMIXEDBINDING_API void glVertexAttribL1ui64ARB(GLuint index, GLuint64EXT x);
GLMIXEDBINDING_API void glVertexAttribL1ui64NV(GLuint index, GLuint64EXT x);
GLMIXEDBINDING_API void glVertexAttribL1ui64vARB(GLuint index, const GLuint64EXT * v);
GLMIXEDBINDING_API void glVertexAttribL1ui64vNV(GLuint index, const GLuint64EXT * v);
GLMIXEDBINDING_API void glVertexAttribL2d(GLuint index, GLdouble x, GLdouble y);
GLMIXEDBINDING_API void glVertexAttribL2dEXT(GLuint index, GLdouble x, GLdouble y);
GLMIXEDBINDING_API void glVertexAttribL2dv(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttribL2dvEXT(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttribL2i64NV(GLuint index, GLint64EXT x, GLint64EXT y);
GLMIXEDBINDING_API void glVertexAttribL2i64vNV(GLuint index, const GLint64EXT * v);
GLMIXEDBINDING_API void glVertexAttribL2ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y);
GLMIXEDBINDING_API void glVertexAttribL2ui64vNV(GLuint index, const GLuint64EXT * v);
GLMIXEDBINDING_API void glVertexAttribL3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glVertexAttribL3dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glVertexAttribL3dv(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttribL3dvEXT(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttribL3i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLMIXEDBINDING_API void glVertexAttribL3i64vNV(GLuint index, const GLint64EXT * v);
GLMIXEDBINDING_API void glVertexAttribL3ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLMIXEDBINDING_API void glVertexAttribL3ui64vNV(GLuint index, const GLuint64EXT * v);
GLMIXEDBINDING_API void glVertexAttribL4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glVertexAttribL4dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glVertexAttribL4dv(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttribL4dvEXT(GLuint index, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttribL4i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLMIXEDBINDING_API void glVertexAttribL4i64vNV(GLuint index, const GLint64EXT * v);
GLMIXEDBINDING_API void glVertexAttribL4ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLMIXEDBINDING_API void glVertexAttribL4ui64vNV(GLuint index, const GLuint64EXT * v);
GLMIXEDBINDING_API void glVertexAttribLFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLMIXEDBINDING_API void glVertexAttribLFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride);
GLMIXEDBINDING_API void glVertexAttribLPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glVertexAttribLPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glVertexAttribP1ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLMIXEDBINDING_API void glVertexAttribP1uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
GLMIXEDBINDING_API void glVertexAttribP2ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLMIXEDBINDING_API void glVertexAttribP2uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
GLMIXEDBINDING_API void glVertexAttribP3ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLMIXEDBINDING_API void glVertexAttribP3uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
GLMIXEDBINDING_API void glVertexAttribP4ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLMIXEDBINDING_API void glVertexAttribP4uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
GLMIXEDBINDING_API void glVertexAttribParameteriAMD(GLuint index, GLenum pname, GLint param);
GLMIXEDBINDING_API void glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glVertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glVertexAttribPointerNV(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glVertexAttribs1dvNV(GLuint index, GLsizei count, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttribs1fvNV(GLuint index, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttribs1hvNV(GLuint index, GLsizei n, const GLhalfNV * v);
GLMIXEDBINDING_API void glVertexAttribs1svNV(GLuint index, GLsizei count, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttribs2dvNV(GLuint index, GLsizei count, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttribs2fvNV(GLuint index, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttribs2hvNV(GLuint index, GLsizei n, const GLhalfNV * v);
GLMIXEDBINDING_API void glVertexAttribs2svNV(GLuint index, GLsizei count, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttribs3dvNV(GLuint index, GLsizei count, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttribs3fvNV(GLuint index, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttribs3hvNV(GLuint index, GLsizei n, const GLhalfNV * v);
GLMIXEDBINDING_API void glVertexAttribs3svNV(GLuint index, GLsizei count, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttribs4dvNV(GLuint index, GLsizei count, const GLdouble * v);
GLMIXEDBINDING_API void glVertexAttribs4fvNV(GLuint index, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glVertexAttribs4hvNV(GLuint index, GLsizei n, const GLhalfNV * v);
GLMIXEDBINDING_API void glVertexAttribs4svNV(GLuint index, GLsizei count, const GLshort * v);
GLMIXEDBINDING_API void glVertexAttribs4ubvNV(GLuint index, GLsizei count, const GLubyte * v);
GLMIXEDBINDING_API void glVertexBindingDivisor(GLuint bindingindex, GLuint divisor);
GLMIXEDBINDING_API void glVertexBlendARB(GLint count);
GLMIXEDBINDING_API void glVertexBlendEnvfATI(GLenum pname, GLfloat param);
GLMIXEDBINDING_API void glVertexBlendEnviATI(GLenum pname, GLint param);
GLMIXEDBINDING_API void glVertexFormatNV(GLint size, GLenum type, GLsizei stride);
GLMIXEDBINDING_API void glVertexP2ui(GLenum type, GLuint value);
GLMIXEDBINDING_API void glVertexP2uiv(GLenum type, const GLuint * value);
GLMIXEDBINDING_API void glVertexP3ui(GLenum type, GLuint value);
GLMIXEDBINDING_API void glVertexP3uiv(GLenum type, const GLuint * value);
GLMIXEDBINDING_API void glVertexP4ui(GLenum type, GLuint value);
GLMIXEDBINDING_API void glVertexP4uiv(GLenum type, const GLuint * value);
GLMIXEDBINDING_API void glVertexPointer(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glVertexPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLMIXEDBINDING_API void glVertexPointerListIBM(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLMIXEDBINDING_API void glVertexPointervINTEL(GLint size, GLenum type, const void ** pointer);
GLMIXEDBINDING_API void glVertexStream1dATI(GLenum stream, GLdouble x);
GLMIXEDBINDING_API void glVertexStream1dvATI(GLenum stream, const GLdouble * coords);
GLMIXEDBINDING_API void glVertexStream1fATI(GLenum stream, GLfloat x);
GLMIXEDBINDING_API void glVertexStream1fvATI(GLenum stream, const GLfloat * coords);
GLMIXEDBINDING_API void glVertexStream1iATI(GLenum stream, GLint x);
GLMIXEDBINDING_API void glVertexStream1ivATI(GLenum stream, const GLint * coords);
GLMIXEDBINDING_API void glVertexStream1sATI(GLenum stream, GLshort x);
GLMIXEDBINDING_API void glVertexStream1svATI(GLenum stream, const GLshort * coords);
GLMIXEDBINDING_API void glVertexStream2dATI(GLenum stream, GLdouble x, GLdouble y);
GLMIXEDBINDING_API void glVertexStream2dvATI(GLenum stream, const GLdouble * coords);
GLMIXEDBINDING_API void glVertexStream2fATI(GLenum stream, GLfloat x, GLfloat y);
GLMIXEDBINDING_API void glVertexStream2fvATI(GLenum stream, const GLfloat * coords);
GLMIXEDBINDING_API void glVertexStream2iATI(GLenum stream, GLint x, GLint y);
GLMIXEDBINDING_API void glVertexStream2ivATI(GLenum stream, const GLint * coords);
GLMIXEDBINDING_API void glVertexStream2sATI(GLenum stream, GLshort x, GLshort y);
GLMIXEDBINDING_API void glVertexStream2svATI(GLenum stream, const GLshort * coords);
GLMIXEDBINDING_API void glVertexStream3dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glVertexStream3dvATI(GLenum stream, const GLdouble * coords);
GLMIXEDBINDING_API void glVertexStream3fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glVertexStream3fvATI(GLenum stream, const GLfloat * coords);
GLMIXEDBINDING_API void glVertexStream3iATI(GLenum stream, GLint x, GLint y, GLint z);
GLMIXEDBINDING_API void glVertexStream3ivATI(GLenum stream, const GLint * coords);
GLMIXEDBINDING_API void glVertexStream3sATI(GLenum stream, GLshort x, GLshort y, GLshort z);
GLMIXEDBINDING_API void glVertexStream3svATI(GLenum stream, const GLshort * coords);
GLMIXEDBINDING_API void glVertexStream4dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glVertexStream4dvATI(GLenum stream, const GLdouble * coords);
GLMIXEDBINDING_API void glVertexStream4fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLMIXEDBINDING_API void glVertexStream4fvATI(GLenum stream, const GLfloat * coords);
GLMIXEDBINDING_API void glVertexStream4iATI(GLenum stream, GLint x, GLint y, GLint z, GLint w);
GLMIXEDBINDING_API void glVertexStream4ivATI(GLenum stream, const GLint * coords);
GLMIXEDBINDING_API void glVertexStream4sATI(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
GLMIXEDBINDING_API void glVertexStream4svATI(GLenum stream, const GLshort * coords);
GLMIXEDBINDING_API void glVertexWeightfEXT(GLfloat weight);
GLMIXEDBINDING_API void glVertexWeightfvEXT(const GLfloat * weight);
GLMIXEDBINDING_API void glVertexWeighthNV(GLhalfNV weight);
GLMIXEDBINDING_API void glVertexWeighthvNV(const GLhalfNV * weight);
GLMIXEDBINDING_API void glVertexWeightPointerEXT(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API GLenum glVideoCaptureNV(GLuint video_capture_slot, GLuint * sequence_num, GLuint64EXT * capture_time);
GLMIXEDBINDING_API void glVideoCaptureStreamParameterdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble * params);
GLMIXEDBINDING_API void glVideoCaptureStreamParameterfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat * params);
GLMIXEDBINDING_API void glVideoCaptureStreamParameterivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint * params);
GLMIXEDBINDING_API void glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
GLMIXEDBINDING_API void glViewportArrayv(GLuint first, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glViewportArrayvNV(GLuint first, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glViewportArrayvOES(GLuint first, GLsizei count, const GLfloat * v);
GLMIXEDBINDING_API void glViewportIndexedf(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
GLMIXEDBINDING_API void glViewportIndexedfNV(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
GLMIXEDBINDING_API void glViewportIndexedfOES(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
GLMIXEDBINDING_API void glViewportIndexedfv(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glViewportIndexedfvNV(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glViewportIndexedfvOES(GLuint index, const GLfloat * v);
GLMIXEDBINDING_API void glViewportPositionWScaleNV(GLuint index, GLfloat xcoeff, GLfloat ycoeff);
GLMIXEDBINDING_API void glViewportSwizzleNV(GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);
GLMIXEDBINDING_API void glWaitSemaphoreEXT(GLuint semaphore, GLuint numBufferBarriers, const GLuint * buffers, GLuint numTextureBarriers, const GLuint * textures, const GLenum * srcLayouts);
GLMIXEDBINDING_API void glWaitSemaphoreui64NVX(GLuint waitGpu, GLsizei fenceObjectCount, const GLuint * semaphoreArray, const GLuint64 * fenceValueArray);
GLMIXEDBINDING_API void glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLMIXEDBINDING_API void glWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLMIXEDBINDING_API void glWaitVkSemaphoreNV(GLuint64 vkSemaphore);
GLMIXEDBINDING_API void glWeightbvARB(GLint size, const GLbyte * weights);
GLMIXEDBINDING_API void glWeightdvARB(GLint size, const GLdouble * weights);
GLMIXEDBINDING_API void glWeightfvARB(GLint size, const GLfloat * weights);
GLMIXEDBINDING_API void glWeightivARB(GLint size, const GLint * weights);
GLMIXEDBINDING_API void glWeightPathsNV(GLuint resultPath, GLsizei numPaths, const GLuint * paths, const GLfloat * weights);
GLMIXEDBINDING_API void glWeightPointerARB(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLMIXEDBINDING_API void glWeightsvARB(GLint size, const GLshort * weights);
GLMIXEDBINDING_API void glWeightubvARB(GLint size, const GLubyte * weights);
GLMIXEDBINDING_API void glWeightuivARB(GLint size, const GLuint * weights);
GLMIXEDBINDING_API void glWeightusvARB(GLint size, const GLushort * weights);
GLMIXEDBINDING_API void glWindowPos2d(GLdouble x, GLdouble y);
GLMIXEDBINDING_API void glWindowPos2dARB(GLdouble x, GLdouble y);
GLMIXEDBINDING_API void glWindowPos2dMESA(GLdouble x, GLdouble y);
GLMIXEDBINDING_API void glWindowPos2dv(const GLdouble * v);
GLMIXEDBINDING_API void glWindowPos2dvARB(const GLdouble * v);
GLMIXEDBINDING_API void glWindowPos2dvMESA(const GLdouble * v);
GLMIXEDBINDING_API void glWindowPos2f(GLfloat x, GLfloat y);
GLMIXEDBINDING_API void glWindowPos2fARB(GLfloat x, GLfloat y);
GLMIXEDBINDING_API void glWindowPos2fMESA(GLfloat x, GLfloat y);
GLMIXEDBINDING_API void glWindowPos2fv(const GLfloat * v);
GLMIXEDBINDING_API void glWindowPos2fvARB(const GLfloat * v);
GLMIXEDBINDING_API void glWindowPos2fvMESA(const GLfloat * v);
GLMIXEDBINDING_API void glWindowPos2i(GLint x, GLint y);
GLMIXEDBINDING_API void glWindowPos2iARB(GLint x, GLint y);
GLMIXEDBINDING_API void glWindowPos2iMESA(GLint x, GLint y);
GLMIXEDBINDING_API void glWindowPos2iv(const GLint * v);
GLMIXEDBINDING_API void glWindowPos2ivARB(const GLint * v);
GLMIXEDBINDING_API void glWindowPos2ivMESA(const GLint * v);
GLMIXEDBINDING_API void glWindowPos2s(GLshort x, GLshort y);
GLMIXEDBINDING_API void glWindowPos2sARB(GLshort x, GLshort y);
GLMIXEDBINDING_API void glWindowPos2sMESA(GLshort x, GLshort y);
GLMIXEDBINDING_API void glWindowPos2sv(const GLshort * v);
GLMIXEDBINDING_API void glWindowPos2svARB(const GLshort * v);
GLMIXEDBINDING_API void glWindowPos2svMESA(const GLshort * v);
GLMIXEDBINDING_API void glWindowPos3d(GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glWindowPos3dARB(GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glWindowPos3dMESA(GLdouble x, GLdouble y, GLdouble z);
GLMIXEDBINDING_API void glWindowPos3dv(const GLdouble * v);
GLMIXEDBINDING_API void glWindowPos3dvARB(const GLdouble * v);
GLMIXEDBINDING_API void glWindowPos3dvMESA(const GLdouble * v);
GLMIXEDBINDING_API void glWindowPos3f(GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glWindowPos3fARB(GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glWindowPos3fMESA(GLfloat x, GLfloat y, GLfloat z);
GLMIXEDBINDING_API void glWindowPos3fv(const GLfloat * v);
GLMIXEDBINDING_API void glWindowPos3fvARB(const GLfloat * v);
GLMIXEDBINDING_API void glWindowPos3fvMESA(const GLfloat * v);
GLMIXEDBINDING_API void glWindowPos3i(GLint x, GLint y, GLint z);
GLMIXEDBINDING_API void glWindowPos3iARB(GLint x, GLint y, GLint z);
GLMIXEDBINDING_API void glWindowPos3iMESA(GLint x, GLint y, GLint z);
GLMIXEDBINDING_API void glWindowPos3iv(const GLint * v);
GLMIXEDBINDING_API void glWindowPos3ivARB(const GLint * v);
GLMIXEDBINDING_API void glWindowPos3ivMESA(const GLint * v);
GLMIXEDBINDING_API void glWindowPos3s(GLshort x, GLshort y, GLshort z);
GLMIXEDBINDING_API void glWindowPos3sARB(GLshort x, GLshort y, GLshort z);
GLMIXEDBINDING_API void glWindowPos3sMESA(GLshort x, GLshort y, GLshort z);
GLMIXEDBINDING_API void glWindowPos3sv(const GLshort * v);
GLMIXEDBINDING_API void glWindowPos3svARB(const GLshort * v);
GLMIXEDBINDING_API void glWindowPos3svMESA(const GLshort * v);
GLMIXEDBINDING_API void glWindowPos4dMESA(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLMIXEDBINDING_API void glWindowPos4dvMESA(const GLdouble * v);
GLMIXEDBINDING_API void glWindowPos4fMESA(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLMIXEDBINDING_API void glWindowPos4fvMESA(const GLfloat * v);
GLMIXEDBINDING_API void glWindowPos4iMESA(GLint x, GLint y, GLint z, GLint w);
GLMIXEDBINDING_API void glWindowPos4ivMESA(const GLint * v);
GLMIXEDBINDING_API void glWindowPos4sMESA(GLshort x, GLshort y, GLshort z, GLshort w);
GLMIXEDBINDING_API void glWindowPos4svMESA(const GLshort * v);
GLMIXEDBINDING_API void glWindowRectanglesEXT(GLenum mode, GLsizei count, const GLint * box);
GLMIXEDBINDING_API void glWriteMaskEXT(GLuint res, GLuint in, VertexShaderWriteMaskEXT outX, VertexShaderWriteMaskEXT outY, VertexShaderWriteMaskEXT outZ, VertexShaderWriteMaskEXT outW);


} // namespace glmixed


// Include function patches due to dinstinguished types GLint, GLuint, GLenum, and GLboolean
#include <glmixedbinding/glmixed/functions-patches.h>